TranslationUnitDecl 0x1ff40bd6d08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ff40bd75a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ff40bd72a0 '__int128'
|-TypedefDecl 0x1ff40bd7610 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ff40bd72c0 'unsigned __int128'
|-TypedefDecl 0x1ff40bd7948 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ff40bd7700 'struct __NSConstantString_tag'
|   `-Record 0x1ff40bd7668 '__NSConstantString_tag'
|-TypedefDecl 0x1ff40bd79b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|-TypedefDecl 0x1ff40bd7a50 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ff40bd7a10 'char *'
|   `-BuiltinType 0x1ff40bd6da0 'char'
|-TypedefDecl 0x1ff40bd7ac0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ff40bd7a10 'char *'
|   `-BuiltinType 0x1ff40bd6da0 'char'
|-TypedefDecl 0x1ff40bd7b80 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|-TypedefDecl 0x1ff40bd7bf0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ff40bd7a10 'char *'
|   `-BuiltinType 0x1ff40bd6da0 'char'
|-FunctionDecl 0x1ff426868c0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ff42686960 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ff426869d0 <col:21> Implicit
|-FunctionDecl 0x1ff42686a28 prev 0x1ff426868c0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ff42686750 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ff42686b18 <col:21> Inherited Implicit
|-TypedefDecl 0x1ff42686b58 prev 0x1ff40bd79b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|-TypedefDecl 0x1ff42686c00 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ff42686bd0 'size_t' sugar
|   |-Typedef 0x1ff42686b58 'size_t'
|   `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|-TypedefDecl 0x1ff42686c70 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ff40bd6e40 'long long'
|-TypedefDecl 0x1ff42686ce0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ff40bd6e40 'long long'
|-TypedefDecl 0x1ff42686d50 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|-TypedefDecl 0x1ff42686dc0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|-TypedefDecl 0x1ff42686e30 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|-TypedefDecl 0x1ff42686ea0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ff40bd6e00 'int'
|-TypedefDecl 0x1ff42686f10 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x1ff40bd6e20 'long'
|-TypedefDecl 0x1ff42686f80 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ff40bd6e40 'long long'
|-TypedefDecl 0x1ff42687010 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x1ff42686fe0 '__time64_t' sugar
|   |-Typedef 0x1ff42686f80 '__time64_t'
|   `-BuiltinType 0x1ff40bd6e40 'long long'
|-FunctionDecl 0x1ff42687188 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ff426873a8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ff426c95c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ff426874e8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ff42687560 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ff426875d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ff42687658 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ff426c9360 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ff426c96a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ff426c9760 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ff426c98d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ff426c9880 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ff426c9820 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ff426c9740 'struct threadlocaleinfostruct'
|       `-Record 0x1ff426cc390 'threadlocaleinfostruct'
|-TypedefDecl 0x1ff426c99e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ff426c9990 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ff426c9930 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ff426c9800 'struct threadmbcinfostruct'
|       `-Record 0x1ff426c9760 'threadmbcinfostruct'
|-RecordDecl 0x1ff426c9a38 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ff426c9af0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ff426c9bb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff426c9c40 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ff426c9cd0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ff426c9d88 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ff426c9d30 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ff426c9b90 'struct localeinfo_struct'
|     `-Record 0x1ff426c9af0 'localeinfo_struct'
|-TypedefDecl 0x1ff426c9e60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ff426c9e10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ff426c9d30 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ff426c9b90 'struct localeinfo_struct'
|       `-Record 0x1ff426c9af0 'localeinfo_struct'
|-RecordDecl 0x1ff426c9ed8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ff426c9f90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff426ca008 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ff426ca0c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ff426ca160 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ff426ca1d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ff426ca288 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ff426ca230 'struct localerefcount' sugar
|   `-RecordType 0x1ff426c9f70 'struct localerefcount'
|     `-Record 0x1ff426c9ed8 'localerefcount'
|-RecordDecl 0x1ff426cc390 prev 0x1ff426c96a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ff426cc410 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff426cc488 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ff426cc4f8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ff426cc568 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ff426cc5d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ff426cc798 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ff426cc808 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ff426cc878 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ff426cc8e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ff426cc958 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ff426cc9c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ff426cca20 parent 0x1ff40bd6d08 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ff426ccbb0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ff426ccc20 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ff426ccc90 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ff426ccd00 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ff426ccda0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ff426cce10 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ff426ccf20 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ff426cd058 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ff426cd108 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ff426cd0b0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ff426c9740 'struct threadlocaleinfostruct'
|     `-Record 0x1ff426cc390 'threadlocaleinfostruct'
|-FunctionDecl 0x1ff426ce490 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1ff426cd188 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1ff426cd200 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1ff426cd280 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1ff426ce690 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1ff426ce900 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1ff426ce788 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1ff426ceb50 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1ff426ce9d8 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1ff426cec38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ff426cecf0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff426ced68 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ff426cedd8 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ff426cee48 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ff426ceeb8 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ff426cef28 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ff426cef98 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ff426cf008 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ff426cf078 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ff426cf120 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ff426cf0d0 'struct _iobuf' sugar
|   `-RecordType 0x1ff426cecd0 'struct _iobuf'
|     `-Record 0x1ff426cec38 '_iobuf'
|-FunctionDecl 0x1ff426d8450 <line:137:9, col:39> col:24 used __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ff426d8520 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ff40bd6e40 'long long'
|-FunctionDecl 0x1ff426d8708 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff426d8588 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ff426d8a00 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff426d87e0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ff426d8858 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ff426d8db0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ff426d8ae0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ff426d8b60 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ff426d8be0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ff426d9000 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ff426d8e90 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ff426d9210 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ff426d90d0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ff42709790 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff426d92e0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ff42709980 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff42709c78 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ff42709a50 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ff42709ad0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ff42709e30 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff42709d50 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ff42709fe0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff42709f00 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ff4270a190 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff4270a0b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ff4270a340 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff4270a260 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ff4270a4d0 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff4270a870 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ff4270a598 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ff4270a688 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ff4270ac28 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ff4270a950 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ff4270a9d0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ff4270aa48 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ff4270ade8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff4270ad08 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ff4270b0b0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ff4270aec0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ff4270af40 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ff4270b248 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff4270b638 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ff4270b6d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff4270d7d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff4270d848 prev 0x1ff4270b638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ff4270b410 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ff4270b490 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ff4270d8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4270dd70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ff4270daa0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ff4270db20 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ff4270dba0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ff4270e090 <line:215:40> col:40 implicit used fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ff4270e130 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ff4270e198 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ff4270e210 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ff4270e278 prev 0x1ff4270e090 <col:28, col:125> col:40 used fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ff4270de50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ff4270ded0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ff4270e370 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ff4270e538 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ff4270e3b8 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ff4270e438 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ff4270c7c0 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff4270e618 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ff4270e690 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ff4270c9b8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff4270c8a0 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ff4270ccb0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ff4270ca90 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ff4270cb08 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ff4270d148 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ff4270d1e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ff4270d250 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ff4270d2b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ff4270d320 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ff4270d3a8 prev 0x1ff4270d148 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ff4270cd90 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ff4270ce08 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4270ce80 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4270cef8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ff42712920 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ff4270d498 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ff4270d510 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4270d588 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4270d600 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4270d678 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ff42712de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ff42712b10 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ff42712b90 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ff42712c08 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ff42712e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42713358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ff42712fe0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ff42713060 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ff427130e0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ff42713158 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ff42713700 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ff427137a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ff4270f7f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ff4270f868 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ff4270f8d0 prev 0x1ff42713700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ff42713538 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ff427135b8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ff4270fab0 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ff4270f980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4270fef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4270fbf8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ff4270fc78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ff4270fd10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff4270ffb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42710270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ff427100f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ff42710170 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ff42710560 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42710348 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ff427103c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ff42710440 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427118e0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ff42710640 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ff42710718 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ff42711c98 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ff427119b8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ff42711a38 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ff42711ab8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ff42711ef8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ff42711d78 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ff427122a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ff42711fc8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ff42712048 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ff427120c8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ff42712508 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ff42712388 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ff427109b8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ff42710a58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ff42710ac0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ff42710b28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ff42710b90 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ff42710c18 prev 0x1ff427109b8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ff42712610 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ff42712688 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42712700 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42712778 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ff42710de0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff42710d00 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ff42710f70 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff427110f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff42711410 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ff427111c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ff42711260 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff42711738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff427115f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ff4270b7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4270b9d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff4270b8f0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ff4270bbf0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ff4270baa8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ff4270bda0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff4270bcc0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ff4270bff0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ff4270be78 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ff4270bef8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ff4270c218 <line:264:40> col:40 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ff4270c2b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ff4270c328 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ff4270c390 prev 0x1ff4270c218 <col:28, col:102> col:40 used printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ff4270c0d0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ff4270c480 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ff4270c5b0 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ff4270c4d0 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ff427188e8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff4270c688 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ff4270c700 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ff42718aa8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff427189c8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ff42718cc8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff42718b80 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ff42718f18 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff42718da0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ff42718e18 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ff427190d8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff42718ff8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ff427193a0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff427191b0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ff42719230 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ff42719560 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff42719480 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ff42716860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ff42719710 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ff42716908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ff42716b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ff42716a28 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ff42716c90 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff42716f38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ff42716fd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ff42717048 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ff427170b0 prev 0x1ff42716f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ff42716e20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ff42717288 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ff42717158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42717600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff427173d0 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ff42717448 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427176b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42719908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ff427177f8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ff42719b58 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff427199e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ff42719a58 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42719f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ff42719cf0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ff42719d70 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ff42719fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271a1f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff4271a110 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ff4271a418 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ff4271a2c8 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ff4271a600 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ff42715a60 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ff4271a6c8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271a748 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ff4271a7c8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ff42715850 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42715ee0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff42715b50 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42715bc8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42715c40 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42715cc0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ff427162b8 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff42715fd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42716048 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427160c8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ff42716480 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ff427163a0 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ff42717870 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ff42717910 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ff42717978 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ff427179f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ff42717a58 prev 0x1ff42717870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ff42716618 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ff42716698 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ff42717c38 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ff42717b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42718028 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42717d48 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ff42717dc8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ff42717e40 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427180e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427183a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ff42718228 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ff427182a8 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ff427186a0 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42718488 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ff42718508 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ff42718580 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4271bb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff4271b8b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ff4271b928 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271b9a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ff4271bc50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271c220 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4271be90 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ff4271bf08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271bf88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271c000 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff4271c2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271c640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff4271c428 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ff4271c4a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4271c520 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ff42714980 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4271c728 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ff4271c7a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271c820 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ff42714840 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42714be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ff42714c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42714f40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ff42714dc8 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ff42715238 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ff42715018 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ff42715090 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff427154b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff427153d8 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ff42715560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271f8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff427156a8 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ff42715720 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ff4271fd00 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff4271fda0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ff4271fe08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff4271fe70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff4271fef0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ff4271ff58 prev 0x1ff4271fd00 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ff4271f9c8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271fa48 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271fac0 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ff42720058 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ff42720300 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff427203a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ff42720408 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ff42720470 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff427204f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ff42720558 prev 0x1ff42720300 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ff427200a0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ff42720120 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ff42720198 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ff42720658 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ff42720900 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ff427206a0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ff42720720 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ff42720798 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42720bf8 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ff427209e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ff42720a60 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ff42720ad8 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42720f38 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff42720fd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff42721040 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff427210b8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ff42721120 prev 0x1ff42720f38 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ff42720ce0 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ff42720d58 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ff42721218 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ff42721418 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff427214b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ff42721520 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff42721598 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ff42721600 prev 0x1ff42721418 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ff42721268 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ff427212e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ff427216f8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ff42721910 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ff42721748 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ff427217c0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42721b68 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ff427219f0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ff42721a68 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427220c8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff42722168 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff427221d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ff42722238 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff427222a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff42722328 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ff42722390 prev 0x1ff427220c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ff42721d08 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42721d80 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42721e00 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ff42721e78 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ff42722580 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ff42722450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271c9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff427225d0 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42722648 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427226c0 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42722740 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ff427227b8 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4271ce08 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff4271cac0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4271cb38 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271cbb0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271cc30 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271cca8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4271d1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff4271cfc0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ff4271d038 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271d0b8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ff4271d290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271d748 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff4271d498 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ff4271d510 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271d590 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271d608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ff4271d808 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271ec90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff4271e9e0 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4271ea58 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4271ead8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271eb50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4271f058 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ff4271ed80 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ff4271ee00 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271ee78 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4271f400 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ff4271f4a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff4271f508 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ff4271f580 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ff4271f5e8 prev 0x1ff4271f400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ff4271f200 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ff4271f280 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ff4271f7c8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ff4271f698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271abc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff4271ac60 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff4271acc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff4271ad30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff4271adb0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ff4271ae18 prev 0x1ff4271abc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ff4271a8a0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ff4271a920 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271a998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ff4271b000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ff4271aed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4271b2b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ff4271b350 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ff4271b3b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ff4271b420 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ff4271b4a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ff4271b508 prev 0x1ff4271b2b0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ff4271b050 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ff4271b0d0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271b148 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ff4271b608 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ff4271b7d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ff4271b658 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271b6d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42722b50 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff42722938 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff427229b0 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42722a30 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ff42722ee8 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff42722c38 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42722cb0 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42722d30 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ff42722da8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42723150 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ff42722fd0 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ff42723050 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ff42723310 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ff42723230 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ff42723600 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ff427233e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ff42723460 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427234e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ff42723930 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ff427236e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ff42723760 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ff427237d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42723b90 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ff42723a18 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ff42723a90 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42723f20 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ff42723c70 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ff42723ce8 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42723d68 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ff42723de0 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427240f0 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ff42724010 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ff42724340 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ff427241c8 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ff42724240 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42724500 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff42724420 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ff42724690 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff42724940 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42724760 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ff427247d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42724b98 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42724a20 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ff42724a98 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42724df0 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42724c78 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ff42724cf0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42725198 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42724ed0 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ff42724f48 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42724fc0 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42725490 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42725280 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ff427252f8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42725370 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42725788 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42725578 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ff427255f0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42725668 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4271da68 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42725868 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271d8d0 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271d948 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4271dd60 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4271db48 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271dbc8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271dc40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4271e058 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4271de40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271dec0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ff4271df38 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4271e4b0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4271e138 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271e1b8 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271e230 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4271e2a8 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42727970 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4271e598 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ff4271e618 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ff4271e690 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4271e708 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42727d08 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42727a58 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ff42727ad8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ff42727b50 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42727bc8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42728198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42727eb8 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42727f38 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ff42727fb0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42728250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42728720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42728398 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42728410 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42728490 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ff42728508 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42725aa0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42728810 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42728888 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42728908 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ff42725960 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42725ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42725c90 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42725d10 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ff42725d88 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ff42725e00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ff427260b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42726618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff427261f8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42726270 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427262f0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ff42726368 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff427263e0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4274d8c0 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42726710 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42726788 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42726808 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ff42726880 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4274d760 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4274db30 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4274d9b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ff4274da30 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4274dd88 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4274dc10 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ff4274dc88 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4274e078 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4274de68 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ff4274dee0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4274df58 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4274e370 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4274e160 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ff4274e1d8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4274e250 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42750808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4274e518 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4274e590 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4274e610 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ff4274e688 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427508c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42750cc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42750a10 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42750a88 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42750b08 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ff42750b80 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427511e8 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42750db0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42750e28 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42750ea0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42750f20 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ff42750f98 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427527b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff427513e8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42751460 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427514e0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ff42751558 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ff427515d0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ff42752878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42752cf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff427529c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42752a40 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42752ac0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ff42752b38 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42752bb0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427532c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42752df0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42752e68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42752ee0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42752f60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ff42752fd8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42753050 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42753680 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ff427533b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff42753430 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ff427534b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ff4274e8e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ff4274e770 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ff4274eaf8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ff4274edd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ff4274ebc0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ff4274ec38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ff4274f020 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ff4274eeb0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff4274f1c8 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ff4274f0f0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ff4274f350 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ff4274f588 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ff4274f418 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ff4274f490 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ff427547d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ff4274f660 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff42754a78 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ff427548a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff42754918 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ff42754e20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ff42754b50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff42754bd0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ff42754c48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ff42755120 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ff42754f00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff42754f78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ff42755418 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff427551f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ff42755270 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42755720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff427555b0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ff427567f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42756aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ff42756930 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff42756db0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42756b78 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ff42756bf0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42757000 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42756e88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ff42756f00 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42757268 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff427570d8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42757418 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff42757338 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff427575c8 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff427574e8 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff4274f8f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42757698 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ff42757710 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42757788 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4274fbe8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff4274f9d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ff4274fa50 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4274fac8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4274fed8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff4274fcc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ff4274fd40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4274fdb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427501c8 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff4274ffb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ff42750030 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff427500a8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427504d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff427502a8 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42750320 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427557e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff427505a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42750620 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42755a30 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff427558b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42755930 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42755c80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42755b08 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42755b80 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42756038 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42755d58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff42755dd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42755e48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42756490 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42756118 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff42756190 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42756208 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42756280 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42757878 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42756578 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff427565f0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42756668 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42757b68 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42757958 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ff427579d0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42757a48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42757e58 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42757c48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42757cc0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42757d38 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff427581e0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42757f38 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42757fb0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42758028 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff427580a0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42758650 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff427582c8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42758340 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427583b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42758430 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42758bb8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42758738 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42758810 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42758888 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42758900 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42758978 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42758f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42758d68 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42758de0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42758e58 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42759030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427594d8 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42759230 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff427592a8 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42759320 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42759398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ff42759598 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427517e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff427596d8 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ff42759750 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42751998 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff427518b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42751c78 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42751a68 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ff42751ae0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42751b58 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42751ed0 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42751d58 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42751dd0 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff427521b8 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42751fa8 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42752020 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42752098 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42752540 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42752298 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42752310 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42752388 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42752400 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275f880 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff42752628 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff4275fac8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff4275f950 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275f9c8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275fdd0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275fba0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275fc18 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42760020 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275fea8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275ff20 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42760270 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff427600f8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42760170 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42760618 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42760348 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff427603c0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42760438 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275a8b8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff427606f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42760770 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff427607e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275aba8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275a998 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275aa10 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275aa88 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275af68 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275ac88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275ad00 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275ad78 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275b258 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275b048 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275b0c0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275b138 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275b548 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275b338 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275b3b0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275b428 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275c9c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275b628 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275b6a0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275b718 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275b790 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275cd50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275caa8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275cb20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275cb98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275cc10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275d0e0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275ce38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ff4275ceb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275cf28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275cfa0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275d550 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275d1c8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275d240 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275d2b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275d330 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275d8f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275d638 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275d6b0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275d728 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275d7a0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275dc80 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275d9d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275da50 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275dac8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275db40 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275e188 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275dd68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275dde0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275de58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275ded0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275df48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275e5b8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275e278 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275e2f0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275e368 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275e3e0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275e458 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275ea48 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275e6a8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275e720 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275e798 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275e870 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275e8e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275ecb0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275eb38 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275ebb0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275ef00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275ed88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4275ee00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4275f1e8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff4275efd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275f050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff4275f0c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff4275f638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4275f390 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4275f408 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4275f480 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275f4f8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff4275f6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42760cb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42760890 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42760908 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42760980 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427609f8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42760a70 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427611f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42760eb0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42760f28 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42760fa0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42761018 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ff42761090 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ff427612b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42759880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42761400 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42761478 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427614f0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42761568 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff427615e0 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42761658 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42759d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42759b48 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42759bc0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ff42759e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ff42759f48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ff4275a4c8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff4275a200 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff4275a278 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4275a2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ff4275a580 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ff4275a698 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ff42767d88 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42767aa8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42767b20 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42767b98 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ff42767e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ff42767f60 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ff42768590 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42768220 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42768298 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42768310 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ff42768388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ff42768650 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ff42768770 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ff42763a38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ff42768898 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ff427638d0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42763948 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ff42764550 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ff42763b80 <line:38:5, col:21>
|   | `-VarDecl 0x1ff42763b18 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ff42763c18 <line:39:5, col:13>
|   | `-VarDecl 0x1ff42763bb0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ff42763f70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ff42763f58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ff42763e70 <col:34> '<builtin fn type>' Function 0x1ff42763d08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ff42763ea8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ff42763b18 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ff42763ee0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ff42763948 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ff42764230 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ff42763fa0 <col:5> 'int' lvalue Var 0x1ff42763bb0 '_Ret' 'int'
|   | `-CallExpr 0x1ff42764170 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ff42764158 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff42763fd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ff4275e188 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ff427641b8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff42763ff8 <col:27> 'wchar_t *' lvalue ParmVar 0x1ff42768898 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ff427641d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff42764018 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427638d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427641e8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff42764038 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ff42763948 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ff42764200 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ff427640c0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ff42764098 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ff42764058 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ff42764218 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff427640e0 <col:59> 'va_list':'char *' lvalue Var 0x1ff42763b18 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ff427644e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ff427644c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ff42764418 <col:34> '<builtin fn type>' Function 0x1ff427642b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ff42764450 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ff42763b18 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ff42764540 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ff42764528 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff42764508 <col:12> 'int' lvalue Var 0x1ff42763bb0 '_Ret' 'int'
|-FunctionDecl 0x1ff42763d08 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ff42763da8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ff42763e18 <col:34> Implicit
|-FunctionDecl 0x1ff427642b0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ff42764350 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ff427643c0 <col:34> Implicit
|-FunctionDecl 0x1ff427648d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ff427645a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ff42764618 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42764690 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42764708 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ff42764bb8 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ff42764ba8 <line:51:5, col:62>
|     `-CallExpr 0x1ff42764ae8 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ff42764ad0 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff427649a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ff4275e188 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ff42764b30 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff427649c8 <col:27> 'wchar_t *' lvalue ParmVar 0x1ff427645a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ff42764b48 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff427649e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff42764618 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ff42764b60 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff42764a08 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ff42764690 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ff42764b78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ff42764a90 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ff42764a68 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ff42764a28 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ff42764b90 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff42764ab0 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ff42764708 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ff42764e58 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ff42764be0 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ff42764c58 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42764cd0 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42764d48 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ff427653d0 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ff42764fa8 <line:62:5, col:21>
|   | `-VarDecl 0x1ff42764f40 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ff42765040 <line:63:5, col:13>
|   | `-VarDecl 0x1ff42764fd8 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ff427650e8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ff427650d0 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ff42765058 <col:34> '<builtin fn type>' Function 0x1ff42763d08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ff42765078 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ff42764f40 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ff427650b0 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ff42764d48 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ff427652e8 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ff42765118 <col:5> 'int' lvalue Var 0x1ff42764fd8 '_Ret' 'int'
|   | `-CallExpr 0x1ff42765228 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ff42765210 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff42765150 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ff4275e188 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ff42765270 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff42765170 <col:27> 'wchar_t *' lvalue ParmVar 0x1ff42764be0 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ff42765288 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff42765190 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff42764c58 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427652a0 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff427651b0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ff42764cd0 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ff427652b8 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff427651d0 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ff42764d48 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ff427652d0 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff427651f0 <col:64> 'va_list':'char *' lvalue Var 0x1ff42764f40 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ff42765360 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ff42765348 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ff42765308 <col:34> '<builtin fn type>' Function 0x1ff427642b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ff42765328 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ff42764f40 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ff427653c0 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ff427653a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff42765388 <col:12> 'int' lvalue Var 0x1ff42764fd8 '_Ret' 'int'
|-FunctionDecl 0x1ff42765760 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ff42765420 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ff42765498 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42765510 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42765588 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ff42765600 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ff42765a08 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ff427659f8 <line:75:5, col:67>
|     `-CallExpr 0x1ff42765938 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ff42765920 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff42765840 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ff4275e188 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ff42765980 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff42765860 <col:27> 'wchar_t *' lvalue ParmVar 0x1ff42765420 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ff42765998 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff42765880 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff42765498 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ff427659b0 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff427658a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ff42765510 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ff427659c8 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff427658e0 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ff42765588 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ff427659e0 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff42765900 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ff42765600 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ff42765c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42765a30 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ff42765aa8 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ff42765e98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ff42765d20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42765d98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42766180 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ff42765f70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42765fe8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ff42766060 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ff42766498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42766320 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ff42766398 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42766548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42762938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42766748 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ff427667c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42766838 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427629f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42762ca8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42762b30 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ff42762ba8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42762f90 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42762d80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ff42762df8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42762e70 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42763360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42763130 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff427631a8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42763410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427618e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42763610 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42763688 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff42763700 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427619a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42761c58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42761ae0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff42761b58 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff42761f40 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42761d30 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42761da8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff42761e20 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427623b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff427620e0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42762158 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427621d0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42762470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42769a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42762670 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff427626e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42762760 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff427627d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42769b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42769e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff42769c70 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42769ce8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42769d60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff4276a208 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff42769f60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42769fd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4276a050 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4276a0c8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4276a490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ff4276a3b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ff4276a538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4276a930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4276a738 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff4276a7b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff4276a9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4276ac00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ff4276ab20 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ff4276ae48 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ff4276acd0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff4276ad48 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4276b148 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ff4276af28 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ff4276afa0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ff4276b4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4276b2e0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff4276b358 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ff4276b5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4276b9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4276b6f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ff4276b768 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ff4276b7e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ff4276be40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ff4276bb80 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff4276bbf8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ff4276bc70 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ff4276bef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4276c3a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ff4276c040 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ff4276c0b8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff4276c130 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ff4276c1a8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ff4276c600 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ff4276c490 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ff4276c840 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4276c6d0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ff4276c748 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ff427721b0 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ff427720d0 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ff42772498 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42772280 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ff427722f8 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42772708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff42772630 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ff427727b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427729c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ff427728f0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ff42772c08 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ff42772a98 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ff42772b10 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ff42772e50 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ff42772ce0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff42772d58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ff42773000 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ff42772f28 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ff427771f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ff42777120 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ff427773a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff427772c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ff42777558 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ff42777478 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ff427778d0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ff42777630 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ff427776a8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42777720 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42777798 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ff42777cf8 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ff427779c0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ff42777a38 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42777ab0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42777b28 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42777ba0 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ff42778008 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ff42777de8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ff42777e68 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ff42777ee8 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ff42778210 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ff42778130 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ff42778500 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ff427782e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ff42778360 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ff427783e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ff427786c0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ff427785e0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ff42778a38 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ff42778798 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ff42778810 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42778888 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42778900 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ff42778ca0 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff42778b28 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ff42778ba0 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ff42778fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ff42778e60 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ff42778ee0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ff42779090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ff42773358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ff427733f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ff42773738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ff427735c0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ff42773640 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ff427737e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ff42773aa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ff42773b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ff42773de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ff42773d08 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ff42773e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ff42776140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ff427761e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ff42776488 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ff427763a8 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ff42776530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ff42776808 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ff42776728 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ff427768b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ff42776bf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ff42776a78 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ff42776af0 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ff42776ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ff42776f58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ff42776ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1ff4277b318 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1ff4277b2b0 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1ff4277b250 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1ff4277b200 'int (void)' sugar
|     | `-FunctionProtoType 0x1ff427098d0 'int (void)' cdecl
|     |   `-BuiltinType 0x1ff40bd6e00 'int'
|     `-ParenType 0x1ff4277b200 'int (void)' sugar
|       `-FunctionProtoType 0x1ff427098d0 'int (void)' cdecl
|         `-BuiltinType 0x1ff40bd6e00 'int'
|-RecordDecl 0x1ff4277b370 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1ff4277b430 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff4277b4a8 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1ff4277b518 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1ff4277b5c8 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1ff4277b570 'struct _div_t' sugar
|   `-RecordType 0x1ff4277b410 'struct _div_t'
|     `-Record 0x1ff4277b370 '_div_t'
|-RecordDecl 0x1ff4277b638 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1ff4277b6f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff4277b768 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1ff4277b7d8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1ff4277b888 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1ff4277b830 'struct _ldiv_t' sugar
|   `-RecordType 0x1ff4277b6d0 'struct _ldiv_t'
|     `-Record 0x1ff4277b638 '_ldiv_t'
|-RecordDecl 0x1ff4277b8f8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1ff4277b9b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff4277ba28 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1ff4277ba98 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1ff4277bb48 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1ff4277baf0 'struct _lldiv_t' sugar
|   `-RecordType 0x1ff4277b990 'struct _lldiv_t'
|     `-Record 0x1ff4277b8f8 '_lldiv_t'
|-RecordDecl 0x1ff4277bbe0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1ff4277bca0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1ff4277bda0 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1ff4277be58 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1ff4277be00 'struct _LDOUBLE' sugar
|   `-RecordType 0x1ff4277bc80 '_LDOUBLE'
|     `-Record 0x1ff4277bbe0 ''
|-RecordDecl 0x1ff4277bec8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1ff4277bf98 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1ff4277c048 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1ff4277bff0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1ff4277bf60 '_CRT_DOUBLE'
|     `-Record 0x1ff4277bec8 ''
|-RecordDecl 0x1ff4277c0b8 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1ff4277c1a8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1ff4277c258 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1ff4277c200 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1ff4277c170 '_CRT_FLOAT'
|     `-Record 0x1ff4277c0b8 ''
|-RecordDecl 0x1ff4277c2c8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1ff4277c398 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1ff4277c448 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1ff4277c3f0 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1ff4277c360 '_LONGDOUBLE'
|     `-Record 0x1ff4277c2c8 ''
|-RecordDecl 0x1ff4277c4e0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1ff4277c5a0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1ff4277c6a0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1ff4277c758 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1ff4277c700 'struct _LDBL12' sugar
|   `-RecordType 0x1ff4277c580 '_LDBL12'
|     `-Record 0x1ff4277c4e0 ''
|-VarDecl 0x1ff4277c7e0 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1ff4277c930 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff4277cb58 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1ff4277c9f8 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1ff4277cda0 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1ff4277cd40 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1ff4277cce0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1ff4277cc90 'void (void)' sugar
|     | `-FunctionProtoType 0x1ff426870e0 'void (void)' cdecl
|     |   `-BuiltinType 0x1ff40bd6d60 'void'
|     `-ParenType 0x1ff4277cc90 'void (void)' sugar
|       `-FunctionProtoType 0x1ff426870e0 'void (void)' cdecl
|         `-BuiltinType 0x1ff40bd6d60 'void'
|-FunctionDecl 0x1ff4277cfa0 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1ff4277ce30 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1ff42783238 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1ff42783688 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1ff42783600 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1ff427835a0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1ff42783550 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1ff426c9420 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1ff40bd6d60 'void'
|     |   |-PointerType 0x1ff426874b0 'const wchar_t *'
|     |   | `-QualType 0x1ff42687461 'const wchar_t' const
|     |   |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|     |   |     |-Typedef 0x1ff42686d50 'wchar_t'
|     |   |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|     |   |-PointerType 0x1ff426874b0 'const wchar_t *'
|     |   | `-QualType 0x1ff42687461 'const wchar_t' const
|     |   |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|     |   |     |-Typedef 0x1ff42686d50 'wchar_t'
|     |   |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|     |   |-PointerType 0x1ff426874b0 'const wchar_t *'
|     |   | `-QualType 0x1ff42687461 'const wchar_t' const
|     |   |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|     |   |     |-Typedef 0x1ff42686d50 'wchar_t'
|     |   |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|     |   |-BuiltinType 0x1ff40bd6ea0 'unsigned int'
|     |   `-TypedefType 0x1ff426876c0 'uintptr_t' sugar
|     |     |-Typedef 0x1ff40bd7b80 'uintptr_t'
|     |     `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|     `-ParenType 0x1ff42783550 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1ff426c9420 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1ff40bd6d60 'void'
|         |-PointerType 0x1ff426874b0 'const wchar_t *'
|         | `-QualType 0x1ff42687461 'const wchar_t' const
|         |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|         |     |-Typedef 0x1ff42686d50 'wchar_t'
|         |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|         |-PointerType 0x1ff426874b0 'const wchar_t *'
|         | `-QualType 0x1ff42687461 'const wchar_t' const
|         |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|         |     |-Typedef 0x1ff42686d50 'wchar_t'
|         |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|         |-PointerType 0x1ff426874b0 'const wchar_t *'
|         | `-QualType 0x1ff42687461 'const wchar_t' const
|         |   `-TypedefType 0x1ff42687460 'wchar_t' sugar
|         |     |-Typedef 0x1ff42686d50 'wchar_t'
|         |     `-BuiltinType 0x1ff40bd6e80 'unsigned short'
|         |-BuiltinType 0x1ff40bd6ea0 'unsigned int'
|         `-TypedefType 0x1ff426876c0 'uintptr_t' sugar
|           |-Typedef 0x1ff40bd7b80 'uintptr_t'
|           `-BuiltinType 0x1ff40bd6ee0 'unsigned long long'
|-FunctionDecl 0x1ff42783880 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1ff42783710 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1ff42783a98 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1ff42783cb0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1ff42783ef0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1ff42783d80 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1ff42784140 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1ff42783fc8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1ff42784400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1ff427844a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42784760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1ff42784800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1ff42784948 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1ff427849e0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1ff42784ad0 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1ff42784b68 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1ff42784c00 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1ff42784d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1ff42784dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1ff42784fc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1ff42785028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4277f290 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1ff42785170 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1ff4277f4e0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1ff4277f368 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1ff4277f678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1ff4277f6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4277f900 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1ff4277f828 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1ff4277fab0 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1ff4277f9d8 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1ff4277fd00 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1ff4277fda0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4277fe10 prev 0x1ff4277fd00 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1ff4277fb88 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1ff4277ffc0 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1ff42780060 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff427800d0 prev 0x1ff4277ffc0 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1ff4277fee8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1ff42780268 <line:379:43> col:43 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1ff42780308 prev 0x1ff42780268 <col:9, col:53> col:43 used abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ff427805c0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1ff427803d8 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1ff42780458 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1ff42780780 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1ff42780820 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff42780890 <col:19> Implicit
| `-ConstAttr 0x1ff427808e8 <col:19> Implicit
|-FunctionDecl 0x1ff42780910 prev 0x1ff42780780 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1ff427806a0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1ff42780a00 <col:19> Inherited Implicit
| `-ConstAttr 0x1ff42780a28 <col:19> Inherited Implicit
|-FunctionDecl 0x1ff42780bb8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1ff42780c58 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1ff42780cc8 <col:19> Implicit
| `-ConstAttr 0x1ff42780d20 <col:19> Implicit
|-FunctionDecl 0x1ff42780d48 prev 0x1ff42780bb8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1ff42780a68 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1ff42780e38 <col:19> Inherited Implicit
| `-ConstAttr 0x1ff42780e60 <col:19> Inherited Implicit
|-FunctionDecl 0x1ff42780fe8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1ff42781088 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1ff427810f8 <col:19> Implicit
| `-ConstAttr 0x1ff42781150 <col:19> Implicit
|-FunctionDecl 0x1ff4277e190 prev 0x1ff42780fe8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1ff42780ea0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1ff4277e280 <col:19> Inherited Implicit
| `-ConstAttr 0x1ff4277e2a8 <col:19> Inherited Implicit
|-FunctionDecl 0x1ff4277e3b0 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1ff4277e2e8 <col:35> col:42 'long long'
|-FunctionDecl 0x1ff4277e6a8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1ff4277e548 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1ff4277e8c8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1ff4277e780 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1ff4277ebc0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff4277e9a0 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1ff4277ea18 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4277ed80 <line:430:43, col:86> col:58 used atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff4277eca0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1ff4277f080 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff4277ee58 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ff4277eed0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42786358 <line:432:24, col:67> col:39 used atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1ff42786210 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1ff42786650 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff42786430 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ff427864a8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42786878 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1ff42786730 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1ff42786b70 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff42786950 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1ff427869c8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42787420 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1ff42786c50 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1ff42786cd0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1ff42786d48 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42786dc0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42787120 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1ff427871a0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1ff42787ba8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1ff42787520 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1ff427875a0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1ff42787618 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42787690 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42787968 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1ff427882e0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1ff42787ca0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1ff42787d18 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42787d90 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42787ff8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1ff42788078 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1ff427888a8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1ff427883d8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1ff42788450 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427884c8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427886a8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1ff42788aa8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1ff42788b48 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1ff42788bb8 <col:47> Implicit
| `-ConstAttr 0x1ff42788c10 <col:47> Implicit
|-FunctionDecl 0x1ff42788c38 prev 0x1ff42788aa8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1ff42788998 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1ff42788d28 <col:47> Inherited Implicit
| `-ConstAttr 0x1ff42788d50 <col:47> Inherited Implicit
|-FunctionDecl 0x1ff42788ed8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1ff42788f78 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1ff42788fe8 <col:47> Implicit
| `-ConstAttr 0x1ff42789040 <col:47> Implicit
|-FunctionDecl 0x1ff42789068 prev 0x1ff42788ed8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1ff42788d90 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1ff42789158 <col:47> Inherited Implicit
| `-ConstAttr 0x1ff42789180 <col:47> Inherited Implicit
|-FunctionDecl 0x1ff427812a8 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1ff42781348 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1ff427813b8 <col:49> Implicit
| `-ConstAttr 0x1ff42781410 <col:49> Implicit
|-FunctionDecl 0x1ff42781438 prev 0x1ff427812a8 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1ff427891c0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1ff42781528 <col:49> Inherited Implicit
| `-ConstAttr 0x1ff42781550 <col:49> Inherited Implicit
|-FunctionDecl 0x1ff427817d8 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1ff427815b8 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1ff42781638 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1ff42781ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 used getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1ff42781978 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1ff42781b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42782088 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ff42781d08 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1ff42781d88 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42781e00 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42781e80 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1ff427824a0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1ff427821d0 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1ff42782248 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1ff427822c8 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1ff42782908 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1ff42782588 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1ff42782608 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42782680 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42782700 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1ff42782d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1ff42782ab8 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1ff42782b38 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ff42782bb8 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1ff42782e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4278d3b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1ff42782f58 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1ff42782fd8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42783050 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427830d0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1ff4278d808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1ff4278d568 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1ff4278d5e8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4278d668 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1ff4278d8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4278dd88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1ff4278da08 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff4278da88 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4278db00 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4278db80 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1ff4278e1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1ff4278df38 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff4278dfb8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4278e038 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1ff4278a268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4278a490 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1ff4278a3b0 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1ff4278a6e0 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff4278a568 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1ff4278a5e0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278aa58 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff4278a7c0 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1ff4278a840 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4278a8c0 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1ff4278aec0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff4278ab40 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1ff4278abc0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff4278ac40 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1ff4278acb8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278f2a0 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff4278afb0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1ff4278b030 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4278b0b0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1ff4278f710 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff4278f388 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1ff4278f408 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff4278f488 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1ff4278f500 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278fa48 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1ff4278f828 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1ff4278f8a8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1ff4278fd68 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1ff4278fb48 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1ff4278fbc8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1ff427901c8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1ff4278fe48 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1ff4278fec8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4278ff40 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4278ffc0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1ff4278c5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1ff4278c348 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1ff4278c3c8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1ff4278c448 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1ff4278c6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4278ca10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1ff4278c7e8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1ff4278c860 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4278cdb8 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff4278caf0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1ff4278cb68 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4278cbe0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278d010 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1ff4278cea0 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1ff4278e358 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1ff4278d0e8 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1ff4278d160 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278e658 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1ff4278e438 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1ff4278e4b0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4278ea00 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff4278e738 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1ff4278e7b0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4278e828 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278edb8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1ff4278eae0 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1ff4278eb60 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1ff4278ebd8 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427902b0 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff4278ee98 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1ff4278ef18 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1ff4278ef90 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4278f008 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427907b0 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1ff42790398 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1ff42790410 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42790488 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42790508 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1ff42790580 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42790c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1ff42790960 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff427909e0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1ff42790a58 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42790ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42791318 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42790e28 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1ff42790ea0 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff42790f18 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42790f98 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1ff42791010 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42791088 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42791848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff427914d0 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42791550 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1ff427915c8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42791640 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42791908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42791b08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ff42791cb8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff42791bd8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1ff42791ed0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1ff42791d90 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1ff42792190 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1ff42792230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff427922d0 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1ff42792348 prev 0x1ff42792190 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1ff42791fa8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ff42792028 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1ff427926f8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1ff42792428 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1ff427924a8 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff42792520 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42792a78 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1ff42792b18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff42792b80 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1ff42792be8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff42792c68 prev 0x1ff42792a78 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff427927e0 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1ff42792860 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff427928e0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1ff427930d0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff42792d50 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1ff42792dd0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff42792e50 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1ff42792ec8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278b380 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1ff4278b420 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff4278b488 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1ff4278b4f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4278b570 prev 0x1ff4278b380 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff427931c0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1ff42793240 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4278b260 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1ff4278b910 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff4278b658 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1ff4278b6d8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff4278b758 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1ff4278b7d0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4278bc98 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1ff4278bd38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff4278bda0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1ff4278be08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4278be88 prev 0x1ff4278bc98 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff4278ba00 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1ff4278ba80 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4278bb00 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1ff4279a400 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff4278bf70 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1ff4278bff0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff4278c070 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1ff4278c0e8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4279a710 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1ff4279a7b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff4279a818 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1ff4279a880 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4279a900 prev 0x1ff4279a710 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1ff4279a4f0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1ff4279a570 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4279a5f0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1ff4279aca0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1ff4279a9e8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1ff4279aa68 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1ff4279aae8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1ff4279ab60 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4279af80 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1ff4279b020 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff4279b088 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1ff4279b100 prev 0x1ff4279af80 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1ff4279ad90 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1ff4279ae10 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1ff427994b8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1ff4279b1e0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1ff4279b260 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff4279b2d8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42799790 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1ff42799830 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42799898 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1ff42799910 prev 0x1ff42799790 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1ff427995a0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1ff42799620 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1ff42799cc8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1ff427999f0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1ff42799a70 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1ff42799ae8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42799e90 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff42799db0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1ff42795300 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1ff42799f68 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1ff42799fe8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff4279a060 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4279a0e0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1ff42795748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1ff427954b0 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1ff42795530 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1ff427955b0 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1ff42795800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42795c30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1ff42795a08 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1ff42795a80 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ff42795ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427961b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1ff42795ee8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1ff42795f60 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ff42795fd8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42796270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42794768 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1ff427943f0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1ff42794470 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1ff427944e8 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42794560 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff42794c70 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1ff42794858 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1ff427948d8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1ff42794950 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427949c8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ff42794a40 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42795180 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42794d60 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1ff42794de0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1ff42794e58 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42794ed0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff42794f48 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427986d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42798408 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1ff42798480 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ff427984f8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42798788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42798d88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff427988c8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1ff42798948 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1ff427989c0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42798a38 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42798ab0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42798b28 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427932e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42798f48 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1ff42798fc0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ff42799038 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427990b0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427933a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42793700 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1ff427937a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ff42793808 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42793880 prev 0x1ff42793700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1ff427934e0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42793558 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff42793930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff42793988 <line:615:33> restrict
|-FunctionDecl 0x1ff42793b20 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1ff427939e0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1ff42793bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1ff42793dc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1ff42793e68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42793ed8 prev 0x1ff42793dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1ff42793c48 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff42793f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff42793fd8 <line:615:33> restrict
|-FunctionDecl 0x1ff4279b360 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff4279b400 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1ff4279b468 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff4279b4e0 prev 0x1ff4279b360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1ff42794030 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1ff427940a8 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279b590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279b5e8 <line:615:33> restrict
|-FunctionDecl 0x1ff4279b908 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279b640 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1ff4279b6b8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279b730 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279b9c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279ba18 <line:615:33> restrict
|-FunctionDecl 0x1ff4279bb48 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1ff4279ba70 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1ff4279bbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1ff4279bde8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1ff4279bc70 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279bce8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279be98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279bef0 <line:615:33> restrict
|-FunctionDecl 0x1ff4279c208 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279bf40 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279bfb8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279c030 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279c2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279c318 <line:615:33> restrict
|-FunctionDecl 0x1ff4279d5a8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279d398 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1ff4279d410 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279d488 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279d660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279d6b8 <line:615:33> restrict
|-FunctionDecl 0x1ff4279da80 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279d710 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1ff4279d788 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279d800 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279d878 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279db40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279db98 <line:615:33> restrict
|-FunctionDecl 0x1ff4279de98 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279dbf0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1ff4279dc68 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279dce0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279dd58 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff4279df58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff4279dfb0 <line:615:33> restrict
|-FunctionDecl 0x1ff427963c8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1ff4279e008 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1ff4279e080 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279e0f8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279e170 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4279e1e8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1ff42796490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1ff427964e8 <line:615:33> restrict
|-FunctionDecl 0x1ff42796800 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1ff42796540 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1ff427965b8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42796630 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42796c58 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff427968e8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1ff42796960 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff427969d8 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42796a58 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1ff427970d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1ff42796e08 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1ff42796e80 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42796f00 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1ff42797188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4279e708 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff4279e390 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1ff4279e408 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4279e480 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4279e500 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1ff4279eb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1ff4279e8b8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1ff4279e930 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff4279e9b0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1ff4279ec38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4279f0f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff4279ed80 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1ff4279edf8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4279ee70 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4279eef0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1ff42797510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1ff4279f2a8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1ff4279f320 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42797338 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1ff427975c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42797930 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ff42797708 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff42797788 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1ff42797cd8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1ff42797a08 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff42797a88 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff42797b00 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42798098 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff42797db8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff42797e38 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff42797eb8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1ff427a4600 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff42798178 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427981f8 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff42798278 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1ff427a43f0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a49c8 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff427a46e8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a4768 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a47e8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1ff427a4e30 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff427a4aa8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a4b28 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff427a4ba8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1ff427a4c20 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a51f8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff427a4f18 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a4f98 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a5018 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1ff427a5680 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff427a52d8 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a5358 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff427a5400 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1ff427a5478 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a5a48 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff427a5768 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a57e8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a5868 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1ff427a5eb0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff427a5b28 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a5ba8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff427a5c28 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1ff427a5ca0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a61c0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ff427a5f98 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a6018 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1ff427a3558 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1ff427a6298 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a6318 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a6390 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a3860 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ff427a3638 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a36b8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1ff427a3c08 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1ff427a3938 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a39b8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a3a30 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a3f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ff427a3da8 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1ff427a3fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427a0458 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1ff427a4108 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1ff427a4180 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff427a41f8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427a4270 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1ff427a0810 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff427a0548 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1ff427a05c0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1ff427a0638 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1ff427a09d0 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a08f0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1ff427a0c18 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a0aa0 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff427a0f10 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427a0ce8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a0d60 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a10c8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a0fe8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff427a2410 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427a1198 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a1210 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a2668 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a24e8 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff427a2960 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427a2738 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a27b0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a2bb8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a2a38 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff427a2eb0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427a2c88 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a2d00 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a3308 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff427a2f90 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1ff427a3008 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff427a3080 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427a3100 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1ff4279f760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1ff4279f490 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1ff4279f508 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4279f588 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1ff4279f818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4279fcd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff4279f960 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff4279f9d8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4279fa50 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4279fad0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1ff427a0150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1ff4279fe88 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff4279ff00 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ff4279ff80 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1ff427a0208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427a14a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a13c0 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff427a16e8 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427a1570 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a15e8 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a19e0 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff427a17c0 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a1840 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a18c0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1ff427a1d78 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff427a1ac0 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a1b40 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff427a1bc0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1ff427a1c38 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a2080 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1ff427a1e60 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a1ee0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1ff427a1f60 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1ff427ad4f8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1ff427a2160 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a21e0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1ff427a2260 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1ff427a22d8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427ad8b8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1ff427ad5e8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1ff427ad668 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1ff427ad6e0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427ade78 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1ff427ad9a0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff427ada18 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ada98 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1ff427adb18 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1ff427adb98 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1ff427adc18 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1ff427ae370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1ff427ae038 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1ff427ae0b8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1ff427ae138 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1ff427ae1b8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1ff427ae430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427ab950 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1ff427ab560 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff427ab5d8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ab658 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1ff427ab6d8 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1ff427ab758 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1ff427ab7d8 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1ff427abdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1ff427abb10 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1ff427abb90 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1ff427abc10 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1ff427abc90 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1ff427abe90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427ac358 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1ff427abfd8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff427ac050 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ac0d0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1ff427ac150 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1ff427a7798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1ff427a74f8 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1ff427a7578 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1ff427a75f8 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1ff427a7850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427a7c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1ff427a7a08 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1ff427a7a88 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1ff427a7fb0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1ff427a7d88 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1ff427a7e08 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1ff427a8330 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1ff427a8108 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1ff427a8188 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1ff427a66e8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1ff427a6410 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1ff427a6490 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1ff427a6508 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a6a98 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1ff427a67c8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1ff427a6848 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1ff427a68c0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a6e48 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ff427a6b78 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1ff427a6bf8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1ff427a6c70 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427a7120 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1ff427a71c0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1ff427a7228 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427a72a0 <col:46> Implicit
|-FunctionDecl 0x1ff427a72f8 prev 0x1ff427a7120 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1ff427a6f30 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1ff427a6fb0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1ff427af4a0 <col:46> Inherited Implicit
|-FunctionDecl 0x1ff427af660 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1ff427af700 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1ff427af768 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427af7e0 <col:46> Implicit
|-FunctionDecl 0x1ff427af838 prev 0x1ff427af660 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1ff427af4e0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1ff427af560 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1ff427af930 <col:46> Inherited Implicit
|-FunctionDecl 0x1ff427afe48 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1ff427af970 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1ff427af9e8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427afa68 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1ff427afae8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1ff427afb68 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1ff427afbe8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1ff427b03f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1ff427b0008 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1ff427b0088 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1ff427b0108 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1ff427b0188 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1ff427b0208 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1ff427ae4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427ae790 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1ff427ae620 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1ff427ae948 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ff427ae868 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1ff427aec08 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1ff427aea20 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1ff427aeaa0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1ff427aeed0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1ff427aef70 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1ff427aefd8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427af050 <col:30> Implicit
|-FunctionDecl 0x1ff427af0a8 prev 0x1ff427aeed0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1ff427aece8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1ff427aed68 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1ff427af1a0 <col:30> Inherited Implicit
|-FunctionDecl 0x1ff427af3d0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1ff427b04b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ff427b0518 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427b0590 <col:34> Implicit
|-FunctionDecl 0x1ff427b05e8 prev 0x1ff427af3d0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1ff427af1e0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff427af260 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1ff427b06e0 <col:34> Inherited Implicit
|-FunctionDecl 0x1ff427b08a0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1ff427b0940 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1ff427b09a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427b0a20 <col:30> Implicit
|-FunctionDecl 0x1ff427b0a78 prev 0x1ff427b08a0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1ff427b0720 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1ff427b07a0 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1ff427b0b70 <col:30> Inherited Implicit
|-FunctionDecl 0x1ff427b0d30 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1ff427b0dd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ff427b0e38 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1ff427b0eb0 <col:34> Implicit
|-FunctionDecl 0x1ff427b0f08 prev 0x1ff427b0d30 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1ff427b0bb0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1ff427b0c30 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1ff427b1000 <col:34> Inherited Implicit
|-FunctionDecl 0x1ff427b13b8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1ff427b1040 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1ff427b10c0 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1ff427b1140 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1ff427b11b8 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427aa7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1ff427aa528 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1ff427aa5a8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1ff427aa628 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1ff427aa878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427aae60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1ff427aaa80 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1ff427aab00 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1ff427aab80 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1ff427aac00 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1ff427aac80 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1ff427aaf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427ac760 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1ff427ab070 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1ff427ab0f0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1ff427ab168 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ab1e8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1ff427ab260 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ab2e0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1ff427ab358 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ab3d8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1ff427ac470 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427acb10 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1ff427ac878 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1ff427ac8f8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1ff427ac978 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1ff427aceb0 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff427acbf0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1ff427acc68 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1ff427acce0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427a9440 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff427acf90 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1ff427ad008 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427ad080 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1ff427ad0f8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1ff427ad170 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ff427ad1e8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1ff427a9a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff427a95f8 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1ff427a9670 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a96e8 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a9760 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff427a97d8 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1ff427a9ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427a9cf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ff427a9c18 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1ff427a9fe8 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff427a9dc8 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1ff427a9e40 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1ff427b14c0 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff427aa0c0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff427aa138 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1ff427aa1b0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1ff427aa228 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427b1930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1ff427b1668 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ff427b16e0 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1ff427b1758 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1ff427b19e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427b2000 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1ff427b1be8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1ff427b1c60 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1ff427b1cd8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1ff427b1d50 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1ff427b1dc8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1ff427b20c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42753c20 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff427b2208 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1ff427b2280 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1ff427b22f8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427b2370 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1ff427b23e8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427537c0 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1ff42753838 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427538b0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1ff42753928 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42753f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1ff42753e38 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1ff42753fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1ff427543d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1ff427541f8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1ff42754278 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1ff42754488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1ff42861110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1ff42754690 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1ff428611b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1ff42861720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1ff42861460 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1ff428614e0 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1ff42861560 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1ff428615e0 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1ff428617e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1ff428618d8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42861e10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1ff42861b50 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1ff42861bd0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1ff42861c50 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1ff42861cd0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1ff42861ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1ff42861fc8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42863498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1ff42863278 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1ff428632f8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1ff42863378 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1ff42863550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1ff42863648 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42863ae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1ff428638c0 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1ff42863940 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff428639c0 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1ff42863b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1ff42863c90 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42862138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1ff42863f08 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1ff42863f88 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1ff42864008 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1ff428621f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1ff428622e8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42862580 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ff428624a0 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1ff42862628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1ff42862a08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1ff428627f0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1ff42862870 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1ff428628f0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1ff42862ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1ff42862f68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1ff42862d48 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1ff42862dc8 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1ff42862e48 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1ff42863020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1ff42864140 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42864328 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1ff42864250 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1ff42864780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1ff42864400 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1ff42864480 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1ff42864500 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1ff42864578 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42864b48 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42864be8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ff42864c50 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ff42864cb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42864d38 prev 0x1ff42864b48 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ff42864870 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1ff428648f0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1ff42864968 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42866130 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ff42864e20 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1ff42864ea0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1ff42864f18 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42866590 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42866218 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1ff42866298 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1ff42866310 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42866388 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42866898 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42866938 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ff428669a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ff42866a08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42866a88 prev 0x1ff42866898 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ff42866680 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1ff42866700 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1ff42866778 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42866e48 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42866ee8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ff42866f50 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ff42866fb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42867038 prev 0x1ff42866e48 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ff42866b70 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1ff42866bf0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1ff42866c68 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42860448 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ff428600d0 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1ff42860148 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428601c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ff42860240 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff42860808 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ff428608a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ff42860910 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ff42860978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff428609f8 prev 0x1ff42860808 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ff42860538 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1ff428605b8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1ff42860630 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42860e38 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42860ed8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ff42860f40 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ff42860fa8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1ff42861010 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff4286b180 prev 0x1ff42860e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1ff42860b80 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1ff42860c00 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1ff42860c80 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1ff42860cf8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff4286b240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1ff4286b620 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1ff4286b408 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1ff4286b488 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1ff4286b500 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff4286b6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1ff4286bad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ff4286b800 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ff4286b878 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4286b8f8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1ff4286be60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ff4286bc78 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1ff4286bcf8 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1ff4286bf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42869330 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ff4286c058 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1ff4286c0d0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42869160 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1ff428696c0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ff42869760 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ff428697c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42869840 prev 0x1ff428696c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ff428694d8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1ff42869558 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1ff428698f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42869c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1ff42869a38 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ff42869ab0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42869b30 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1ff42869f70 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ff4286a010 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ff4286a078 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42868150 prev 0x1ff42869f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ff42869df0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1ff42869e70 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1ff42868200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428684c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1ff42868568 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff428685d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42868648 prev 0x1ff428684c8 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff42868348 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1ff428683c8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1ff42868800 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1ff428688a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42868910 prev 0x1ff42868800 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1ff42868728 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1ff42868b58 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1ff428689e8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1ff42868a60 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42868da8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1ff42868c38 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1ff42868cb0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ff428690d8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1ff428690c8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1ff42869098 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1ff42868f08 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1ff42868ee8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ff42868eb8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ff42868e70 <col:13> 'const char *' lvalue ParmVar 0x1ff42868c38 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1ff42868ed0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ff42868e90 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1ff42869080 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ff42868f28 <col:24> 'int' 0
|       `-CallExpr 0x1ff42869020 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ff42869008 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ff42868f50 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1ff42868b58 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1ff42869050 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ff42868f70 <col:36> 'const char *' lvalue ParmVar 0x1ff42868c38 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1ff42869068 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ff42868f90 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff42868cb0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4286d448 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1ff4286d1a0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1ff4286d218 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4286d298 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1ff4286d310 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff4286d750 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff4286d7f0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ff4286d858 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1ff4286d8c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff4286d940 prev 0x1ff4286d750 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1ff4286d538 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1ff4286d5b8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1ff4286d630 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4286db08 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1ff4286da28 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1ff4286ddd0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ff4286de70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff4286ded8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4286df50 prev 0x1ff4286ddd0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ff4286dbe0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1ff4286dc60 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1ff42870210 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff4286e030 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ff4286e0b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ff42870470 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff428702f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1ff42870370 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ff42870828 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ff42870550 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ff428705d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ff42870648 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42870a90 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff42870910 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1ff42870990 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1ff42870d88 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ff42870b70 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42870bf0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1ff42870c68 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42870ff0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff42870e70 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1ff42870ef0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1ff4272d8c0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1ff428710d0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42871150 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1ff4272d7a0 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4272dc78 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ff4272d9a8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ff4272da28 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ff4272daa0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4272e0e0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff4272dd60 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ff4272dde0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ff4272de58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4272ded0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4272e3e8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ff4272e1d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ff4272e250 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1ff4272e2c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4272e780 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff4272e4d0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1ff4272e550 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1ff4272e5c8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4272e640 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff4272ea98 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ff4272eb38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff4272eba0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff4272ec18 prev 0x1ff4272ea98 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ff4272e870 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1ff4272e8f0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1ff4272ee98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1ff4272edb8 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1ff4272ef40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4272f310 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1ff4272f088 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1ff4272f100 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4272f180 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1ff4272f5e8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1ff4272f688 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff4272f6f8 prev 0x1ff4272f5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1ff4272f4b8 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1ff4272f7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4272fb08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1ff4272f8f8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1ff4272f970 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4272f9f0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1ff4272fdc8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ff4272fbf0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ff4272fc68 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42730048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff4272ff68 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ff427300f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42730500 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42730238 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ff427302b0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42730328 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427308d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ff427306a8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ff42730720 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42730980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42730e38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ff42730ac8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1ff42730b40 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42730bc0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1ff42730c38 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff42731200 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff427312a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff42731308 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42731370 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff427313f0 prev 0x1ff42731200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ff42730fe8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1ff42731068 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1ff427310e0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff427314a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42733840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit used strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff427338e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ff42733948 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff427339b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42733a30 prev 0x1ff42733840 <col:24, col:163> col:40 used strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ff427315f0 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42731670 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1ff427316e8 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42733d30 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ff42733b18 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42733b98 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1ff42733c10 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427340c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42733e18 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42733e98 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1ff42733f10 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42733f88 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42734460 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1ff427341b8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ff42734230 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427342b0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1ff42734328 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff42734828 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff427348c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff42734930 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42734998 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42734a18 prev 0x1ff42734828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ff42734610 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1ff42734690 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1ff42734708 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42734ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42734f88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1ff42734c18 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1ff42734c90 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42734d10 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1ff42734d88 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42735408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ff42735138 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1ff427351b8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1ff42735230 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff427354c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427357e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ff42735880 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff427358e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42735960 prev 0x1ff427357e0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ff42735608 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ff42735688 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1ff42735bc0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ff42735c60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42735cc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1ff42735d40 prev 0x1ff42735bc0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1ff42735a40 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1ff42735ac0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1ff42735f00 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1ff42735e20 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1ff42736150 <line:202:40> col:40 implicit used strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1ff427361f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42736258 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff427362d0 prev 0x1ff42736150 <col:24, col:101> col:40 used strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1ff42735fd8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1ff42736058 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1ff42736530 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ff427365d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42736638 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff427366b0 prev 0x1ff42736530 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ff427363b0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1ff42736430 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1ff427369d0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1ff42736a70 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1ff42736ad8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42736b50 prev 0x1ff427369d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1ff42736850 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1ff427368d0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1ff42736c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42736fe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1ff42736d48 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1ff42736dc8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1ff42736e48 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1ff42737240 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ff427370d0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1ff42737148 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427374c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff427373e0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1ff42737568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42737908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff427376b0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1ff42737728 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427377f0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42737c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1ff42737ab0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1ff42737b28 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42737cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427380f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42738190 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ff427381f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff42738260 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff427382e0 prev 0x1ff427380f0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1ff42737e20 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1ff42737ea0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1ff42737f18 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42738738 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff427383c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1ff42738448 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1ff427384c0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42738538 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427389a8 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1ff42738a48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff42738ab8 prev 0x1ff427389a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1ff427388c8 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1ff42738b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1ff42738ea8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff42738d28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42738da8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ff42738f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1ff427392a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ff42739120 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1ff427391a0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1ff42739350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1ff427395f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff42739518 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ff427396a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1ff42739ad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1ff427398b8 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1ff42739938 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1ff427399b0 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42739b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1ff42739f68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1ff42739d50 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1ff42739dd0 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1ff42739e48 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff4273a020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1ff4273a2c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff4273a1e8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ff4273a370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1ff4273a6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1ff4273a538 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1ff4273a5b8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1ff4273a768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1ff4273aa10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff4273a930 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1ff4273aab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1ff4273acb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1ff4273abd8 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff4273b040 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ff4273ad80 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff4273adf8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4273ae70 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1ff4273b3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4273b1e0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff4273b258 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ff4273b4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4273d858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1ff4273d8f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ff4273d960 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1ff4273d9d8 prev 0x1ff4273d858 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1ff4273b5e8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273b660 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff4273dc90 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1ff4273dd30 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ff4273dd98 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ff4273de10 prev 0x1ff4273dc90 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1ff4273dab0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273db28 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ff4273e0f0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1ff4273dee8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff4273df60 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1ff4273dfd8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1ff4273e400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4273e290 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff4273e308 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1ff4273e4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff4273e808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff4273e5f0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273e668 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1ff4273ea50 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1ff4273eaf0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1ff4273eb60 prev 0x1ff4273ea50 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1ff4273e8e0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1ff4273ee48 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff4273ec30 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273eca8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4273f090 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1ff4273ef20 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff4273ef98 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1ff4273f428 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1ff4273f418 <line:307:5, col:56>
|     `-ConditionalOperator 0x1ff4273f3e8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1ff4273f250 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1ff4273f230 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1ff4273f200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1ff4273f158 <col:13> 'const wchar_t *' lvalue ParmVar 0x1ff4273ef20 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1ff4273f218 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1ff4273f1e0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1ff4273f1b8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1ff4273f178 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1ff4273f3d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1ff4273f270 <col:29> 'int' 0
|       `-CallExpr 0x1ff4273f370 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1ff4273f358 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ff4273f298 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1ff4273ee48 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1ff4273f3a0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1ff4273f2b8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1ff4273ef20 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1ff4273f3b8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1ff4273f2d8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff4273ef98 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff4273f830 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ff4273f450 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff4273f4c8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff4273f540 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273f5b8 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff4273fbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff4273f9d8 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff4273fa50 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ff4273fac8 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff4273fc98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427400a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1ff42740148 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1ff427401b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1ff42740218 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1ff42740298 prev 0x1ff427400a8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1ff4273fdd8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff4273fe50 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff4273fec8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42740618 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1ff42740378 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff427403f0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42740468 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff427404e0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ff427409c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff427407c0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ff42740838 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1ff427408b0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42740a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42740d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42740bc0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff42740c38 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1ff42740f78 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ff42740e08 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff42740e80 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff427411c0 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42741050 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff427410c8 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1ff42741408 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42741298 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ff42741310 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1ff42741710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff427415a0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff42741618 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1ff427417c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42741c00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1ff42741938 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff427419b0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1ff42741a30 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1ff42741f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1ff42741da8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1ff42741fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427423d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1ff42742108 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff42742180 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42742200 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1ff42742648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ff42742570 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ff427426f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42742ab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1ff42742830 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1ff427428a8 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42742920 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ff42742d08 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42742b90 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ff42742c08 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ff427430a8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff42742de0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42742e58 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff42742ed0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42743398 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42743188 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42743200 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff42743278 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42743850 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42743478 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff427434f0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ff42743568 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427435e0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42743ca8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1ff42743938 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff427439b0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff42743a28 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ff42743aa0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42744110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ff42743e50 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff42743ec8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ff42743f40 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff427441c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427443e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1ff42744308 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1ff42744770 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1ff427444b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff42744528 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427445a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ff42744b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ff42744910 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff42744988 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ff42744bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42744e88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42744d18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ff42744d90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff427450f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff42745020 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ff427451a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff427455a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff427452e0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff42745358 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427453d0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42745968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff42745740 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ff427457b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff42745a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42745cc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42745b58 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ff42745bd0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42745f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff42745e60 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ff42745fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42746328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42746120 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff42746198 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42746210 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42746638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427464c8 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1ff42746540 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ff427466e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff42746af0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42746828 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff427468a0 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ff42746918 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42746f38 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42746bd0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ff42746c48 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ff42746cc0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42746d38 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42747198 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42747020 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ff42747098 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ff42747480 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff42747270 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff427472e8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff42747360 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff427476d8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42747560 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1ff427475d8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1ff42747a08 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1ff427477b0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42747870 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff427478e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42747cf8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42747ae8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42747b60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff42747bd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42748080 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42747dd8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42747e50 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ff42747ec8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff42747f40 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42748378 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42748168 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff427481e0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1ff42748258 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff42748700 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1ff42748458 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff427484d0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ff42748548 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff427485c0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff42748960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1ff42748888 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42748a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1ff42748d40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff42748bc8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42748c40 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ff42748df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1ff427491c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff42748fb0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff42749028 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1ff427490a0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff42749278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1ff42749640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1ff42749438 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff427494b0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1ff42749528 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1ff427496f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1ff428a2198 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff428a20c0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ff428a2240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1ff428a2570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1ff428a2400 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1ff428a2478 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1ff428a2620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1ff428a28b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff428a27e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ff428a2960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1ff428a2bf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff428a2b20 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1ff428a2ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1ff428a2fd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ff428a2e60 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1ff428a2ed8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1ff428a3088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x1ff428a31d8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x1ff40bd6e20 'long'
|-RecordDecl 0x1ff428a3230 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x1ff428a32f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ff428a3368 <line:114:9, col:13> col:13 tm_sec 'int'
| |-FieldDecl 0x1ff428a33d8 <line:115:9, col:13> col:13 tm_min 'int'
| |-FieldDecl 0x1ff428a3448 <line:116:9, col:13> col:13 tm_hour 'int'
| |-FieldDecl 0x1ff428a34b8 <line:117:9, col:13> col:13 tm_mday 'int'
| |-FieldDecl 0x1ff428a3528 <line:118:9, col:13> col:13 tm_mon 'int'
| |-FieldDecl 0x1ff428a3598 <line:119:9, col:13> col:13 tm_year 'int'
| |-FieldDecl 0x1ff428a3608 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x1ff428a3678 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x1ff428a36e8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x1ff428a38d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1ff428a3970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428a3cc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1ff428a3d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428a94b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1ff428a9550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428a9810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1ff428a98b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428a9ad0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1ff428a99f8 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x1ff428a9d20 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1ff428a9ba8 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x1ff428a9ed0 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1ff428a9df8 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x1ff428aa318 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x1ff428a9fa0 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x1ff428aa020 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x1ff428aa098 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428aa118 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x1ff428aa6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x1ff428aa560 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1ff428aa780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428aaba0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1ff428aa8c8 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x1ff428aa940 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428aa9d0 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x1ff428aaf38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x1ff428aadb8 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1ff428aafe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428af500 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1ff428ab128 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x1ff428ab1a0 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428ab218 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x1ff428af748 <line:184:24, col:50> col:40 used clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x1ff428afa30 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x1ff428af810 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x1ff428af888 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x1ff428afdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1ff428afbc8 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1ff428afe60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b01d8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1ff428affb8 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x1ff428b0030 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x1ff428b0468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1ff428b0378 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1ff428b0510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b07e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1ff428b0670 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1ff428b06e8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x1ff428b0c48 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x1ff428b08c0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x1ff428b0938 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b09b8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ff428b0a48 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x1ff428b1170 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1ff428b0d38 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x1ff428b0db0 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b0e30 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ff428b0ec0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1ff428b0f38 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428b13d8 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ff428b1268 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1ff428b12e0 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff428b16c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff428b15e8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1ff428b1770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b1a28 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1ff428b18b8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1ff428b1930 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff428b1ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ff428b1bc8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1ff428b1d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b2030 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x1ff428b1eb8 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x1ff428b2290 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1ff428b2118 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1ff428b2450 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1ff428b2378 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1ff428b25d8 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ff428b28c0 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x1ff428b26a0 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x1ff428b2718 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x1ff428b2c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x1ff428b2a88 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1ff428b2cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b30c0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1ff428b2df8 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x1ff428b2e70 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428b2ee8 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x1ff428b33e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1ff428b3260 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1ff428b3490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b3848 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1ff428b3630 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x1ff428b36a8 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x1ff428b3ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1ff428b39e8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1ff428b3b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b3e50 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1ff428b3ce0 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1ff428b3d58 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x1ff428b40b0 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1ff428b3f40 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1ff428b4270 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1ff428b4198 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1ff428b44e0 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x1ff428b4368 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x1ff428b4808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x1ff428b4690 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x1ff428b48b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1ff428b4d00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x1ff428b4ad8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x1ff428b4b58 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x1ff428b4db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1ff428b5140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x1ff428b4fd0 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1ff428b51e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b5610 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1ff428b5328 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff428b53a0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428b5430 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x1ff428b5920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x1ff428b57b0 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1ff428b59c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b5dd0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1ff428b5b08 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff428b5b80 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428b5bf8 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x1ff428b6238 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x1ff428b5eb0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff428b5f28 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b5fa0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ff428b6030 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x1ff428b6750 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1ff428b6320 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff428b6398 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b6410 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ff428b64a0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1ff428b6518 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428b69b0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff428b6840 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1ff428b68b8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff428b6c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff428b6b48 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ff428b6cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b6f78 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ff428b6e08 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1ff428b6e80 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ff428b71e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ff428b7110 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ff428b7290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b7630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x1ff428b7490 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1ff428b76d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b7ae0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1ff428b7818 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1ff428b7890 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ff428b7908 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x1ff428b7d50 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x1ff428b7c08 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x1ff428b7f10 <line:45:1, line:50:1>
|   `-ReturnStmt 0x1ff428b7f00 <line:48:5, col:27>
|     `-CallExpr 0x1ff428b7ec0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x1ff428b7ea8 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428b7e10 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x1ff428b7630 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x1ff428b7ee8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428b7e30 <col:22> 'const time_t *' lvalue ParmVar 0x1ff428b7c08 '_Time' 'const time_t *'
|-FunctionDecl 0x1ff428b81c0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1ff428b7f38 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1ff428b7fb0 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b8028 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x1ff428b8410 <line:53:1, line:55:1>
|   `-ReturnStmt 0x1ff428b8400 <line:54:5, col:52>
|     `-CallExpr 0x1ff428b8380 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1ff428b8368 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428b8290 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x1ff428b7ae0 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1ff428b83b8 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428b82b0 <col:24> 'wchar_t *' lvalue ParmVar 0x1ff428b7f38 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ff428b83d0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428b82d0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff428b7fb0 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1ff428b83e8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428b82f0 <col:47> 'const time_t *' lvalue ParmVar 0x1ff428b8028 '_Time' 'const time_t *'
|-FunctionDecl 0x1ff428b8620 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x1ff428b8438 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x1ff428b84b0 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x1ff428b8830 <line:83:1, line:85:1>
|   `-ReturnStmt 0x1ff428b8820 <line:84:5, col:37>
|     `-CallExpr 0x1ff428b87c0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x1ff428b87a8 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428b86e8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x1ff428b28c0 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x1ff428b87f0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428b8708 <col:24> 'time_t':'long long' lvalue ParmVar 0x1ff428b8438 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x1ff428b8808 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428b8728 <col:31> 'time_t':'long long' lvalue ParmVar 0x1ff428b84b0 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x1ff428b8a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x1ff428b8918 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x1ff428b8d40 <line:87:1, line:92:1>
| | `-ReturnStmt 0x1ff428b8d30 <line:90:5, col:26>
| |   `-CallExpr 0x1ff428b8cf0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x1ff428b8cd8 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1ff428b8c40 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x1ff428b2c08 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1ff428b8d18 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1ff428b8c60 <col:21> 'const time_t *' lvalue ParmVar 0x1ff428b8918 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1ff428b8b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b8ff0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1ff428b8d70 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x1ff428b8de8 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff428b8e60 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x1ff428b9240 <line:95:1, line:97:1>
|   `-ReturnStmt 0x1ff428b9230 <line:96:5, col:51>
|     `-CallExpr 0x1ff428b91b0 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1ff428b9198 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428b90c0 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x1ff428b30c0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1ff428b91e8 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428b90e0 <col:23> 'char *' lvalue ParmVar 0x1ff428b8d70 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x1ff428b9200 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428b9100 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff428b8de8 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1ff428b9218 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428b9120 <col:46> 'const time_t *' lvalue ParmVar 0x1ff428b8e60 '_Time' 'const time_t *'
|-FunctionDecl 0x1ff428b9488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1ff428b9328 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x1ff428ad720 <line:100:1, line:105:1>
| | `-ReturnStmt 0x1ff428ad710 <line:103:5, col:27>
| |   `-CallExpr 0x1ff428ad6d0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x1ff428ad6b8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1ff428ad620 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1ff428b33e8 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1ff428ad6f8 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1ff428ad640 <col:22> 'const time_t *' lvalue ParmVar 0x1ff428b9328 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1ff428ad4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428ad938 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1ff428ad760 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1ff428ad7d8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x1ff428adb40 <line:108:1, line:110:1>
|   `-ReturnStmt 0x1ff428adb30 <line:109:5, col:34>
|     `-CallExpr 0x1ff428adad0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1ff428adab8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428ada00 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1ff428b3848 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1ff428adb00 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428ada20 <col:24> 'struct tm *' lvalue ParmVar 0x1ff428ad760 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1ff428adb18 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428ada40 <col:29> 'const time_t *' lvalue ParmVar 0x1ff428ad7d8 '_Time' 'const time_t *'
|-FunctionDecl 0x1ff428add18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1ff428adc28 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x1ff428adf98 <line:113:1, line:118:1>
| | `-ReturnStmt 0x1ff428adf88 <line:116:5, col:30>
| |   `-CallExpr 0x1ff428adf48 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x1ff428adf30 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1ff428adef0 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1ff428b3ad8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1ff428adf70 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1ff428adf10 <col:25> 'const time_t *' lvalue ParmVar 0x1ff428adc28 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1ff428addc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428ae148 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1ff428adfd8 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1ff428ae050 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x1ff428ae2f8 <line:120:1, line:122:1>
|   `-ReturnStmt 0x1ff428ae2e8 <line:121:5, col:37>
|     `-CallExpr 0x1ff428ae288 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1ff428ae270 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428ae210 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1ff428b3e50 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1ff428ae2b8 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ff428ae230 <col:27> 'struct tm *' lvalue ParmVar 0x1ff428adfd8 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1ff428ae2d0 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428ae250 <col:32> 'const time_t *' lvalue ParmVar 0x1ff428ae050 '_Time' 'const time_t *'
|-FunctionDecl 0x1ff428ae480 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1ff428ae338 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x1ff428ae640 <line:124:1, line:126:1>
|   `-ReturnStmt 0x1ff428ae630 <line:125:5, col:25>
|     `-CallExpr 0x1ff428ae5f0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1ff428ae5d8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428ae540 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1ff428b40b0 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1ff428ae618 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428ae560 <col:22> 'struct tm *' lvalue ParmVar 0x1ff428ae338 '_Tm' 'struct tm *'
|-FunctionDecl 0x1ff428ae758 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1ff428ae680 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x1ff428ae8c0 <line:128:1, line:130:1>
|   `-ReturnStmt 0x1ff428ae8b0 <line:129:5, col:27>
|     `-CallExpr 0x1ff428ae870 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1ff428ae858 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428ae818 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1ff428b4270 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1ff428ae898 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428ae838 <col:24> 'struct tm *' lvalue ParmVar 0x1ff428ae680 '_Tm' 'struct tm *'
|-FunctionDecl 0x1ff428aea60 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x1ff428ae918 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x1ff428aec20 <line:132:1, line:134:1>
|   `-ReturnStmt 0x1ff428aec10 <line:133:5, col:25>
|     `-CallExpr 0x1ff428aebd0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1ff428aebb8 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ff428aeb20 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x1ff428b44e0 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x1ff428aebf8 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1ff428aeb40 <col:20> 'time_t *' lvalue ParmVar 0x1ff428ae918 '_Time' 'time_t *'
|-VarDecl 0x1ff428aed10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x1ff428aed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1ff428aef80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x1ff428aefe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1ff428af280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x1ff428af2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ff428b9608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x1ff428b96a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x1ff428b98e0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1ff428b99b0 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1ff428b9ab0 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1ff428b9ca8 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1ff428b9d70 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1ff428b9ff0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1ff428b9e08 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1ff428b9e88 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1ff428ba3a8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1ff428ba0d0 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1ff428ba150 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1ff428ba1c8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428ba570 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1ff428ba610 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428ba680 <col:55> Implicit
| `-PureAttr 0x1ff428ba6d8 <col:55> Implicit
|-FunctionDecl 0x1ff428ba700 prev 0x1ff428ba570 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1ff428ba490 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428ba7f0 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428ba818 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428baa80 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428ba858 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428ba8d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bac40 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1ff428bace0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428bad50 <col:55> Implicit
| `-PureAttr 0x1ff428bada8 <col:55> Implicit
|-FunctionDecl 0x1ff428badd0 prev 0x1ff428bac40 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1ff428bab60 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428baec0 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428baee8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428bb0a0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428baf28 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428bafa0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bb260 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1ff428bb300 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428bb370 <col:55> Implicit
| `-PureAttr 0x1ff428bb3c8 <col:55> Implicit
|-FunctionDecl 0x1ff428bb3f0 prev 0x1ff428bb260 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1ff428bb180 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428bb4e0 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428bb508 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428ab658 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428ab4e0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428ab558 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428ab818 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x1ff428ab8b8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428ab928 <col:55> Implicit
| `-PureAttr 0x1ff428ab980 <col:55> Implicit
|-FunctionDecl 0x1ff428ab9a8 prev 0x1ff428ab818 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x1ff428ab738 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428aba98 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428abac0 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428abc78 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428abb00 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428abb78 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428abe38 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1ff428abed8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428abf48 <col:36> Implicit
| `-PureAttr 0x1ff428abfa0 <col:36> Implicit
|-FunctionDecl 0x1ff428abfc8 prev 0x1ff428abe38 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x1ff428abd58 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1ff428ac0b8 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428ac0e0 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428ac298 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428ac120 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1ff428ac198 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428ac458 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1ff428ac4f8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428ac568 <col:55> Implicit
| `-PureAttr 0x1ff428ac5c0 <col:55> Implicit
|-FunctionDecl 0x1ff428ac5e8 prev 0x1ff428ac458 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1ff428ac378 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428ac6d8 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428ac700 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428ac8b8 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428ac740 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428ac7b8 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428aca78 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1ff428acb18 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428acb88 <col:36> Implicit
| `-PureAttr 0x1ff428acbe0 <col:36> Implicit
|-FunctionDecl 0x1ff428acc08 prev 0x1ff428aca78 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1ff428ac998 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ff428accf8 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428acd20 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428aced8 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428acd60 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428acdd8 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428ad098 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1ff428ad138 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428ad1a8 <col:36> Implicit
| `-PureAttr 0x1ff428ad200 <col:36> Implicit
|-FunctionDecl 0x1ff428ad228 prev 0x1ff428ad098 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1ff428acfb8 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ff428ad318 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428ad340 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428c7600 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428ad380 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428ad3f8 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c77c0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1ff428c7860 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c78d0 <col:55> Implicit
| `-PureAttr 0x1ff428c7928 <col:55> Implicit
|-FunctionDecl 0x1ff428c7950 prev 0x1ff428c77c0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1ff428c76e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428c7a40 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428c7a68 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428c7c20 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c7aa8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c7b20 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c7de0 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1ff428c7e80 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c7ef0 <col:36> Implicit
| `-PureAttr 0x1ff428c7f48 <col:36> Implicit
|-FunctionDecl 0x1ff428c7f70 prev 0x1ff428c7de0 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1ff428c7d00 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ff428c8060 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428c8088 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428c8240 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c80c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c8140 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c8400 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1ff428c84a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c8510 <col:36> Implicit
| `-PureAttr 0x1ff428c8568 <col:36> Implicit
|-FunctionDecl 0x1ff428c8590 prev 0x1ff428c8400 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1ff428c8320 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ff428c8680 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428c86a8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428c8860 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c86e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c8760 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c8a20 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1ff428c8ac0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c8b30 <col:36> Implicit
| `-PureAttr 0x1ff428c8b88 <col:36> Implicit
|-FunctionDecl 0x1ff428c8bb0 prev 0x1ff428c8a20 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1ff428c8940 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ff428c8ca0 <col:36> Inherited Implicit
| `-PureAttr 0x1ff428c8cc8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ff428c8e80 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c8d08 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c8d80 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c9040 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1ff428c90e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c9150 <col:55> Implicit
| `-PureAttr 0x1ff428c91a8 <col:55> Implicit
|-FunctionDecl 0x1ff428c91d0 prev 0x1ff428c9040 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1ff428c8f60 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428c92c0 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428c92e8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428c9408 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1ff428c94a8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ff428c9518 <col:55> Implicit
| `-PureAttr 0x1ff428c9570 <col:55> Implicit
|-FunctionDecl 0x1ff428c35a0 prev 0x1ff428c9408 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1ff428c9328 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ff428c3690 <col:55> Inherited Implicit
| `-PureAttr 0x1ff428c36b8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ff428c37d8 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c36f8 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ff428c3a28 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c38b0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c3928 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c3be8 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c3b08 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ff428c3e38 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c3cc0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ff428c3d38 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c3ff8 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c3f18 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ff428c41b0 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c40d0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ff428c4368 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c4288 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ff428c4520 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c4440 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1ff428c4768 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c45f0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c4a60 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c4838 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c48b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c4c18 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c4b38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c4e60 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c4ce8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c4d60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c5018 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c4f38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c5260 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c50e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c5160 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c5418 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c5338 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bb660 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c54e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bb560 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bb818 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bb738 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bba60 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bb8e8 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bb960 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bbc18 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bbb38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bbe60 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bbce8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bbd60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bc018 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bbf38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bc260 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bc0e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bc160 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bc418 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bc338 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bc660 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bc4e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bc560 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bc818 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bc738 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bca60 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bc8e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bc960 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bcc18 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bcb38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bce60 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bcce8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bcd60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bd018 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bcf38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428bd260 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bd0e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428bd160 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bd418 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428bd338 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c1690 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428bd4e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c1590 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c1848 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c1768 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c1a60 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ff428c1918 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c1d48 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c1b30 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c1ba8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c1ef8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ff428c1e20 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c2138 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c1fc8 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c2040 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c2430 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ff428c2210 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c2288 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1ff428c27d8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c2508 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ff428c2580 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c25f8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c2998 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c28b8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c2be0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c2a68 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c2ae0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c2d98 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ff428c2cb8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ff428c2fe0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ff428c2e68 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ff428c2ee0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428c31a0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ff428c30c0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1ff428c33f0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ff428c3278 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1ff428c32f0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ff428bd6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ff428bd570 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ff428bd5e8 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1ff428bd798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1ff428bd8e0 <.//openssl//file_jk/before\test\ssltest_old.c:109:1, col:17> col:17 invalid s_ctx 'int *' static
|-VarDecl 0x1ff428bd9e8 <line:110:1, col:17> col:17 invalid s_ctx2 'int *' static
|-FunctionDecl 0x1ff428bdc50 <line:118:1, col:55> col:12 invalid verify_callback 'int (int, int *)' static
| |-ParmVarDecl 0x1ff428bdaf0 <col:28, col:32> col:32 ok 'int'
| `-ParmVarDecl 0x1ff428bdb70 <col:36, col:52> col:52 invalid ctx 'int *'
|-FunctionDecl 0x1ff428bde70 <line:119:1, col:62> col:12 invalid app_verify_callback 'int (int *, void *)' static
| |-ParmVarDecl 0x1ff428bdd18 <col:32, col:48> col:48 invalid ctx 'int *'
| `-ParmVarDecl 0x1ff428bdd98 <col:53, col:59> col:59 arg 'void *'
|-RecordDecl 0x1ff428bdf20 <line:121:1, line:124:1> line:121:8 struct app_verify_arg definition
| |-FieldDecl 0x1ff428bdff8 <line:122:5, col:11> col:11 referenced string 'char *'
| `-FieldDecl 0x1ff428be068 <line:123:5, col:9> col:9 referenced app_verify 'int'
|-FunctionDecl 0x1ff428be160 <line:127:1, col:26> col:12 invalid get_dh512 'int *(void)' static
|-FunctionDecl 0x1ff428be2a0 <line:128:1, col:27> col:12 invalid get_dh1024 'int *(void)' static
|-FunctionDecl 0x1ff428be3e0 <line:129:1, col:30> col:12 invalid get_dh1024dsa 'int *(void)' static
|-VarDecl 0x1ff428be498 <line:132:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:132:14 used psk_key 'char *' static cinit
| `-ImplicitCastExpr 0x1ff428be5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x1ff428be568 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x1ff428be540 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x1ff428be500 <col:26> 'int' 0
|-FunctionDecl 0x1ff428be9a0 <.//openssl//file_jk/before\test\ssltest_old.c:134:1, line:138:65> line:134:21 invalid psk_client_callback 'unsigned int (int *, const char *, char *, unsigned int, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x1ff428be5d0 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x1ff428be650 <col:51, col:63> col:63 hint 'const char *'
| |-ParmVarDecl 0x1ff428be6d0 <line:135:41, col:47> col:47 identity 'char *'
| |-ParmVarDecl 0x1ff428be750 <line:136:41, col:54> col:54 max_identity_len 'unsigned int'
| |-ParmVarDecl 0x1ff428be800 <line:137:41, col:56> col:56 psk 'unsigned char *'
| `-ParmVarDecl 0x1ff428be880 <line:138:41, col:54> col:54 max_psk_len 'unsigned int'
|-FunctionDecl 0x1ff428bed00 <line:139:1, line:141:65> line:139:21 invalid psk_server_callback 'unsigned int (int *, const char *, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x1ff428bea88 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x1ff428beb08 <col:51, col:63> col:63 identity 'const char *'
| |-ParmVarDecl 0x1ff428beb88 <line:140:41, col:56> col:56 psk 'unsigned char *'
| `-ParmVarDecl 0x1ff428bec08 <line:141:41, col:54> col:54 max_psk_len 'unsigned int'
|-RecordDecl 0x1ff428bedc0 <line:147:9, line:150:1> line:147:16 struct srp_client_arg_st definition
| |-FieldDecl 0x1ff428bee98 <line:148:5, col:11> col:11 referenced srppassin 'char *'
| `-FieldDecl 0x1ff428bef08 <line:149:5, col:11> col:11 referenced srplogin 'char *'
|-TypedefDecl 0x1ff428befb8 <line:147:1, line:150:3> col:3 referenced SRP_CLIENT_ARG 'struct srp_client_arg_st':'struct srp_client_arg_st'
| `-ElaboratedType 0x1ff428bef60 'struct srp_client_arg_st' sugar
|   `-RecordType 0x1ff428bee60 'struct srp_client_arg_st'
|     `-Record 0x1ff428bedc0 'srp_client_arg_st'
|-FunctionDecl 0x1ff428bf1a0 <line:154:1, line:158:1> line:154:14 invalid ssl_give_srp_client_pwd_cb 'char *(int *, void *)' static
| |-ParmVarDecl 0x1ff428bf040 <col:41, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x1ff428bf0c0 <col:49, col:55> col:55 used arg 'void *'
| `-CompoundStmt 0x1ff427c5ed0 <line:155:1, line:158:1>
|   |-DeclStmt 0x1ff428bf3e8 <line:156:5, col:59>
|   | `-VarDecl 0x1ff428bf2f8 <col:5, col:56> col:21 used srp_client_arg 'SRP_CLIENT_ARG *' cinit
|   |   `-CStyleCastExpr 0x1ff428bf3c0 <col:38, col:56> 'SRP_CLIENT_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x1ff428bf3a8 <col:56> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1ff428bf360 <col:56> 'void *' lvalue ParmVar 0x1ff428bf0c0 'arg' 'void *'
|   `-ReturnStmt 0x1ff427c5ec0 <line:157:5, col:60>
|     `-ImplicitCastExpr 0x1ff427c5ea8 <col:12, col:60> 'char *' <IntegralToPointer>
|       `-CallExpr 0x1ff427c5e80 <col:12, col:60> 'int'
|         |-ImplicitCastExpr 0x1ff427c5e68 <col:12> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1ff428bf518 <col:12> 'int ()' Function 0x1ff428bf450 'OPENSSL_strdup' 'int ()'
|         `-CStyleCastExpr 0x1ff427c5e18 <col:27, col:51> 'char *' <NoOp>
|           `-ImplicitCastExpr 0x1ff427c5e00 <col:35, col:51> 'char *' <LValueToRValue> part_of_explicit_cast
|             `-MemberExpr 0x1ff427c5db8 <col:35, col:51> 'char *' lvalue ->srppassin 0x1ff428bee98
|               `-ImplicitCastExpr 0x1ff427c5da0 <col:35> 'SRP_CLIENT_ARG *' <LValueToRValue>
|                 `-DeclRefExpr 0x1ff428bf538 <col:35> 'SRP_CLIENT_ARG *' lvalue Var 0x1ff428bf2f8 'srp_client_arg' 'SRP_CLIENT_ARG *'
|-RecordDecl 0x1ff427c5ef0 <line:162:9, line:165:1> line:162:16 struct srp_server_arg_st definition
| |-FieldDecl 0x1ff427c5fc8 <line:163:5, col:11> col:11 referenced expected_user 'char *'
| `-FieldDecl 0x1ff427c6038 <line:164:5, col:11> col:11 referenced pass 'char *'
|-TypedefDecl 0x1ff427c60e8 <line:162:1, line:165:3> col:3 referenced SRP_SERVER_ARG 'struct srp_server_arg_st':'struct srp_server_arg_st'
| `-ElaboratedType 0x1ff427c6090 'struct srp_server_arg_st' sugar
|   `-RecordType 0x1ff427c5f90 'struct srp_server_arg_st'
|     `-Record 0x1ff427c5ef0 'srp_server_arg_st'
|-FunctionDecl 0x1ff427c6360 <line:167:1, line:180:1> line:167:12 invalid ssl_srp_server_param_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1ff427c6170 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427c61f0 <col:44, col:49> col:49 used ad 'int *'
| |-ParmVarDecl 0x1ff427c6270 <col:53, col:59> col:59 used arg 'void *'
| `-CompoundStmt 0x1ff427c6cc8 <line:168:1, line:180:1>
|   |-DeclStmt 0x1ff427c65a8 <line:169:5, col:46>
|   | `-VarDecl 0x1ff427c64b8 <col:5, col:43> col:21 used p 'SRP_SERVER_ARG *' cinit
|   |   `-CStyleCastExpr 0x1ff427c6580 <col:25, col:43> 'SRP_SERVER_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x1ff427c6568 <col:43> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1ff427c6520 <col:43> 'void *' lvalue ParmVar 0x1ff427c6270 'arg' 'void *'
|   |-IfStmt 0x1ff427c69a0 <line:171:5, line:174:5>
|   | |-OpaqueValueExpr 0x1ff427c6988 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427c6978 <line:171:65, line:174:5>
|   `-IfStmt 0x1ff427c6cb0 <line:175:5, line:178:5>
|     |-OpaqueValueExpr 0x1ff427c6c98 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff427c6c88 <line:175:80, line:178:5>
|-VarDecl 0x1ff427c6d08 <line:183:1, col:13> col:13 invalid bio_err 'int *' static
|-VarDecl 0x1ff427c6e10 <line:184:1, col:13> col:13 invalid bio_stdout 'int *' static
|-VarDecl 0x1ff427c6f78 <line:188:1, col:41> col:19 used NEXT_PROTO_STRING 'const char [11]' static cinit
| `-StringLiteral 0x1ff427c7018 <col:41> 'const char [11]' "\ttestproto"
|-VarDecl 0x1ff427c70b0 <line:189:1, col:25> col:12 used npn_client 'int' static cinit
| `-IntegerLiteral 0x1ff427c7118 <col:25> 'int' 0
|-VarDecl 0x1ff427c7170 <line:190:1, col:25> col:12 used npn_server 'int' static cinit
| `-IntegerLiteral 0x1ff427c71d8 <col:25> 'int' 0
|-VarDecl 0x1ff427c7230 <line:191:1, col:32> col:12 used npn_server_reject 'int' static cinit
| `-IntegerLiteral 0x1ff427c7298 <col:32> 'int' 0
|-FunctionDecl 0x1ff427c76c0 <line:193:1, line:205:1> line:193:12 invalid cb_client_npn 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1ff427c72f0 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1ff427c73a8 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x1ff427c7428 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1ff427c74a8 <line:194:26, col:47> col:47 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427c7528 <col:51, col:64> col:64 inlen 'unsigned int'
| |-ParmVarDecl 0x1ff427c75a8 <line:195:26, col:32> col:32 arg 'void *'
| `-CompoundStmt 0x1ff427c7a50 <line:196:1, line:205:1>
|   |-BinaryOperator 0x1ff427c78d0 <line:202:5, col:49> 'unsigned char *' '='
|   | |-UnaryOperator 0x1ff427c77f8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427c77e0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427c77a8 <col:6> 'unsigned char **' lvalue ParmVar 0x1ff427c73a8 'out' 'unsigned char **'
|   | `-BinaryOperator 0x1ff427c78b0 <col:12, col:49> 'unsigned char *' '+'
|   |   |-CStyleCastExpr 0x1ff427c7860 <col:12, col:29> 'unsigned char *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1ff427c7848 <col:29> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x1ff427c7810 <col:29> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]'
|   |   `-IntegerLiteral 0x1ff427c7888 <col:49> 'int' 1
|   `-BinaryOperator 0x1ff427c7a30 <line:203:5, col:43> 'unsigned char' '='
|     |-UnaryOperator 0x1ff427c7940 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1ff427c7928 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1ff427c78f0 <col:6> 'unsigned char *' lvalue ParmVar 0x1ff427c7428 'outlen' 'unsigned char *'
|     `-ImplicitCastExpr 0x1ff427c7a18 <col:15, col:43> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x1ff427c79f8 <col:15, col:43> 'unsigned long long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x1ff427c7998 <col:15, col:39> 'unsigned long long' sizeof
|         | `-ParenExpr 0x1ff427c7978 <col:21, col:39> 'const char [11]' lvalue
|         |   `-DeclRefExpr 0x1ff427c7958 <col:22> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|         `-ImplicitCastExpr 0x1ff427c79e0 <col:43> 'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x1ff427c79b8 <col:43> 'int' 2
|-FunctionDecl 0x1ff427cbdd0 <line:207:1, line:213:1> line:207:12 invalid cb_server_npn 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x1ff427c7a88 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1ff427c7b38 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x1ff427c7be0 <line:208:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x1ff427c7c60 <col:45, col:51> col:51 arg 'void *'
| `-CompoundStmt 0x1ff427cc108 <line:209:1, line:213:1>
|   |-BinaryOperator 0x1ff427cbf88 <line:210:5, col:36> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427cbef8 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427cbee0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cbea8 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427c7b38 'data' 'const unsigned char **'
|   | `-CStyleCastExpr 0x1ff427cbf60 <col:13, col:36> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ff427cbf48 <col:36> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ff427cbf10 <col:36> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]'
|   `-BinaryOperator 0x1ff427cc0e8 <line:211:5, col:40> 'unsigned int' '='
|     |-UnaryOperator 0x1ff427cbff8 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1ff427cbfe0 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1ff427cbfa8 <col:6> 'unsigned int *' lvalue ParmVar 0x1ff427c7be0 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x1ff427cc0d0 <col:12, col:40> 'unsigned int' <IntegralCast>
|       `-BinaryOperator 0x1ff427cc0b0 <col:12, col:40> 'unsigned long long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x1ff427cc050 <col:12, col:36> 'unsigned long long' sizeof
|         | `-ParenExpr 0x1ff427cc030 <col:18, col:36> 'const char [11]' lvalue
|         |   `-DeclRefExpr 0x1ff427cc010 <col:19> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|         `-ImplicitCastExpr 0x1ff427cc098 <col:40> 'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x1ff427cc070 <col:40> 'int' 1
|-FunctionDecl 0x1ff427cc378 <line:215:1, line:219:1> line:215:12 invalid cb_server_rejects_npn 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x1ff427cc140 <col:34, col:39> col:39 invalid s 'int *'
| |-ParmVarDecl 0x1ff427cc1c8 <col:42, col:64> col:64 data 'const unsigned char **'
| |-ParmVarDecl 0x1ff427cc248 <line:216:34, col:48> col:48 len 'unsigned int *'
| |-ParmVarDecl 0x1ff427cc2c8 <col:53, col:59> col:59 arg 'void *'
| `-CompoundStmt 0x1ff427cc450 <line:217:1, line:219:1>
|-FunctionDecl 0x1ff427cc5d0 <line:221:1, line:264:1> line:221:12 invalid verify_npn 'int (int *, int *)' static
| |-ParmVarDecl 0x1ff427cc478 <col:23, col:28> col:28 invalid client 'int *'
| |-ParmVarDecl 0x1ff427cc4f8 <col:36, col:41> col:41 invalid server 'int *'
| `-CompoundStmt 0x1ff427c9dc0 <line:222:1, line:264:1>
|   |-DeclStmt 0x1ff427cc718 <line:223:5, col:34>
|   | `-VarDecl 0x1ff427cc6b0 <col:5, col:26> col:26 used client_s 'const unsigned char *'
|   |-DeclStmt 0x1ff427cc7b0 <line:224:5, col:24>
|   | `-VarDecl 0x1ff427cc748 <col:5, col:14> col:14 used client_len 'unsigned int'
|   |-DeclStmt 0x1ff427cc848 <line:225:5, col:34>
|   | `-VarDecl 0x1ff427cc7e0 <col:5, col:26> col:26 used server_s 'const unsigned char *'
|   |-DeclStmt 0x1ff427cc8e0 <line:226:5, col:24>
|   | `-VarDecl 0x1ff427cc878 <col:5, col:14> col:14 used server_len 'unsigned int'
|   |-IfStmt 0x1ff427ccee8 <line:231:5, line:235:5>
|   | |-ImplicitCastExpr 0x1ff427ccb88 <line:231:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427ccb68 <col:9> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | `-CompoundStmt 0x1ff427cced8 <col:21, line:235:5>
|   |-IfStmt 0x1ff427cd030 <line:237:5, line:241:5>
|   | |-ImplicitCastExpr 0x1ff427ccf20 <line:237:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427ccf00 <col:9> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | `-CompoundStmt 0x1ff427cd020 <col:21, line:241:5>
|   |-IfStmt 0x1ff427cd468 <line:247:5, line:249:17>
|   | |-BinaryOperator 0x1ff427cd3f8 <line:247:9, line:248:75> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1ff427cd3e0 <line:247:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cd048 <col:9> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | | `-ParenExpr 0x1ff427cd3c0 <col:23, line:248:75> 'int'
|   | |   `-BinaryOperator 0x1ff427cd3a0 <line:247:24, line:248:74> 'int' '||'
|   | |     |-BinaryOperator 0x1ff427cd178 <line:247:24, col:66> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x1ff427cd160 <col:24> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x1ff427cd148 <col:24> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x1ff427cd068 <col:24> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | |     | `-BinaryOperator 0x1ff427cd128 <col:38, col:66> 'unsigned long long' '-'
|   | |     |   |-UnaryExprOrTypeTraitExpr 0x1ff427cd0c8 <col:38, col:62> 'unsigned long long' sizeof
|   | |     |   | `-ParenExpr 0x1ff427cd0a8 <col:44, col:62> 'const char [11]' lvalue
|   | |     |   |   `-DeclRefExpr 0x1ff427cd088 <col:45> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|   | |     |   `-ImplicitCastExpr 0x1ff427cd110 <col:66> 'unsigned long long' <IntegralCast>
|   | |     |     `-IntegerLiteral 0x1ff427cd0e8 <col:66> 'int' 2
|   | |     `-CallExpr 0x1ff427cd2f0 <line:248:24, col:74> 'int'
|   | |       |-ImplicitCastExpr 0x1ff427cd2d8 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1ff427cd198 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       |-ImplicitCastExpr 0x1ff427cd340 <col:31> 'const void *' <BitCast>
|   | |       | `-ImplicitCastExpr 0x1ff427cd328 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x1ff427cd1b8 <col:31> 'const unsigned char *' lvalue Var 0x1ff427cc6b0 'client_s' 'const unsigned char *'
|   | |       |-ImplicitCastExpr 0x1ff427cd358 <col:41, col:61> 'const void *' <BitCast>
|   | |       | `-BinaryOperator 0x1ff427cd238 <col:41, col:61> 'const char *' '+'
|   | |       |   |-ImplicitCastExpr 0x1ff427cd220 <col:41> 'const char *' <ArrayToPointerDecay>
|   | |       |   | `-DeclRefExpr 0x1ff427cd1d8 <col:41> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]'
|   | |       |   `-IntegerLiteral 0x1ff427cd1f8 <col:61> 'int' 1
|   | |       `-ImplicitCastExpr 0x1ff427cd388 <col:64> 'unsigned long long' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x1ff427cd370 <col:64> 'unsigned int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x1ff427cd258 <col:64> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cd458 <line:249:9, col:17>
|   |   `-UnaryOperator 0x1ff427cd440 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cd418 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cd870 <line:250:5, line:252:17>
|   | |-BinaryOperator 0x1ff427cd800 <line:250:9, line:251:75> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1ff427cd7e8 <line:250:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cd480 <col:9> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | | `-ParenExpr 0x1ff427cd7c8 <col:23, line:251:75> 'int'
|   | |   `-BinaryOperator 0x1ff427cd7a8 <line:250:24, line:251:74> 'int' '||'
|   | |     |-BinaryOperator 0x1ff427cd5b0 <line:250:24, col:66> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x1ff427cd598 <col:24> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x1ff427cd580 <col:24> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x1ff427cd4a0 <col:24> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | |     | `-BinaryOperator 0x1ff427cd560 <col:38, col:66> 'unsigned long long' '-'
|   | |     |   |-UnaryExprOrTypeTraitExpr 0x1ff427cd500 <col:38, col:62> 'unsigned long long' sizeof
|   | |     |   | `-ParenExpr 0x1ff427cd4e0 <col:44, col:62> 'const char [11]' lvalue
|   | |     |   |   `-DeclRefExpr 0x1ff427cd4c0 <col:45> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|   | |     |   `-ImplicitCastExpr 0x1ff427cd548 <col:66> 'unsigned long long' <IntegralCast>
|   | |     |     `-IntegerLiteral 0x1ff427cd520 <col:66> 'int' 2
|   | |     `-CallExpr 0x1ff427cd6f8 <line:251:24, col:74> 'int'
|   | |       |-ImplicitCastExpr 0x1ff427cd6e0 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x1ff427cd5d0 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       |-ImplicitCastExpr 0x1ff427cd748 <col:31> 'const void *' <BitCast>
|   | |       | `-ImplicitCastExpr 0x1ff427cd730 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x1ff427cd5f0 <col:31> 'const unsigned char *' lvalue Var 0x1ff427cc7e0 'server_s' 'const unsigned char *'
|   | |       |-ImplicitCastExpr 0x1ff427cd760 <col:41, col:61> 'const void *' <BitCast>
|   | |       | `-BinaryOperator 0x1ff427cd670 <col:41, col:61> 'const char *' '+'
|   | |       |   |-ImplicitCastExpr 0x1ff427cd658 <col:41> 'const char *' <ArrayToPointerDecay>
|   | |       |   | `-DeclRefExpr 0x1ff427cd610 <col:41> 'const char [11]' lvalue Var 0x1ff427c6f78 'NEXT_PROTO_STRING' 'const char [11]'
|   | |       |   `-IntegerLiteral 0x1ff427cd630 <col:61> 'int' 1
|   | |       `-ImplicitCastExpr 0x1ff427cd790 <col:64> 'unsigned long long' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x1ff427cd778 <col:64> 'unsigned int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x1ff427cd690 <col:64> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cd860 <line:252:9, col:17>
|   |   `-UnaryOperator 0x1ff427cd848 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cd820 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cd980 <line:254:5, line:255:17>
|   | |-BinaryOperator 0x1ff427cd910 <line:254:9, col:24> 'int' '&&'
|   | | |-UnaryOperator 0x1ff427cd8c0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1ff427cd8a8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427cd888 <col:10> 'int' lvalue Var 0x1ff427c70b0 'npn_client' 'int'
|   | | `-ImplicitCastExpr 0x1ff427cd8f8 <col:24> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cd8d8 <col:24> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cd970 <line:255:9, col:17>
|   |   `-UnaryOperator 0x1ff427cd958 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cd930 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cda90 <line:256:5, line:257:17>
|   | |-BinaryOperator 0x1ff427cda20 <line:256:9, col:24> 'int' '&&'
|   | | |-UnaryOperator 0x1ff427cd9d0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1ff427cd9b8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427cd998 <col:10> 'int' lvalue Var 0x1ff427c7170 'npn_server' 'int'
|   | | `-ImplicitCastExpr 0x1ff427cda08 <col:24> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cd9e8 <col:24> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cda80 <line:257:9, col:17>
|   |   `-UnaryOperator 0x1ff427cda68 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cda40 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cdb88 <line:258:5, line:259:17>
|   | |-BinaryOperator 0x1ff427cdb18 <line:258:9, col:30> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1ff427cdae8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cdaa8 <col:9> 'int' lvalue Var 0x1ff427c7230 'npn_server_reject' 'int'
|   | | `-ImplicitCastExpr 0x1ff427cdb00 <col:30> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cdac8 <col:30> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cdb78 <line:259:9, col:17>
|   |   `-UnaryOperator 0x1ff427cdb60 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cdb38 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cdd80 <line:260:5, line:261:17>
|   | |-BinaryOperator 0x1ff427cdd10 <line:260:9, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427cdc10 <col:9, col:23> 'int' '&&'
|   | | | |-ImplicitCastExpr 0x1ff427cdbe0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427cdba0 <col:9> 'int' lvalue Var 0x1ff427c70b0 'npn_client' 'int'
|   | | | `-ImplicitCastExpr 0x1ff427cdbf8 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427cdbc0 <col:23> 'int' lvalue Var 0x1ff427c7170 'npn_server' 'int'
|   | | `-ParenExpr 0x1ff427cdcf0 <col:37, col:64> 'int'
|   | |   `-BinaryOperator 0x1ff427cdcd0 <col:38, col:54> 'int' '||'
|   | |     |-UnaryOperator 0x1ff427cdc68 <col:38, col:39> 'int' prefix '!' cannot overflow
|   | |     | `-ImplicitCastExpr 0x1ff427cdc50 <col:39> 'unsigned int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1ff427cdc30 <col:39> 'unsigned int' lvalue Var 0x1ff427cc748 'client_len' 'unsigned int'
|   | |     `-UnaryOperator 0x1ff427cdcb8 <col:53, col:54> 'int' prefix '!' cannot overflow
|   | |       `-ImplicitCastExpr 0x1ff427cdca0 <col:54> 'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1ff427cdc80 <col:54> 'unsigned int' lvalue Var 0x1ff427cc878 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x1ff427cdd70 <line:261:9, col:17>
|   |   `-UnaryOperator 0x1ff427cdd58 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cdd30 <col:17> 'int' 1
|   `-ReturnStmt 0x1ff427cddc0 <line:263:5, col:12>
|     `-IntegerLiteral 0x1ff427cdd98 <col:12> 'int' 0
|-VarDecl 0x1ff427c9e50 <line:267:1, col:20> col:20 used alpn_client 'const char *' static
|-VarDecl 0x1ff427c9ee8 <line:268:1, col:14> col:14 used alpn_server 'char *' static
|-VarDecl 0x1ff427c9f80 <line:269:1, col:14> col:14 used alpn_server2 'char *' static
|-VarDecl 0x1ff427ca018 <line:270:1, col:20> col:20 used alpn_expected 'const char *' static
|-VarDecl 0x1ff427ca0b0 <line:271:1, col:23> col:23 used alpn_selected 'unsigned char *' static
|-VarDecl 0x1ff427ca148 <line:272:1, col:20> col:20 used server_min_proto 'const char *' static
|-VarDecl 0x1ff427ca1e0 <line:273:1, col:20> col:20 used server_max_proto 'const char *' static
|-VarDecl 0x1ff427ca278 <line:274:1, col:20> col:20 used client_min_proto 'const char *' static
|-VarDecl 0x1ff427ca310 <line:275:1, col:20> col:20 used client_max_proto 'const char *' static
|-VarDecl 0x1ff427ca3a8 <line:276:1, col:20> col:20 used should_negotiate 'const char *' static
|-VarDecl 0x1ff427ca440 <line:277:1, col:20> col:20 used sn_client 'const char *' static
|-VarDecl 0x1ff427ca4d8 <line:278:1, col:20> col:20 used sn_server1 'const char *' static
|-VarDecl 0x1ff427ca570 <line:279:1, col:20> col:20 used sn_server2 'const char *' static
|-VarDecl 0x1ff427ca608 <line:280:1, col:24> col:12 used sn_expect 'int' static cinit
| `-IntegerLiteral 0x1ff427ca670 <col:24> 'int' 0
|-VarDecl 0x1ff427ca6c8 <line:281:1, col:20> col:20 used server_sess_out 'const char *' static
|-VarDecl 0x1ff427ca760 <line:282:1, col:20> col:20 used server_sess_in 'const char *' static
|-VarDecl 0x1ff427ca7f8 <line:283:1, col:20> col:20 used client_sess_out 'const char *' static
|-VarDecl 0x1ff427ca890 <line:284:1, col:20> col:20 used client_sess_in 'const char *' static
|-VarDecl 0x1ff427ca928 <line:285:1, col:21> col:21 invalid server_sess 'int *' static
|-VarDecl 0x1ff427ca9a8 <line:286:1, col:21> col:21 invalid client_sess 'int *' static
|-FunctionDecl 0x1ff427cabd0 <line:288:1, line:304:1> line:288:12 invalid servername_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1ff427caa28 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1ff427caaa8 <col:34, col:39> col:39 ad 'int *'
| |-ParmVarDecl 0x1ff427cab28 <col:43, col:49> col:49 arg 'void *'
| `-CompoundStmt 0x1ff427cb6c0 <line:289:1, line:304:1>
|   |-DeclStmt 0x1ff427cae30 <line:290:5, col:78>
|   | `-VarDecl 0x1ff427cacb8 <col:5, col:17> col:17 used servername 'const char *'
|   |-IfStmt 0x1ff427cafd8 <line:291:5, line:294:5>
|   | |-BinaryOperator 0x1ff427caf20 <line:291:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ff427caef0 <.//openssl//file_jk/before\test\ssltest_old.c:291:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cae48 <col:9> 'const char *' lvalue Var 0x1ff427ca570 'sn_server2' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff427caf08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff427caed0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427caea8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427cae68 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff427cafc8 <.//openssl//file_jk/before\test\ssltest_old.c:291:29, line:294:5>
|   `-IfStmt 0x1ff427cb6a8 <line:296:5, line:302:5>
|     |-ImplicitCastExpr 0x1ff427cb028 <line:296:9> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x1ff427caff0 <col:9> 'const char *' lvalue Var 0x1ff427cacb8 'servername' 'const char *'
|     `-CompoundStmt 0x1ff427cb690 <col:21, line:302:5>
|       `-IfStmt 0x1ff427cb678 <line:297:9, line:301:9>
|         |-OpaqueValueExpr 0x1ff427cb660 <<invalid sloc>> '_Bool'
|         `-CompoundStmt 0x1ff427cb650 <line:298:50, line:301:9>
|-FunctionDecl 0x1ff427cb1c0 <line:298:14> col:14 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1ff427cb260 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ff427cb2c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ff427cb820 <line:305:1, line:323:1> line:305:12 invalid verify_servername 'int (int *, int *)' static
| |-ParmVarDecl 0x1ff427cb700 <col:30, col:35> col:35 invalid client 'int *'
| |-ParmVarDecl 0x1ff427cb780 <col:43, col:48> col:48 invalid server 'int *'
| `-CompoundStmt 0x1ff427dbfc0 <line:306:1, line:323:1>
|   |-IfStmt 0x1ff427cbab0 <line:309:5, line:310:16>
|   | |-BinaryOperator 0x1ff427cba58 <line:309:9, col:22> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ff427cba40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cb9f8 <col:9> 'int' lvalue Var 0x1ff427ca608 'sn_expect' 'int'
|   | | `-IntegerLiteral 0x1ff427cba18 <col:22> 'int' 0
|   | `-ReturnStmt 0x1ff427cbaa0 <line:310:9, col:16>
|   |   `-IntegerLiteral 0x1ff427cba78 <col:16> 'int' 0
|   |-IfStmt 0x1ff427cbb98 <line:311:5, line:312:16>
|   | |-OpaqueValueExpr 0x1ff427cbb80 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ff427cbb70 <col:9, col:16>
|   |   `-IntegerLiteral 0x1ff427cbb48 <col:16> 'int' 0
|   |-IfStmt 0x1ff427cbc80 <line:313:5, line:314:16>
|   | |-OpaqueValueExpr 0x1ff427cbc68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ff427cbc58 <col:9, col:16>
|   |   `-IntegerLiteral 0x1ff427cbc30 <col:16> 'int' 0
|   `-ReturnStmt 0x1ff427dbfb0 <line:322:5, col:13>
|     `-UnaryOperator 0x1ff427dbf98 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1ff427dbf70 <col:13> 'int' 1
|-FunctionDecl 0x1ff427dc1d0 <line:334:1, line:363:1> line:334:23 used next_protos_parse 'unsigned char *(size_t *, const char *)' static
| |-ParmVarDecl 0x1ff427dc000 <col:41, col:49> col:49 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427dc080 <line:335:41, col:53> col:53 used in 'const char *'
| `-CompoundStmt 0x1ff427dd808 <line:336:1, line:363:1>
|   |-DeclStmt 0x1ff427dc310 <line:337:5, col:15>
|   | `-VarDecl 0x1ff427dc2a8 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-DeclStmt 0x1ff427dc3a8 <line:338:5, col:23>
|   | `-VarDecl 0x1ff427dc340 <col:5, col:20> col:20 used out 'unsigned char *'
|   |-DeclStmt 0x1ff427dc508 <line:339:5, col:24>
|   | |-VarDecl 0x1ff427dc3d0 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1ff427dc448 <col:5, col:23> col:15 used start 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1ff427dc4d8 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff427dc4b0 <col:23> 'int' 0
|   |-BinaryOperator 0x1ff427dc630 <line:341:5, col:20> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1ff427dc520 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc2a8 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1ff427dc5f0 <col:11, col:20> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427dc5d8 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427dc558 <col:11> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1ff427dc618 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff427dc578 <col:18> 'const char *' lvalue ParmVar 0x1ff427dc080 'in' 'const char *'
|   |-IfStmt 0x1ff427dc798 <line:342:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1ff427dc6c8 <.//openssl//file_jk/before\test\ssltest_old.c:342:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ff427dc698 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427dc650 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc2a8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427dc6b0 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427dc670 <col:16> 'int' 65535
|   | `-ReturnStmt 0x1ff427dc788 <line:343:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1ff427dc770 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1ff427dc750 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ff427dc728 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ff427dc6e8 <col:26> 'int' 0
|   |-BinaryOperator 0x1ff427dca60 <.//openssl//file_jk/before\test\ssltest_old.c:345:5, col:40> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ff427dc7b0 <col:5> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ff427dca48 <col:11, col:40> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1ff427dca20 <col:11, col:40> 'int'
|   |     |-ImplicitCastExpr 0x1ff427dca08 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427dc8d8 <col:11> 'int ()' Function 0x1ff427dc810 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1ff427dc9e8 <col:26, col:39> 'unsigned long long' '+'
|   |       |-CallExpr 0x1ff427dc968 <col:26, col:35> 'unsigned long long'
|   |       | |-ImplicitCastExpr 0x1ff427dc950 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1ff427dc8f8 <col:26> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |       | `-ImplicitCastExpr 0x1ff427dc990 <col:33> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1ff427dc918 <col:33> 'const char *' lvalue ParmVar 0x1ff427dc080 'in' 'const char *'
|   |       `-ImplicitCastExpr 0x1ff427dc9d0 <col:39> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ff427dc9a8 <col:39> 'int' 1
|   |-IfStmt 0x1ff427dcb80 <line:346:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x1ff427dcab8 <.//openssl//file_jk/before\test\ssltest_old.c:346:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427dcaa0 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427dca80 <col:10> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|   | `-ReturnStmt 0x1ff427dcb70 <line:347:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1ff427dcb58 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1ff427dcb38 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ff427dcb10 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ff427dcad0 <col:26> 'int' 0
|   |-ForStmt 0x1ff427dd680 <.//openssl//file_jk/before\test\ssltest_old.c:349:5, line:359:5>
|   | |-BinaryOperator 0x1ff427dcc10 <line:349:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1ff427dcb98 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427dcbf8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427dcbd0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ff427dcca0 <col:17, col:22> 'int' '<='
|   | | |-ImplicitCastExpr 0x1ff427dcc70 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427dcc30 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427dcc88 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427dcc50 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc2a8 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1ff427dcce0 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x1ff427dccc0 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1ff427dd668 <col:32, line:359:5>
|   |   `-IfStmt 0x1ff427dd640 <line:350:9, line:358:30> has_else
|   |     |-BinaryOperator 0x1ff427dce80 <line:350:13, col:34> 'int' '||'
|   |     | |-BinaryOperator 0x1ff427dcd68 <col:13, col:18> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x1ff427dcd38 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1ff427dccf8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x1ff427dcd50 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1ff427dcd18 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc2a8 'len' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x1ff427dce60 <col:25, col:34> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x1ff427dce48 <col:25, col:29> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x1ff427dce30 <col:25, col:29> 'char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x1ff427dcdf8 <col:25, col:29> 'const char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x1ff427dcdc8 <col:25> 'const char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x1ff427dcd88 <col:25> 'const char *' lvalue ParmVar 0x1ff427dc080 'in' 'const char *'
|   |     |   |     `-ImplicitCastExpr 0x1ff427dcde0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x1ff427dcda8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |     |   `-CharacterLiteral 0x1ff427dce18 <col:34> 'int' 44
|   |     |-CompoundStmt 0x1ff427dd448 <col:39, line:357:9>
|   |     | |-IfStmt 0x1ff427dd200 <line:351:13, line:354:13>
|   |     | | |-BinaryOperator 0x1ff427dcf88 <line:351:17, col:29> 'int' '>'
|   |     | | | |-BinaryOperator 0x1ff427dcf28 <col:17, col:21> 'unsigned long long' '-'
|   |     | | | | |-ImplicitCastExpr 0x1ff427dcef8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | | `-DeclRefExpr 0x1ff427dcea0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |     | | | | `-ImplicitCastExpr 0x1ff427dcf10 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x1ff427dcec0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc448 'start' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x1ff427dcf70 <col:29> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1ff427dcf48 <col:29> 'int' 255
|   |     | | `-CompoundStmt 0x1ff427dd1e0 <col:34, line:354:13>
|   |     | |   |-CallExpr 0x1ff427dd0f0 <line:352:17, col:33> 'int'
|   |     | |   | |-ImplicitCastExpr 0x1ff427dd0d8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x1ff427dd098 <col:17> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   |     | |   | `-ImplicitCastExpr 0x1ff427dd118 <col:30> 'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x1ff427dd0b8 <col:30> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|   |     | |   `-ReturnStmt 0x1ff427dd1d0 <line:353:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |     `-ImplicitCastExpr 0x1ff427dd1b8 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x1ff427dd198 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x1ff427dd170 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x1ff427dd130 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x1ff427dd350 <.//openssl//file_jk/before\test\ssltest_old.c:355:13, col:30> 'unsigned char' '='
|   |     | | |-ArraySubscriptExpr 0x1ff427dd288 <col:13, col:22> 'unsigned char' lvalue
|   |     | | | |-ImplicitCastExpr 0x1ff427dd258 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1ff427dd218 <col:13> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|   |     | | | `-ImplicitCastExpr 0x1ff427dd270 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1ff427dd238 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc448 'start' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x1ff427dd338 <col:26, col:30> 'unsigned char' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1ff427dd318 <col:26, col:30> 'unsigned long long' '-'
|   |     | |     |-ImplicitCastExpr 0x1ff427dd2e8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x1ff427dd2a8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |     | |     `-ImplicitCastExpr 0x1ff427dd300 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1ff427dd2c8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc448 'start' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x1ff427dd428 <line:356:13, col:25> 'size_t':'unsigned long long' '='
|   |     |   |-DeclRefExpr 0x1ff427dd370 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc448 'start' 'size_t':'unsigned long long'
|   |     |   `-BinaryOperator 0x1ff427dd408 <col:21, col:25> 'unsigned long long' '+'
|   |     |     |-ImplicitCastExpr 0x1ff427dd3d8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1ff427dd390 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |     |     `-ImplicitCastExpr 0x1ff427dd3f0 <col:25> 'unsigned long long' <IntegralCast>
|   |     |       `-IntegerLiteral 0x1ff427dd3b0 <col:25> 'int' 1
|   |     `-BinaryOperator 0x1ff427dd620 <line:358:13, col:30> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x1ff427dd540 <col:13, col:22> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x1ff427dd528 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1ff427dd470 <col:13> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|   |       | `-BinaryOperator 0x1ff427dd508 <col:17, col:21> 'unsigned long long' '+'
|   |       |   |-ImplicitCastExpr 0x1ff427dd4d8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ff427dd490 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |       |   `-ImplicitCastExpr 0x1ff427dd4f0 <col:21> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1ff427dd4b0 <col:21> 'int' 1
|   |       `-ImplicitCastExpr 0x1ff427dd608 <col:26, col:30> 'unsigned char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x1ff427dd5f0 <col:26, col:30> 'char' <LValueToRValue>
|   |           `-ArraySubscriptExpr 0x1ff427dd5d0 <col:26, col:30> 'const char' lvalue
|   |             |-ImplicitCastExpr 0x1ff427dd5a0 <col:26> 'const char *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1ff427dd560 <col:26> 'const char *' lvalue ParmVar 0x1ff427dc080 'in' 'const char *'
|   |             `-ImplicitCastExpr 0x1ff427dd5b8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |               `-DeclRefExpr 0x1ff427dd580 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc3d0 'i' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1ff427dd7a0 <line:361:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427dd6f0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427dd6d8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427dd6b8 <col:6> 'size_t *' lvalue ParmVar 0x1ff427dc000 'outlen' 'size_t *'
|   | `-BinaryOperator 0x1ff427dd780 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1ff427dd750 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff427dd708 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1ff427dc2a8 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1ff427dd768 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff427dd728 <col:21> 'int' 1
|   `-ReturnStmt 0x1ff427dd7f8 <line:362:5, col:12>
|     `-ImplicitCastExpr 0x1ff427dd7e0 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1ff427dd7c0 <col:12> 'unsigned char *' lvalue Var 0x1ff427dc340 'out' 'unsigned char *'
|-FunctionDecl 0x1ff427ddc20 <line:365:1, line:397:1> line:365:12 invalid cb_server_alpn 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1ff427dd880 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x1ff427dd908 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427dd988 <line:366:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1ff427dda08 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427dda88 <line:367:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x1ff427ddb08 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x1ff427d6e50 <line:368:1, line:397:1>
|   |-DeclStmt 0x1ff427ddd88 <line:369:5, col:26>
|   | `-VarDecl 0x1ff427ddd20 <col:5, col:20> col:20 used protos 'unsigned char *'
|   |-DeclStmt 0x1ff427dde18 <line:370:5, col:22>
|   | `-VarDecl 0x1ff427dddb0 <col:5, col:12> col:12 used protos_len 'size_t':'unsigned long long'
|   |-DeclStmt 0x1ff427d5ef0 <line:371:5, col:25>
|   | `-VarDecl 0x1ff427d5e20 <col:5, col:22> col:11 used alpn_str 'char *' cinit
|   |   `-ImplicitCastExpr 0x1ff427d5ed8 <col:22> 'char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1ff427d5ec0 <col:22> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff427d5e88 <col:22> 'void *' lvalue ParmVar 0x1ff427ddb08 'arg' 'void *'
|   |-BinaryOperator 0x1ff427d60c0 <line:373:5, col:53> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ff427d5f08 <col:5> 'unsigned char *' lvalue Var 0x1ff427ddd20 'protos' 'unsigned char *'
|   | `-CallExpr 0x1ff427d6060 <col:14, col:53> 'unsigned char *'
|   |   |-ImplicitCastExpr 0x1ff427d6048 <col:14> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427d5f40 <col:14> 'unsigned char *(size_t *, const char *)' Function 0x1ff427dc1d0 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   |   |-UnaryOperator 0x1ff427d5f98 <col:32, col:33> 'size_t *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1ff427d5f60 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1ff427dddb0 'protos_len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1ff427d60a8 <col:45> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1ff427d6090 <col:45> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff427d5fb0 <col:45> 'char *' lvalue Var 0x1ff427d5e20 'alpn_str' 'char *'
|   |-IfStmt 0x1ff427d6520 <line:374:5, line:378:5>
|   | |-BinaryOperator 0x1ff427d61b8 <line:374:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ff427d6188 <.//openssl//file_jk/before\test\ssltest_old.c:374:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d60e0 <col:9> 'unsigned char *' lvalue Var 0x1ff427ddd20 'protos' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1ff427d61a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1ff427d6168 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427d6140 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427d6100 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff427d6500 <.//openssl//file_jk/before\test\ssltest_old.c:374:25, line:378:5>
|   |   |-CallExpr 0x1ff427d6400 <line:375:9, line:376:25> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427d63e8 <line:375:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427d61d8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff427d62b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff427d6298 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff427d6278 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff427d6230 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff427d6218 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff427d61f8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff427d6250 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1ff427d6450 <.//openssl//file_jk/before\test\ssltest_old.c:375:25> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff427d6438 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff427d6308 <col:25> 'char [50]' lvalue "failed to parser ALPN server protocol string: %s\n"
|   |   | `-ImplicitCastExpr 0x1ff427d6468 <line:376:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff427d6358 <col:17> 'char *' lvalue Var 0x1ff427d5e20 'alpn_str' 'char *'
|   |   `-CallExpr 0x1ff427d64e0 <line:377:9, col:15> 'void'
|   |     `-ImplicitCastExpr 0x1ff427d64c8 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1ff427d6480 <col:9> 'void (void) __attribute__((noreturn))' Function 0x1ff42780308 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x1ff427d6970 <line:380:5, line:385:5>
|   | |-OpaqueValueExpr 0x1ff427d6958 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427d6940 <line:382:44, line:385:5>
|   |   `-CallExpr 0x1ff427d6900 <line:383:9, col:28> 'int'
|   |     |-ImplicitCastExpr 0x1ff427d68e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427d68a8 <col:9> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1ff427d6928 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff427d68c8 <col:22> 'unsigned char *' lvalue Var 0x1ff427ddd20 'protos' 'unsigned char *'
|   |-BinaryOperator 0x1ff427d6aa0 <line:391:5, col:43> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ff427d6988 <col:5> 'unsigned char *' lvalue Var 0x1ff427ca0b0 'alpn_selected' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ff427d6a88 <col:21, col:43> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1ff427d6a30 <col:21, col:43> 'int'
|   |     |-ImplicitCastExpr 0x1ff427d6a18 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427d69a8 <col:21> 'int ()' Function 0x1ff427dc810 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1ff427d6a70 <col:36, col:37> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1ff427d6a58 <col:36, col:37> 'unsigned char' <LValueToRValue>
|   |         `-UnaryOperator 0x1ff427d6a00 <col:36, col:37> 'unsigned char' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1ff427d69e8 <col:37> 'unsigned char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1ff427d69c8 <col:37> 'unsigned char *' lvalue ParmVar 0x1ff427dd988 'outlen' 'unsigned char *'
|   |-CallExpr 0x1ff427d6c30 <line:392:5, col:40> 'void *'
|   | |-ImplicitCastExpr 0x1ff427d6c18 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d6ac0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1ff42867038 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1ff427d6c80 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1ff427d6c68 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d6ae0 <col:12> 'unsigned char *' lvalue Var 0x1ff427ca0b0 'alpn_selected' 'unsigned char *'
|   | |-ImplicitCastExpr 0x1ff427d6cb0 <col:27, col:28> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1ff427d6c98 <col:27, col:28> 'const unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x1ff427d6b38 <col:27, col:28> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x1ff427d6b20 <col:28> 'const unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1ff427d6b00 <col:28> 'const unsigned char **' lvalue ParmVar 0x1ff427dd908 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1ff427d6ce0 <col:33, col:34> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1ff427d6cc8 <col:33, col:34> 'unsigned char' <LValueToRValue>
|   |     `-UnaryOperator 0x1ff427d6b88 <col:33, col:34> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1ff427d6b70 <col:34> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1ff427d6b50 <col:34> 'unsigned char *' lvalue ParmVar 0x1ff427dd988 'outlen' 'unsigned char *'
|   |-BinaryOperator 0x1ff427d6d98 <line:393:5, col:12> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427d6d30 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d6d18 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d6cf8 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427dd908 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1ff427d6d80 <col:12> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d6d68 <col:12> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff427d6d48 <col:12> 'unsigned char *' lvalue Var 0x1ff427ca0b0 'alpn_selected' 'unsigned char *'
|   `-CallExpr 0x1ff427d6e10 <line:395:5, col:24> 'int'
|     |-ImplicitCastExpr 0x1ff427d6df8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1ff427d6db8 <col:5> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1ff427d6e38 <col:18> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1ff427d6dd8 <col:18> 'unsigned char *' lvalue Var 0x1ff427ddd20 'protos' 'unsigned char *'
|-FunctionDecl 0x1ff427d6fe8 <line:399:1, line:452:1> line:399:12 invalid verify_alpn 'int (int *, int *)' static
| |-ParmVarDecl 0x1ff427d6ec8 <col:24, col:29> col:29 invalid client 'int *'
| |-ParmVarDecl 0x1ff427d6f48 <col:37, col:42> col:42 invalid server 'int *'
| `-CompoundStmt 0x1ff427ce928 <line:400:1, line:452:1>
|   |-DeclStmt 0x1ff427d71c8 <line:401:5, col:53>
|   | |-VarDecl 0x1ff427d70c8 <col:5, col:26> col:26 used client_proto 'const unsigned char *'
|   | `-VarDecl 0x1ff427d7148 <col:5, col:41> col:41 used server_proto 'const unsigned char *'
|   |-DeclStmt 0x1ff427d7378 <line:402:5, col:60>
|   | |-VarDecl 0x1ff427d71f8 <col:5, col:37> col:18 used client_proto_len 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x1ff427d7288 <col:37> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427d7260 <col:37> 'int' 0
|   | `-VarDecl 0x1ff427d72b8 <col:5, col:59> col:40 used server_proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1ff427d7348 <col:59> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff427d7320 <col:59> 'int' 0
|   |-CallExpr 0x1ff427d7658 <line:406:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x1ff427d7640 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d7600 <col:5> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1ff427d7680 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ff427d7620 <col:18> 'unsigned char *' lvalue Var 0x1ff427ca0b0 'alpn_selected' 'unsigned char *'
|   |-BinaryOperator 0x1ff427d7758 <line:407:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ff427d7698 <.//openssl//file_jk/before\test\ssltest_old.c:407:5> 'unsigned char *' lvalue Var 0x1ff427ca0b0 'alpn_selected' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ff427d7740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x1ff427d7720 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1ff427d76f8 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1ff427d76b8 <col:26> 'int' 0
|   |-IfStmt 0x1ff427d78e0 <.//openssl//file_jk/before\test\ssltest_old.c:409:5, line:412:5>
|   | |-BinaryOperator 0x1ff427d77e8 <line:409:9, col:29> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d77b8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d7778 <col:9> 'unsigned int' lvalue Var 0x1ff427d71f8 'client_proto_len' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427d77d0 <col:29> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d7798 <col:29> 'unsigned int' lvalue Var 0x1ff427d72b8 'server_proto_len' 'unsigned int'
|   | `-CompoundStmt 0x1ff427d78c8 <col:47, line:412:5>
|   |   `-GotoStmt 0x1ff427d78b0 <line:411:9, col:14> 'err' 0x1ff427d7860
|   |-IfStmt 0x1ff427d7c88 <line:414:5, line:418:5>
|   | |-BinaryOperator 0x1ff427d7be0 <line:414:9, line:415:65> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427d79d0 <line:414:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff427d79a0 <.//openssl//file_jk/before\test\ssltest_old.c:414:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427d78f8 <col:9> 'const unsigned char *' lvalue Var 0x1ff427d70c8 'client_proto' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x1ff427d79b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff427d7980 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff427d7958 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff427d7918 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff427d7bc0 <.//openssl//file_jk/before\test\ssltest_old.c:415:9, col:65> 'int' '!='
|   | |   |-CallExpr 0x1ff427d7ad0 <col:9, col:60> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff427d7ab8 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff427d79f0 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x1ff427d7b20 <col:16> 'const void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x1ff427d7b08 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1ff427d7a10 <col:16> 'const unsigned char *' lvalue Var 0x1ff427d70c8 'client_proto' 'const unsigned char *'
|   | |   | |-ImplicitCastExpr 0x1ff427d7b50 <col:30> 'const void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x1ff427d7b38 <col:30> 'const unsigned char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1ff427d7a30 <col:30> 'const unsigned char *' lvalue Var 0x1ff427d7148 'server_proto' 'const unsigned char *'
|   | |   | `-ImplicitCastExpr 0x1ff427d7b80 <col:44> 'unsigned long long' <IntegralCast>
|   | |   |   `-ImplicitCastExpr 0x1ff427d7b68 <col:44> 'unsigned int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1ff427d7a50 <col:44> 'unsigned int' lvalue Var 0x1ff427d71f8 'client_proto_len' 'unsigned int'
|   | |   `-IntegerLiteral 0x1ff427d7b98 <col:65> 'int' 0
|   | `-CompoundStmt 0x1ff427d7c70 <col:68, line:418:5>
|   |   `-GotoStmt 0x1ff427d7c58 <line:417:9, col:14> 'err' 0x1ff427d7860
|   |-IfStmt 0x1ff427cdee0 <line:420:5, line:423:5>
|   | |-BinaryOperator 0x1ff427cde00 <line:420:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427d7d18 <.//openssl//file_jk/before\test\ssltest_old.c:420:9, col:28> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1ff427d7ce8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427d7ca0 <col:9> 'unsigned int' lvalue Var 0x1ff427d71f8 'client_proto_len' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1ff427d7d00 <col:28> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1ff427d7cc0 <col:28> 'int' 0
|   | | `-BinaryOperator 0x1ff427cdde0 <col:33, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1ff427d7de0 <.//openssl//file_jk/before\test\ssltest_old.c:420:33> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ff427d7d38 <col:33> 'const char *' lvalue Var 0x1ff427ca018 'alpn_expected' 'const char *'
|   | |   `-ImplicitCastExpr 0x1ff427d7df8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |     `-ParenExpr 0x1ff427d7dc0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1ff427d7d98 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1ff427d7d58 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff427cdec8 <.//openssl//file_jk/before\test\ssltest_old.c:420:56, line:423:5>
|   |   `-GotoStmt 0x1ff427cdeb0 <line:422:9, col:14> 'err' 0x1ff427d7860
|   |-IfStmt 0x1ff427ce460 <line:425:5, line:432:5>
|   | |-BinaryOperator 0x1ff427ce340 <line:425:9, line:427:68> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427cdfd0 <line:425:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff427cdfa0 <.//openssl//file_jk/before\test\ssltest_old.c:425:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427cdef8 <col:9> 'const char *' lvalue Var 0x1ff427ca018 'alpn_expected' 'const char *'
|   | | | `-ImplicitCastExpr 0x1ff427cdfb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff427cdf80 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff427cdf58 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff427cdf18 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ff427ce320 <.//openssl//file_jk/before\test\ssltest_old.c:426:9, line:427:68> 'int'
|   | |   `-BinaryOperator 0x1ff427ce300 <line:426:10, line:427:67> 'int' '||'
|   | |     |-BinaryOperator 0x1ff427ce0f0 <line:426:10, col:50> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x1ff427ce0d8 <col:10> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x1ff427ce0c0 <col:10> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x1ff427cdff0 <col:10> 'unsigned int' lvalue Var 0x1ff427d71f8 'client_proto_len' 'unsigned int'
|   | |     | `-CallExpr 0x1ff427ce080 <col:30, col:50> 'unsigned long long'
|   | |     |   |-ImplicitCastExpr 0x1ff427ce068 <col:30> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x1ff427ce010 <col:30> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   | |     |   `-ImplicitCastExpr 0x1ff427ce0a8 <col:37> 'const char *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x1ff427ce030 <col:37> 'const char *' lvalue Var 0x1ff427ca018 'alpn_expected' 'const char *'
|   | |     `-BinaryOperator 0x1ff427ce2e0 <line:427:10, col:67> 'int' '!='
|   | |       |-CallExpr 0x1ff427ce1f0 <col:10, col:62> 'int'
|   | |       | |-ImplicitCastExpr 0x1ff427ce1d8 <col:10> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | | `-DeclRefExpr 0x1ff427ce110 <col:10> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       | |-ImplicitCastExpr 0x1ff427ce240 <col:17> 'const void *' <BitCast>
|   | |       | | `-ImplicitCastExpr 0x1ff427ce228 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |       | |   `-DeclRefExpr 0x1ff427ce130 <col:17> 'const unsigned char *' lvalue Var 0x1ff427d70c8 'client_proto' 'const unsigned char *'
|   | |       | |-ImplicitCastExpr 0x1ff427ce270 <col:31> 'const void *' <BitCast>
|   | |       | | `-ImplicitCastExpr 0x1ff427ce258 <col:31> 'const char *' <LValueToRValue>
|   | |       | |   `-DeclRefExpr 0x1ff427ce150 <col:31> 'const char *' lvalue Var 0x1ff427ca018 'alpn_expected' 'const char *'
|   | |       | `-ImplicitCastExpr 0x1ff427ce2a0 <col:46> 'unsigned long long' <IntegralCast>
|   | |       |   `-ImplicitCastExpr 0x1ff427ce288 <col:46> 'unsigned int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x1ff427ce170 <col:46> 'unsigned int' lvalue Var 0x1ff427d71f8 'client_proto_len' 'unsigned int'
|   | |       `-IntegerLiteral 0x1ff427ce2b8 <col:67> 'int' 0
|   | `-CompoundStmt 0x1ff427ce448 <col:71, line:432:5>
|   |   `-GotoStmt 0x1ff427ce430 <line:431:9, col:14> 'err' 0x1ff427d7860
|   |-ReturnStmt 0x1ff427ce4a0 <line:434:5, col:12>
|   | `-IntegerLiteral 0x1ff427ce478 <col:12> 'int' 0
|   |-LabelStmt 0x1ff427ce540 <line:436:2, col:5> 'err'
|   | `-NullStmt 0x1ff427ce538 <col:5>
|   |-IfStmt 0x1ff427ce8b0 <line:444:5, line:450:5> has_else
|   | |-OpaqueValueExpr 0x1ff427ce898 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ff427ce818 <line:444:44, line:447:5>
|   | `-CompoundStmt 0x1ff427ce888 <col:12, line:450:5>
|   `-ReturnStmt 0x1ff427ce918 <line:451:5, col:13>
|     `-UnaryOperator 0x1ff427ce900 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1ff427ce8d8 <col:13> 'int' 1
|-VarDecl 0x1ff427ce9b8 <line:465:1, col:45> col:19 used custom_ext_cli_string 'const char [4]' static cinit
| `-StringLiteral 0x1ff427cea58 <col:45> 'const char [4]' "abc"
|-VarDecl 0x1ff427ceae8 <line:466:1, col:45> col:19 used custom_ext_srv_string 'const char [5]' static cinit
| `-StringLiteral 0x1ff427ceb50 <col:45> 'const char [5]' "defg"
|-VarDecl 0x1ff427cebe0 <line:469:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:469:14 used serverinfo_file 'char *' static cinit
| `-ImplicitCastExpr 0x1ff427cece8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x1ff427cecb0 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x1ff427cec88 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x1ff427cec48 <col:26> 'int' 0
|-VarDecl 0x1ff427ced18 <.//openssl//file_jk/before\test\ssltest_old.c:470:1, col:29> col:12 used serverinfo_sct 'int' static cinit
| `-IntegerLiteral 0x1ff427ced80 <col:29> 'int' 0
|-VarDecl 0x1ff427cedd8 <line:471:1, col:30> col:12 used serverinfo_tack 'int' static cinit
| `-IntegerLiteral 0x1ff427cee40 <col:30> 'int' 0
|-VarDecl 0x1ff427cee98 <line:474:1, col:34> col:12 used serverinfo_sct_seen 'int' static cinit
| `-IntegerLiteral 0x1ff427cef00 <col:34> 'int' 0
|-VarDecl 0x1ff427cef58 <line:475:1, col:35> col:12 used serverinfo_tack_seen 'int' static cinit
| `-IntegerLiteral 0x1ff427cefc0 <col:35> 'int' 0
|-VarDecl 0x1ff427cf018 <line:476:1, col:36> col:12 used serverinfo_other_seen 'int' static cinit
| `-IntegerLiteral 0x1ff427cf080 <col:36> 'int' 0
|-VarDecl 0x1ff427cf0d8 <line:479:1, col:25> col:12 used custom_ext 'int' static cinit
| `-IntegerLiteral 0x1ff427cf140 <col:25> 'int' 0
|-VarDecl 0x1ff427cf198 <line:482:1, col:31> col:12 used custom_ext_error 'int' static cinit
| `-IntegerLiteral 0x1ff427cf200 <col:31> 'int' 0
|-FunctionDecl 0x1ff427cf650 <line:484:1, line:495:1> line:484:12 invalid serverinfo_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427cf258 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427cf2d8 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427cf358 <line:485:36, col:57> col:57 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427cf3d0 <col:61, col:68> col:68 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427cf450 <line:486:36, col:41> col:41 al 'int *'
| |-ParmVarDecl 0x1ff427cf4d0 <col:45, col:51> col:51 arg 'void *'
| `-CompoundStmt 0x1ff427cf950 <line:487:1, line:495:1>
|   |-IfStmt 0x1ff427cf8f0 <line:488:5, line:493:30> has_else
|   | |-OpaqueValueExpr 0x1ff427cf8d8 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x1ff427cf790 <line:489:9, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ff427cf770 <col:9> 'int' lvalue Var 0x1ff427cee98 'serverinfo_sct_seen' 'int'
|   | `-IfStmt 0x1ff427cf8b0 <line:490:10, line:493:30> has_else
|   |   |-BinaryOperator 0x1ff427cf820 <line:490:14, line:459:23> 'int' '=='
|   |   | |-ImplicitCastExpr 0x1ff427cf7f0 <line:490:14> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ff427cf7a8 <col:14> 'unsigned int' lvalue ParmVar 0x1ff427cf2d8 'ext_type' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1ff427cf808 <line:459:23> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1ff427cf7c8 <col:23> 'int' 62208
|   |   |-UnaryOperator 0x1ff427cf860 <line:491:9, col:29> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1ff427cf840 <col:9> 'int' lvalue Var 0x1ff427cef58 'serverinfo_tack_seen' 'int'
|   |   `-UnaryOperator 0x1ff427cf898 <line:493:9, col:30> 'int' postfix '++'
|   |     `-DeclRefExpr 0x1ff427cf878 <col:9> 'int' lvalue Var 0x1ff427cf018 'serverinfo_other_seen' 'int'
|   `-ReturnStmt 0x1ff427cf940 <line:494:5, col:12>
|     `-IntegerLiteral 0x1ff427cf918 <col:12> 'int' 1
|-FunctionDecl 0x1ff427cf998 <line:497:1, line:506:1> line:497:12 used verify_serverinfo 'int ()' static
| `-CompoundStmt 0x1ff427cfd18 <line:498:1, line:506:1>
|   |-IfStmt 0x1ff427cfb30 <line:499:5, line:500:17>
|   | |-BinaryOperator 0x1ff427cfac0 <line:499:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427cfa90 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cfa50 <col:9> 'int' lvalue Var 0x1ff427ced18 'serverinfo_sct' 'int'
|   | | `-ImplicitCastExpr 0x1ff427cfaa8 <col:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cfa70 <col:27> 'int' lvalue Var 0x1ff427cee98 'serverinfo_sct_seen' 'int'
|   | `-ReturnStmt 0x1ff427cfb20 <line:500:9, col:17>
|   |   `-UnaryOperator 0x1ff427cfb08 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cfae0 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cfc28 <line:501:5, line:502:17>
|   | |-BinaryOperator 0x1ff427cfbb8 <line:501:9, col:28> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427cfb88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427cfb48 <col:9> 'int' lvalue Var 0x1ff427cedd8 'serverinfo_tack' 'int'
|   | | `-ImplicitCastExpr 0x1ff427cfba0 <col:28> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427cfb68 <col:28> 'int' lvalue Var 0x1ff427cef58 'serverinfo_tack_seen' 'int'
|   | `-ReturnStmt 0x1ff427cfc18 <line:502:9, col:17>
|   |   `-UnaryOperator 0x1ff427cfc00 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cfbd8 <col:17> 'int' 1
|   |-IfStmt 0x1ff427cfcc8 <line:503:5, line:504:17>
|   | |-ImplicitCastExpr 0x1ff427cfc60 <line:503:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427cfc40 <col:9> 'int' lvalue Var 0x1ff427cf018 'serverinfo_other_seen' 'int'
|   | `-ReturnStmt 0x1ff427cfcb8 <line:504:9, col:17>
|   |   `-UnaryOperator 0x1ff427cfca0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427cfc78 <col:17> 'int' 1
|   `-ReturnStmt 0x1ff427cfd08 <line:505:5, col:12>
|     `-IntegerLiteral 0x1ff427cfce0 <col:12> 'int' 0
|-FunctionDecl 0x1ff427d0170 <line:516:1, line:523:1> line:516:12 invalid custom_ext_0_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427cfd60 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427cfdf0 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427cfe78 <line:517:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427cfef0 <line:518:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x1ff427cff70 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427cfff0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d03c0 <line:519:1, line:523:1>
|   |-IfStmt 0x1ff427d0370 <line:520:5, line:521:28>
|   | |-BinaryOperator 0x1ff427d02e8 <line:520:9, line:460:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d02b8 <line:520:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d0258 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427cfdf0 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427d02d0 <line:460:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427d0290 <col:27> 'int' 1000
|   | `-BinaryOperator 0x1ff427d0350 <line:521:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d0308 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d0328 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427d03b0 <line:522:5, col:12>
|     `-IntegerLiteral 0x1ff427d0388 <col:12> 'int' 0
|-FunctionDecl 0x1ff427d0790 <line:525:1, line:530:1> line:525:12 invalid custom_ext_0_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427d0458 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d04d8 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d0558 <line:526:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427d05d0 <line:527:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427d0650 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d06d0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d08b0 <line:528:1, line:530:1>
|   `-ReturnStmt 0x1ff427d08a0 <line:529:5, col:12>
|     `-IntegerLiteral 0x1ff427d0878 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d0c98 <line:532:1, line:541:1> line:532:12 invalid custom_ext_1_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427d0958 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d09d8 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d0a60 <line:533:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427d0ad8 <line:534:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427d0b58 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d0bd8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d1168 <line:535:1, line:541:1>
|   |-IfStmt 0x1ff427d0e98 <line:536:5, line:537:28>
|   | |-BinaryOperator 0x1ff427d0e10 <line:536:9, line:461:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d0de0 <line:536:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d0d80 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427d09d8 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427d0df8 <line:461:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427d0db8 <col:27> 'int' 1001
|   | `-BinaryOperator 0x1ff427d0e78 <line:537:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d0e30 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d0e50 <col:28> 'int' 1
|   |-BinaryOperator 0x1ff427d0f90 <line:538:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427d0f00 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d0ee8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d0eb0 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427d0a60 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x1ff427d0f68 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ff427d0f50 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ff427d0f18 <col:35> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x1ff427d10c8 <line:539:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427d1000 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d0fe8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d0fb0 <col:6> 'size_t *' lvalue ParmVar 0x1ff427d0ad8 'outlen' 'size_t *'
|   | `-CallExpr 0x1ff427d1088 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427d1070 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427d1018 <col:15> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1ff427d10b0 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1ff427d1038 <col:22> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x1ff427d1158 <line:540:5, col:12>
|     `-IntegerLiteral 0x1ff427d1130 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d1518 <line:543:1, line:548:1> line:543:12 invalid custom_ext_1_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427d11e0 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d1260 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d12e0 <line:544:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427d1358 <line:545:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427d13d8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d1458 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d1638 <line:546:1, line:548:1>
|   `-ReturnStmt 0x1ff427d1628 <line:547:5, col:12>
|     `-IntegerLiteral 0x1ff427d1600 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d1a20 <line:550:1, line:559:1> line:550:12 invalid custom_ext_2_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427d16e0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d1760 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d17e8 <line:551:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427d1860 <line:552:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427d18e0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d1960 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427dff38 <line:553:1, line:559:1>
|   |-IfStmt 0x1ff427d1c20 <line:554:5, line:555:28>
|   | |-BinaryOperator 0x1ff427d1b98 <line:554:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d1b68 <line:554:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d1b08 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427d1760 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427d1b80 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427d1b40 <col:27> 'int' 1002
|   | `-BinaryOperator 0x1ff427d1c00 <line:555:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d1bb8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d1bd8 <col:28> 'int' 1
|   |-BinaryOperator 0x1ff427d1d18 <line:556:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427d1c88 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d1c70 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d1c38 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427d17e8 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x1ff427d1cf0 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ff427d1cd8 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ff427d1ca0 <col:35> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x1ff427dfee0 <line:557:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427d1d88 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d1d70 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d1d38 <col:6> 'size_t *' lvalue ParmVar 0x1ff427d1860 'outlen' 'size_t *'
|   | `-CallExpr 0x1ff427dfea0 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427dfe88 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427d1da0 <col:15> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1ff427dfec8 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1ff427d1dc0 <col:22> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x1ff427dff28 <line:558:5, col:12>
|     `-IntegerLiteral 0x1ff427dff00 <col:12> 'int' 1
|-FunctionDecl 0x1ff427e02e8 <line:561:1, line:570:1> line:561:12 invalid custom_ext_2_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427dffb0 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427e0030 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427e00b0 <line:562:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427e0128 <line:563:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427e01a8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427e0228 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427e0668 <line:564:1, line:570:1>
|   |-IfStmt 0x1ff427e04e8 <line:565:5, line:566:28>
|   | |-BinaryOperator 0x1ff427e0460 <line:565:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e0430 <line:565:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e03d0 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427e0030 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427e0448 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427e0408 <col:27> 'int' 1002
|   | `-BinaryOperator 0x1ff427e04c8 <line:566:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e0480 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e04a0 <col:28> 'int' 1
|   |-IfStmt 0x1ff427e0618 <line:567:5, line:568:28>
|   | |-BinaryOperator 0x1ff427e0590 <line:567:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e0560 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e0500 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427e0128 'inlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427e0578 <col:18> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427e0538 <col:18> 'int' 0
|   | `-BinaryOperator 0x1ff427e05f8 <line:568:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e05b0 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e05d0 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427e0658 <line:569:5, col:12>
|     `-IntegerLiteral 0x1ff427e0630 <col:12> 'int' 1
|-FunctionDecl 0x1ff427e0a30 <line:572:1, line:581:1> line:572:12 invalid custom_ext_3_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427e06f0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427e0770 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427e07f8 <line:573:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427e0870 <line:574:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427e08f0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427e0970 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427e0eb8 <line:575:1, line:581:1>
|   |-IfStmt 0x1ff427e0c30 <line:576:5, line:577:28>
|   | |-BinaryOperator 0x1ff427e0ba8 <line:576:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e0b78 <line:576:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e0b18 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427e0770 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427e0b90 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427e0b50 <col:27> 'int' 1003
|   | `-BinaryOperator 0x1ff427e0c10 <line:577:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e0bc8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e0be8 <col:28> 'int' 1
|   |-BinaryOperator 0x1ff427e0d28 <line:578:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427e0c98 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427e0c80 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427e0c48 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427e07f8 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x1ff427e0d00 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ff427e0ce8 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ff427e0cb0 <col:35> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x1ff427e0e60 <line:579:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427e0d98 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427e0d80 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427e0d48 <col:6> 'size_t *' lvalue ParmVar 0x1ff427e0870 'outlen' 'size_t *'
|   | `-CallExpr 0x1ff427e0e20 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427e0e08 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427e0db0 <col:15> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1ff427e0e48 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1ff427e0dd0 <col:22> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x1ff427e0ea8 <line:580:5, col:12>
|     `-IntegerLiteral 0x1ff427e0e80 <col:12> 'int' 1
|-FunctionDecl 0x1ff427e1268 <line:583:1, line:594:1> line:583:12 invalid custom_ext_3_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427e0f30 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427e0fb0 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427e1030 <line:584:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427e10a8 <line:585:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427e1128 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427e11a8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427e1910 <line:586:1, line:594:1>
|   |-IfStmt 0x1ff427e1468 <line:587:5, line:588:28>
|   | |-BinaryOperator 0x1ff427e13e0 <line:587:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e13b0 <line:587:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e1350 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427e0fb0 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427e13c8 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427e1388 <col:27> 'int' 1003
|   | `-BinaryOperator 0x1ff427e1448 <line:588:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e1400 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e1420 <col:28> 'int' 1
|   |-IfStmt 0x1ff427e1650 <line:589:5, line:590:28>
|   | |-BinaryOperator 0x1ff427e1580 <line:589:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e1568 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e1480 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427e10a8 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1ff427e1528 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1ff427e1510 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ff427e14b8 <col:18> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1ff427e1550 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x1ff427e14d8 <col:25> 'const char [5]' lvalue Var 0x1ff427ceae8 'custom_ext_srv_string' 'const char [5]'
|   | `-BinaryOperator 0x1ff427e1630 <line:590:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e15e8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e1608 <col:28> 'int' 1
|   |-IfStmt 0x1ff427e18c0 <line:591:5, line:592:28>
|   | |-BinaryOperator 0x1ff427e1838 <line:591:9, col:53> 'int' '!='
|   | | |-CallExpr 0x1ff427e1760 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x1ff427e1748 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ff427e1668 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1ff427e17b0 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427e1798 <col:16> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1ff427e1688 <col:16> 'const char [5]' lvalue Var 0x1ff427ceae8 'custom_ext_srv_string' 'const char [5]'
|   | | | |-ImplicitCastExpr 0x1ff427e17e0 <col:39> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427e17c8 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1ff427e16a8 <col:39> 'const unsigned char *' lvalue ParmVar 0x1ff427e1030 'in' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x1ff427e17f8 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427e16e0 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427e10a8 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x1ff427e1810 <col:53> 'int' 0
|   | `-BinaryOperator 0x1ff427e18a0 <line:592:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427e1858 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427e1878 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427e1900 <line:593:5, col:12>
|     `-IntegerLiteral 0x1ff427e18d8 <col:12> 'int' 1
|-FunctionDecl 0x1ff427e1cc0 <line:600:1, line:606:1> line:600:12 invalid custom_ext_0_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427e1988 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427e1a08 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427e1a88 <line:601:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427e1b00 <line:602:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427e1b80 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427e1c00 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427e1e48 <line:603:1, line:606:1>
|   |-BinaryOperator 0x1ff427e1df0 <line:604:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x1ff427e1da8 <col:5> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   | `-IntegerLiteral 0x1ff427e1dc8 <col:24> 'int' 1
|   `-ReturnStmt 0x1ff427e1e38 <line:605:5, col:12>
|     `-IntegerLiteral 0x1ff427e1e10 <col:12> 'int' 1
|-FunctionDecl 0x1ff427da210 <line:609:1, line:616:1> line:609:12 invalid custom_ext_0_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427d9ed0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d9f50 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d9fd8 <line:610:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427da050 <line:611:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x1ff427da0d0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427da150 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427da398 <line:612:1, line:616:1>
|   |-BinaryOperator 0x1ff427da340 <line:614:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x1ff427da2f8 <col:5> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   | `-IntegerLiteral 0x1ff427da318 <col:24> 'int' 1
|   `-ReturnStmt 0x1ff427da388 <line:615:5, col:12>
|     `-IntegerLiteral 0x1ff427da360 <col:12> 'int' 0
|-FunctionDecl 0x1ff427da780 <line:618:1, line:630:1> line:618:12 invalid custom_ext_1_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427da448 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427da4c8 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427da548 <line:619:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427da5c0 <line:620:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427da640 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427da6c0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427dade0 <line:621:1, line:630:1>
|   |-IfStmt 0x1ff427da980 <line:622:5, line:623:28>
|   | |-BinaryOperator 0x1ff427da8f8 <line:622:9, line:461:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427da8c8 <line:622:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427da868 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427da4c8 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427da8e0 <line:461:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427da8a0 <col:27> 'int' 1001
|   | `-BinaryOperator 0x1ff427da960 <line:623:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427da918 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427da938 <col:28> 'int' 1
|   |-IfStmt 0x1ff427dab20 <line:625:5, line:626:28>
|   | |-BinaryOperator 0x1ff427daa98 <line:625:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427daa80 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427da998 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427da5c0 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1ff427daa40 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1ff427daa28 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ff427da9d0 <col:18> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1ff427daa68 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x1ff427da9f0 <col:25> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x1ff427dab00 <line:626:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427daab8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427daad8 <col:28> 'int' 1
|   |-IfStmt 0x1ff427dad90 <line:627:5, line:628:28>
|   | |-BinaryOperator 0x1ff427dad08 <line:627:9, col:53> 'int' '!='
|   | | |-CallExpr 0x1ff427dac30 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x1ff427dac18 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ff427dab38 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1ff427dac80 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427dac68 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1ff427dab58 <col:16> 'const unsigned char *' lvalue ParmVar 0x1ff427da548 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x1ff427dacb0 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427dac98 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1ff427dab90 <col:20> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x1ff427dacc8 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427dabb0 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427da5c0 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x1ff427dace0 <col:53> 'int' 0
|   | `-BinaryOperator 0x1ff427dad70 <line:628:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427dad28 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427dad48 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427dadd0 <line:629:5, col:12>
|     `-IntegerLiteral 0x1ff427dada8 <col:12> 'int' 1
|-FunctionDecl 0x1ff427db198 <line:632:1, line:637:1> line:632:12 invalid custom_ext_1_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427dae58 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427daed8 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427daf60 <line:633:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427dafd8 <line:634:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x1ff427db058 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427db0d8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427db2b8 <line:635:1, line:637:1>
|   `-ReturnStmt 0x1ff427db2a8 <line:636:5, col:12>
|     `-IntegerLiteral 0x1ff427db280 <col:12> 'int' 0
|-FunctionDecl 0x1ff427db698 <line:639:1, line:651:1> line:639:12 invalid custom_ext_2_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427db360 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427db3e0 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427db460 <line:640:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427db4d8 <line:641:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427db558 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427db5d8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427dbcf8 <line:642:1, line:651:1>
|   |-IfStmt 0x1ff427db898 <line:643:5, line:644:28>
|   | |-BinaryOperator 0x1ff427db810 <line:643:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427db7e0 <line:643:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427db780 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427db3e0 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427db7f8 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427db7b8 <col:27> 'int' 1002
|   | `-BinaryOperator 0x1ff427db878 <line:644:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427db830 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427db850 <col:28> 'int' 1
|   |-IfStmt 0x1ff427dba38 <line:646:5, line:647:28>
|   | |-BinaryOperator 0x1ff427db9b0 <line:646:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427db998 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427db8b0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427db4d8 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1ff427db958 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1ff427db940 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ff427db8e8 <col:18> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1ff427db980 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x1ff427db908 <col:25> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x1ff427dba18 <line:647:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427db9d0 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427db9f0 <col:28> 'int' 1
|   |-IfStmt 0x1ff427dbca8 <line:648:5, line:649:28>
|   | |-BinaryOperator 0x1ff427dbc20 <line:648:9, col:53> 'int' '!='
|   | | |-CallExpr 0x1ff427dbb48 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x1ff427dbb30 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ff427dba50 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1ff427dbb98 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427dbb80 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1ff427dba70 <col:16> 'const unsigned char *' lvalue ParmVar 0x1ff427db460 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x1ff427dbbc8 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427dbbb0 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1ff427dbaa8 <col:20> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x1ff427dbbe0 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427dbac8 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427db4d8 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x1ff427dbbf8 <col:53> 'int' 0
|   | `-BinaryOperator 0x1ff427dbc88 <line:649:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427dbc40 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427dbc60 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427dbce8 <line:650:5, col:12>
|     `-IntegerLiteral 0x1ff427dbcc0 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d20c0 <line:653:1, line:660:1> line:653:12 invalid custom_ext_2_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427dbd70 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d1e00 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d1e88 <line:654:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427d1f00 <line:655:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427d1f80 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d2000 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d23d0 <line:656:1, line:660:1>
|   |-BinaryOperator 0x1ff427d22b0 <line:657:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427d21f8 <.//openssl//file_jk/before\test\ssltest_old.c:657:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d21e0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d21a8 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427d1e88 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1ff427d2298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x1ff427d2278 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1ff427d2250 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1ff427d2210 <col:26> 'int' 0
|   |-BinaryOperator 0x1ff427d2378 <.//openssl//file_jk/before\test\ssltest_old.c:658:5, col:15> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427d2320 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d2308 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d22d0 <col:6> 'size_t *' lvalue ParmVar 0x1ff427d1f00 'outlen' 'size_t *'
|   | `-ImplicitCastExpr 0x1ff427d2360 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1ff427d2338 <col:15> 'int' 0
|   `-ReturnStmt 0x1ff427d23c0 <line:659:5, col:12>
|     `-IntegerLiteral 0x1ff427d2398 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d2790 <line:662:1, line:674:1> line:662:12 invalid custom_ext_3_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1ff427d2458 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d24d8 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d2558 <line:663:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ff427d25d0 <line:664:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ff427d2650 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d26d0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d2df0 <line:665:1, line:674:1>
|   |-IfStmt 0x1ff427d2990 <line:666:5, line:667:28>
|   | |-BinaryOperator 0x1ff427d2908 <line:666:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d28d8 <line:666:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d2878 <col:9> 'unsigned int' lvalue ParmVar 0x1ff427d24d8 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1ff427d28f0 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427d28b0 <col:27> 'int' 1003
|   | `-BinaryOperator 0x1ff427d2970 <line:667:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d2928 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d2948 <col:28> 'int' 1
|   |-IfStmt 0x1ff427d2b30 <line:669:5, line:670:28>
|   | |-BinaryOperator 0x1ff427d2aa8 <line:669:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427d2a90 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427d29a8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427d25d0 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x1ff427d2a50 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x1ff427d2a38 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ff427d29e0 <col:18> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x1ff427d2a78 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x1ff427d2a00 <col:25> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x1ff427d2b10 <line:670:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d2ac8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d2ae8 <col:28> 'int' 1
|   |-IfStmt 0x1ff427d2da0 <line:671:5, line:672:28>
|   | |-BinaryOperator 0x1ff427d2d18 <line:671:9, col:53> 'int' '!='
|   | | |-CallExpr 0x1ff427d2c40 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x1ff427d2c28 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ff427d2b48 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1ff42866a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x1ff427d2c90 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427d2c78 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1ff427d2b68 <col:16> 'const unsigned char *' lvalue ParmVar 0x1ff427d2558 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x1ff427d2cc0 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x1ff427d2ca8 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x1ff427d2ba0 <col:20> 'const char [4]' lvalue Var 0x1ff427ce9b8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x1ff427d2cd8 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427d2bc0 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x1ff427d25d0 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x1ff427d2cf0 <col:53> 'int' 0
|   | `-BinaryOperator 0x1ff427d2d80 <line:672:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff427d2d38 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x1ff427d2d58 <col:28> 'int' 1
|   `-ReturnStmt 0x1ff427d2de0 <line:673:5, col:12>
|     `-IntegerLiteral 0x1ff427d2db8 <col:12> 'int' 1
|-FunctionDecl 0x1ff427d31a8 <line:676:1, line:683:1> line:676:12 invalid custom_ext_3_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x1ff427d2e68 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1ff427d2ee8 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x1ff427d2f70 <line:677:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x1ff427d2fe8 <line:678:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x1ff427d3068 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x1ff427d30e8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x1ff427d3500 <line:679:1, line:683:1>
|   |-BinaryOperator 0x1ff427d3370 <line:680:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1ff427d32e0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d32c8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d3290 <col:6> 'const unsigned char **' lvalue ParmVar 0x1ff427d2f70 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x1ff427d3348 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ff427d3330 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ff427d32f8 <col:35> 'const char [5]' lvalue Var 0x1ff427ceae8 'custom_ext_srv_string' 'const char [5]'
|   |-BinaryOperator 0x1ff427d34a8 <line:681:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x1ff427d33e0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427d33c8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427d3390 <col:6> 'size_t *' lvalue ParmVar 0x1ff427d2fe8 'outlen' 'size_t *'
|   | `-CallExpr 0x1ff427d3468 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ff427d3450 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427d33f8 <col:15> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1ff427d3490 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1ff427d3418 <col:22> 'const char [5]' lvalue Var 0x1ff427ceae8 'custom_ext_srv_string' 'const char [5]'
|   `-ReturnStmt 0x1ff427d34f0 <line:682:5, col:12>
|     `-IntegerLiteral 0x1ff427d34c8 <col:12> 'int' 1
|-VarDecl 0x1ff427d3588 <line:685:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:685:14 used cipher 'char *' static cinit
| `-ImplicitCastExpr 0x1ff427d3690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x1ff427d3658 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x1ff427d3630 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x1ff427d35f0 <col:26> 'int' 0
|-VarDecl 0x1ff427d36c0 <.//openssl//file_jk/before\test\ssltest_old.c:686:1, col:22> col:12 used verbose 'int' static cinit
| `-IntegerLiteral 0x1ff427d3728 <col:22> 'int' 0
|-VarDecl 0x1ff427d3780 <line:687:1, col:20> col:12 used debug 'int' static cinit
| `-IntegerLiteral 0x1ff427d37e8 <col:20> 'int' 0
|-VarDecl 0x1ff427d3848 <line:688:1, line:689:5> line:688:19 used rnd_seed 'const char [64]' static cinit
| `-StringLiteral 0x1ff427d38e8 <line:689:5> 'const char [64]' "string to make the random number generator think it has entropy"
|-FunctionDecl 0x1ff427e1e80 <line:691:1, line:692:64> line:691:5 invalid doit_localhost 'int (int *, int *, int, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x1ff427d39b0 <col:20, col:25> col:25 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff427d3a30 <col:32, col:37> col:37 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff427d3ab0 <col:44, col:48> col:48 family 'int'
| |-ParmVarDecl 0x1ff427d3b30 <line:692:20, col:25> col:25 bytes 'long'
| |-ParmVarDecl 0x1ff427d3bd8 <col:32, col:41> col:41 s_time 'clock_t *'
| `-ParmVarDecl 0x1ff427d3c50 <col:49, col:58> col:58 c_time 'clock_t *'
|-FunctionDecl 0x1ff427e22b0 <line:693:1, line:694:33> line:693:5 invalid doit_biopair 'int (int *, int *, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x1ff427e1f68 <col:18, col:23> col:23 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff427e1fe8 <col:30, col:35> col:35 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff427e2068 <col:42, col:47> col:47 bytes 'long'
| |-ParmVarDecl 0x1ff427e20e0 <col:54, col:63> col:63 s_time 'clock_t *'
| `-ParmVarDecl 0x1ff427e2158 <line:694:18, col:27> col:27 c_time 'clock_t *'
|-FunctionDecl 0x1ff427e2580 <line:695:1, col:44> col:5 invalid doit 'int (int *, int *, long)'
| |-ParmVarDecl 0x1ff427e2390 <col:10, col:15> col:15 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff427e2410 <col:22, col:27> col:27 invalid c_ssl 'int *'
| `-ParmVarDecl 0x1ff427e2490 <col:34, col:39> col:39 bytes 'long'
|-FunctionDecl 0x1ff427e26d0 <line:697:1, line:800:1> line:697:13 used sv_usage 'void (void)' static
| `-CompoundStmt 0x1ff427e46a8 <line:698:1, line:800:1>
|   |-CallExpr 0x1ff427e28e8 <line:699:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x1ff427e28d0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e2788 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e2860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e2848 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e2828 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e27e0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e27c8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e27a8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e2800 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e2930 <.//openssl//file_jk/before\test\ssltest_old.c:699:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e2918 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e2880 <col:21> 'char [27]' lvalue "usage: ssltest [args ...]\n"
|   |-CallExpr 0x1ff427e2a90 <line:700:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1ff427e2a78 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e2948 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e2a20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e2a08 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e29e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e29a0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e2988 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e2968 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e29c0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e2ad8 <.//openssl//file_jk/before\test\ssltest_old.c:700:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e2ac0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e2a40 <col:21> 'char [2]' lvalue "\n"
|   |-CallExpr 0x1ff427e2ca0 <line:704:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427e2c88 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e2af0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e2bc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e2bb0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e2b90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e2b48 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e2b30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e2b10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e2b68 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e2ce8 <.//openssl//file_jk/before\test\ssltest_old.c:704:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e2cd0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e2c28 <col:21> 'char [43]' lvalue " -server_auth  - check server certificate\n"
|   |-CallExpr 0x1ff427e2e70 <line:705:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427e2e58 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e2d00 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e2dd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e2dc0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e2da0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e2d58 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e2d40 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e2d20 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e2d78 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e2eb8 <.//openssl//file_jk/before\test\ssltest_old.c:705:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e2ea0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e2df8 <col:21> 'char [43]' lvalue " -client_auth  - do client authentication\n"
|   |-CallExpr 0x1ff427e3030 <line:706:5, col:53> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3018 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e2ed0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e2fa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e2f90 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e2f70 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e2f28 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e2f10 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e2ef0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e2f48 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3078 <.//openssl//file_jk/before\test\ssltest_old.c:706:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3060 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e2fc8 <col:21> 'char [30]' lvalue " -v            - more output\n"
|   |-CallExpr 0x1ff427e3230 <line:707:5, col:54> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3218 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3090 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3168 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3150 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3130 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e30e8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e30d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e30b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3108 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3278 <.//openssl//file_jk/before\test\ssltest_old.c:707:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3260 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e31c8 <col:21> 'char [31]' lvalue " -d            - debug output\n"
|   |-CallExpr 0x1ff427e3438 <line:708:5, col:62> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3420 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3290 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3368 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3350 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3330 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e32e8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e32d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e32b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3308 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3480 <.//openssl//file_jk/before\test\ssltest_old.c:708:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3468 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e33c8 <col:21> 'char [39]' lvalue " -reuse        - use session-id reuse\n"
|   |-CallExpr 0x1ff427e3648 <line:709:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3630 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3498 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3570 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3558 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3538 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e34f0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e34d8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e34b8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3510 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3690 <.//openssl//file_jk/before\test\ssltest_old.c:709:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3678 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e35c8 <col:21> 'char [51]' lvalue " -num <val>    - number of connections to perform\n"
|   |-CallExpr 0x1ff427e3828 <line:710:5, line:711:79> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3810 <line:710:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e36a8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3768 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3748 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e3700 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e36e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e36c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3720 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3870 <.//openssl//file_jk/before\test\ssltest_old.c:711:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3858 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e37a0 <col:13> 'char [64]' lvalue " -bytes <val>  - number of bytes to swap between client/server\n"
|   |-CallExpr 0x1ff427e3a08 <line:713:5, line:714:75> 'int'
|   | |-ImplicitCastExpr 0x1ff427e39f0 <line:713:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3888 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3948 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3928 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e38e0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e38c8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e38a8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3900 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3a50 <.//openssl//file_jk/before\test\ssltest_old.c:714:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3a38 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e3980 <col:13> 'char [60]' lvalue " -dhe512       - use 512 bit key for DHE (to test failure)\n"
|   |-CallExpr 0x1ff427e3c28 <line:715:5, line:716:88> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3c10 <line:715:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3a68 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3b40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3b28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3b08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e3ac0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e3aa8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e3a88 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3ae0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3c70 <.//openssl//file_jk/before\test\ssltest_old.c:716:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3c58 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e3b98 <col:13> 'char [73]' lvalue " -dhe1024      - use 1024 bit key (safe prime) for DHE (default, no-op)\n"
|   |-CallExpr 0x1ff427e3e48 <line:717:5, line:718:82> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3e30 <line:717:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3c88 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3d60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3d48 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3d28 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e3ce0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e3cc8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e3ca8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3d00 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d7e48 <.//openssl//file_jk/before\test\ssltest_old.c:718:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d7e30 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e3db8 <col:13> 'char [67]' lvalue " -dhe1024dsa   - use 1024 bit key (with 160-bit subprime) for DHE\n"
|   |-CallExpr 0x1ff427d7fc0 <line:719:5, col:53> 'int'
|   | |-ImplicitCastExpr 0x1ff427d7fa8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d7e60 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d7f38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d7f20 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d7f00 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d7eb8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d7ea0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d7e80 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d7ed8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8008 <.//openssl//file_jk/before\test\ssltest_old.c:719:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d7ff0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d7f58 <col:21> 'char [30]' lvalue " -no_dhe       - disable DHE\n"
|   |-CallExpr 0x1ff427d8210 <line:722:5, col:132> 'int'
|   | |-ImplicitCastExpr 0x1ff427d81f8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8020 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d80f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d80e0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d80c0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d8078 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d8060 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8040 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d8098 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8258 <.//openssl//file_jk/before\test\ssltest_old.c:722:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8240 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8158 <col:21> 'char [108]' lvalue " -no_ecdhe     - disable ECDHE\nTODO(openssl-team): no_ecdhe was broken by auto ecdh. Make this work again.\n"
|   |-CallExpr 0x1ff427d8420 <line:725:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x1ff427d8408 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8270 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8330 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8310 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d82c8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d82b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8290 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d82e8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8468 <.//openssl//file_jk/before\test\ssltest_old.c:725:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8450 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d83a8 <col:21> 'char [42]' lvalue " -psk arg      - PSK in hex (without 0x)\n"
|   |-CallExpr 0x1ff427d8628 <line:728:5, col:61> 'int'
|   | |-ImplicitCastExpr 0x1ff427d8610 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8480 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8540 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8520 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d84d8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d84c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d84a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d84f8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8670 <.//openssl//file_jk/before\test\ssltest_old.c:728:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8658 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d85b8 <col:21> 'char [38]' lvalue " -srpuser user - SRP username to use\n"
|   |-CallExpr 0x1ff427d87f0 <line:729:5, col:61> 'int'
|   | |-ImplicitCastExpr 0x1ff427d87d8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8688 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8760 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8748 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8728 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d86e0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d86c8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d86a8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d8700 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8838 <.//openssl//file_jk/before\test\ssltest_old.c:729:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8820 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8780 <col:21> 'char [38]' lvalue " -srppass arg  - password for 'user'\n"
|   |-CallExpr 0x1ff427d89f0 <line:732:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x1ff427d89d8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8850 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8910 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d88f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d88a8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d8890 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8870 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d88c8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8a38 <.//openssl//file_jk/before\test\ssltest_old.c:732:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8a20 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8988 <col:21> 'char [28]' lvalue " -ssl3         - use SSLv3\n"
|   |-CallExpr 0x1ff427d8bb0 <line:735:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x1ff427d8b98 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8a50 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8b28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8b10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8af0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d8aa8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d8a90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8a70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d8ac8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8bf8 <.//openssl//file_jk/before\test\ssltest_old.c:735:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8be0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8b48 <col:21> 'char [28]' lvalue " -tls1         - use TLSv1\n"
|   |-CallExpr 0x1ff427d8d70 <line:738:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x1ff427d8d58 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8c10 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8ce8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8cd0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8cb0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d8c68 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d8c50 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8c30 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d8c88 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8db8 <.//openssl//file_jk/before\test\ssltest_old.c:738:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8da0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8d08 <col:21> 'char [27]' lvalue " -dtls         - use DTLS\n"
|   |-CallExpr 0x1ff427d8f70 <line:740:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x1ff427d8f58 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8dd0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d8ea8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d8e90 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d8e70 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d8e28 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d8e10 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8df0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d8e48 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d8fb8 <.//openssl//file_jk/before\test\ssltest_old.c:740:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d8fa0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d8f08 <col:21> 'char [29]' lvalue " -dtls1        - use DTLSv1\n"
|   |-CallExpr 0x1ff427d9130 <line:743:5, col:54> 'int'
|   | |-ImplicitCastExpr 0x1ff427d9118 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d8fd0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d90a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9090 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9070 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d9028 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d9010 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d8ff0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d9048 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9178 <.//openssl//file_jk/before\test\ssltest_old.c:743:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9160 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d90c8 <col:21> 'char [31]' lvalue " -dtls12       - use DTLSv1.2\n"
|   |-CallExpr 0x1ff427d9340 <line:746:5, col:70> 'int'
|   | |-ImplicitCastExpr 0x1ff427d9328 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9190 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9250 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9230 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d91e8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d91d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d91b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d9208 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9388 <.//openssl//file_jk/before\test\ssltest_old.c:746:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9370 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d92c8 <col:21> 'char [47]' lvalue " -CApath arg   - PEM format directory of CA's\n"
|   |-CallExpr 0x1ff427d9510 <line:747:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x1ff427d94f8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d93a0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9478 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9460 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9440 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d93f8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d93e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d93c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d9418 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9558 <.//openssl//file_jk/before\test\ssltest_old.c:747:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9540 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d9498 <col:21> 'char [42]' lvalue " -CAfile arg   - PEM format file of CA's\n"
|   |-CallExpr 0x1ff427d96e0 <line:748:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x1ff427d96c8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9570 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9630 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9610 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d95c8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d95b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d9590 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d95e8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9728 <.//openssl//file_jk/before\test\ssltest_old.c:748:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9710 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d9668 <col:21> 'char [42]' lvalue " -cert arg     - Server certificate file\n"
|   |-CallExpr 0x1ff427d9900 <line:749:5, line:750:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427d98e8 <line:749:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9740 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9818 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9800 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d97e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d9798 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d9780 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d9760 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d97b8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9948 <.//openssl//file_jk/before\test\ssltest_old.c:750:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9930 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d9878 <col:13> 'char [59]' lvalue " -key arg      - Server key file (default: same as -cert)\n"
|   |-CallExpr 0x1ff427d9ad0 <line:751:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x1ff427d9ab8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9960 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9a20 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9a00 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d99b8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d99a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d9980 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d99d8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9b18 <.//openssl//file_jk/before\test\ssltest_old.c:751:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9b00 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d9a58 <col:21> 'char [42]' lvalue " -c_cert arg   - Client certificate file\n"
|   |-CallExpr 0x1ff427d9cf0 <line:752:5, line:753:76> 'int'
|   | |-ImplicitCastExpr 0x1ff427d9cd8 <line:752:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9b30 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d9c08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9bf0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9bd0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d9b88 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d9b70 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d9b50 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d9ba8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d9d38 <.//openssl//file_jk/before\test\ssltest_old.c:753:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d9d20 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d9c68 <col:13> 'char [61]' lvalue " -c_key arg    - Client key file (default: same as -c_cert)\n"
|   |-CallExpr 0x1ff427d3ed8 <line:754:5, col:57> 'int'
|   | |-ImplicitCastExpr 0x1ff427d3ec0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d9d50 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d3e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d9e10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d9df0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d9da8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d9d90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d9d70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d9dc8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d3f20 <.//openssl//file_jk/before\test\ssltest_old.c:754:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d3f08 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d3e68 <col:21> 'char [34]' lvalue " -cipher arg   - The cipher list\n"
|   |-CallExpr 0x1ff427d4098 <line:755:5, col:55> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4080 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d3f38 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d3ff8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d3fd8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d3f90 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d3f78 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d3f58 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d3fb0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d40e0 <.//openssl//file_jk/before\test\ssltest_old.c:755:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d40c8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4030 <col:21> 'char [32]' lvalue " -bio_pair     - Use BIO pairs\n"
|   |-CallExpr 0x1ff427d4270 <line:756:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4258 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d40f8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d41d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d41b8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4198 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4150 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d4138 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d4118 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4170 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d42b8 <.//openssl//file_jk/before\test\ssltest_old.c:756:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d42a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d41f0 <col:21> 'char [51]' lvalue " -ipv4         - Use IPv4 connection on localhost\n"
|   |-CallExpr 0x1ff427d4448 <line:757:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4430 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d42d0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d43a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4390 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4370 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4328 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d4310 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d42f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4348 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4490 <.//openssl//file_jk/before\test\ssltest_old.c:757:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4478 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d43c8 <col:21> 'char [51]' lvalue " -ipv6         - Use IPv6 connection on localhost\n"
|   |-CallExpr 0x1ff427d4620 <line:758:5, col:73> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4608 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d44a8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4568 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4548 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4500 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d44e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d44c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4520 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4668 <.//openssl//file_jk/before\test\ssltest_old.c:758:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4650 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d45a0 <col:21> 'char [50]' lvalue " -f            - Test even cases that can't work\n"
|   |-CallExpr 0x1ff427d4808 <line:759:5, line:760:82> 'int'
|   | |-ImplicitCastExpr 0x1ff427d47f0 <line:759:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4680 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4740 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4720 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d46d8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d46c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d46a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d46f8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4850 <.//openssl//file_jk/before\test\ssltest_old.c:760:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4838 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4778 <col:13> 'char [67]' lvalue " -time         - measure processor time used by client and server\n"
|   |-CallExpr 0x1ff427d49d0 <line:761:5, col:62> 'int'
|   | |-ImplicitCastExpr 0x1ff427d49b8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4868 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4928 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4908 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d48c0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d48a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d4888 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d48e0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4a18 <.//openssl//file_jk/before\test\ssltest_old.c:761:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4a00 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4960 <col:21> 'char [39]' lvalue " -zlib         - use zlib compression\n"
|   |-CallExpr 0x1ff427d4ba0 <line:763:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4b88 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4a30 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4b08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4af0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4ad0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4a88 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d4a70 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d4a50 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4aa8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4be8 <.//openssl//file_jk/before\test\ssltest_old.c:763:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4bd0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4b28 <col:21> 'char [43]' lvalue " -npn_client - have client side offer NPN\n"
|   |-CallExpr 0x1ff427d4d70 <line:764:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4d58 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4c00 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4cd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4cc0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4ca0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4c58 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d4c40 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d4c20 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4c78 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4db8 <.//openssl//file_jk/before\test\ssltest_old.c:764:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4da0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4cf8 <col:21> 'char [43]' lvalue " -npn_server - have server side offer NPN\n"
|   |-CallExpr 0x1ff427d4f80 <line:765:5, col:69> 'int'
|   | |-ImplicitCastExpr 0x1ff427d4f68 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4dd0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d4ea8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d4e90 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d4e70 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d4e28 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d4e10 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d4df0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d4e48 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d4fc8 <.//openssl//file_jk/before\test\ssltest_old.c:765:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d4fb0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d4f08 <col:21> 'char [46]' lvalue " -npn_server_reject - have server reject NPN\n"
|   |-CallExpr 0x1ff427d5198 <line:767:5, col:75> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5180 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d4fe0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d50b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d50a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d5080 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5038 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5020 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5000 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5058 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d51e0 <.//openssl//file_jk/before\test\ssltest_old.c:767:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d51c8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5118 <col:21> 'char [52]' lvalue " -serverinfo_file file - have server use this file\n"
|   |-CallExpr 0x1ff427d53a8 <line:768:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5390 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d51f8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d52d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d52b8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d5298 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5250 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5238 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5218 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5270 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d53f0 <.//openssl//file_jk/before\test\ssltest_old.c:768:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d53d8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5328 <col:21> 'char [54]' lvalue " -serverinfo_sct  - have client offer and expect SCT\n"
|   |-CallExpr 0x1ff427d55b8 <line:769:5, line:770:70> 'int'
|   | |-ImplicitCastExpr 0x1ff427d55a0 <line:769:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d5408 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d54e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d54c8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d54a8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5460 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5448 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5428 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5480 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d5600 <.//openssl//file_jk/before\test\ssltest_old.c:770:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d55e8 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5538 <col:13> 'char [55]' lvalue " -serverinfo_tack - have client offer and expect TACK\n"
|   |-CallExpr 0x1ff427d5790 <line:771:5, line:772:70> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5778 <line:771:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d5618 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d56f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d56d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d56b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5670 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5658 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5638 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5690 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d57d8 <.//openssl//file_jk/before\test\ssltest_old.c:772:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d57c0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5710 <col:13> 'char [55]' lvalue " -custom_ext - try various custom extension callbacks\n"
|   |-CallExpr 0x1ff427d5968 <line:773:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5950 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d57f0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d58c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d58b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d5890 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5848 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5830 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5810 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5868 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d59b0 <.//openssl//file_jk/before\test\ssltest_old.c:773:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d5998 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d58e8 <col:21> 'char [54]' lvalue " -alpn_client <string> - have client side offer ALPN\n"
|   |-CallExpr 0x1ff427d5b40 <line:774:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5b28 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d59c8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d5aa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d5a88 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d5a68 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5a20 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5a08 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d59e8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5a40 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d5b88 <.//openssl//file_jk/before\test\ssltest_old.c:774:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d5b70 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5ac0 <col:21> 'char [54]' lvalue " -alpn_server <string> - have server side offer ALPN\n"
|   |-CallExpr 0x1ff427d5d18 <line:775:5, col:73> 'int'
|   | |-ImplicitCastExpr 0x1ff427d5d00 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d5ba0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427d5c78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427d5c60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427d5c40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5bf8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5be0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5bc0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427d5c18 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427d5d60 <.//openssl//file_jk/before\test\ssltest_old.c:775:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427d5d48 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427d5c98 <col:21> 'char [50]' lvalue " -alpn_server1 <string> - alias for -alpn_server\n"
|   |-CallExpr 0x1ff427e7ff0 <line:776:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x1ff427e7fd8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427d5d78 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e7f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e7ef8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e7ed8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427d5dd0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427d5db8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427d5d98 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e7eb0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8038 <.//openssl//file_jk/before\test\ssltest_old.c:776:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8020 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e7f68 <col:21> 'char [65]' lvalue " -alpn_server2 <string> - have server side context 2 offer ALPN\n"
|   |-CallExpr 0x1ff427e8218 <line:777:5, line:778:87> 'int'
|   | |-ImplicitCastExpr 0x1ff427e8200 <line:777:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8050 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8110 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e80f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e80a8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8090 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8070 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e80c8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8260 <.//openssl//file_jk/before\test\ssltest_old.c:778:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8248 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8188 <col:13> 'char [72]' lvalue " -alpn_expected <string> - the ALPN protocol that should be negotiated\n"
|   |-CallExpr 0x1ff427e8400 <line:779:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x1ff427e83e8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8278 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8338 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e8318 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e82d0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e82b8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8298 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e82f0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8448 <.//openssl//file_jk/before\test\ssltest_old.c:779:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8430 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8370 <col:21> 'char [73]' lvalue " -server_min_proto <string> - Minimum version the server should support\n"
|   |-CallExpr 0x1ff427e85e8 <line:780:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x1ff427e85d0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8460 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8520 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e8500 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e84b8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e84a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8480 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e84d8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8630 <.//openssl//file_jk/before\test\ssltest_old.c:780:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8618 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8558 <col:21> 'char [73]' lvalue " -server_max_proto <string> - Maximum version the server should support\n"
|   |-CallExpr 0x1ff427e87d0 <line:781:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x1ff427e87b8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8648 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8708 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e86e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e86a0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8688 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8668 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e86c0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8818 <.//openssl//file_jk/before\test\ssltest_old.c:781:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8800 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8740 <col:21> 'char [73]' lvalue " -client_min_proto <string> - Minimum version the client should support\n"
|   |-CallExpr 0x1ff427e89b8 <line:782:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x1ff427e89a0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8830 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e88f0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e88d0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e8888 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8870 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8850 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e88a8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8a00 <.//openssl//file_jk/before\test\ssltest_old.c:782:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e89e8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8928 <col:21> 'char [73]' lvalue " -client_max_proto <string> - Maximum version the client should support\n"
|   |-CallExpr 0x1ff427e8bf0 <line:783:5, col:120> 'int'
|   | |-ImplicitCastExpr 0x1ff427e8bd8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8a18 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8af0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8ad8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e8ab8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e8a70 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8a58 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8a38 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e8a90 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8c38 <.//openssl//file_jk/before\test\ssltest_old.c:783:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8c20 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8b48 <col:21> 'char [97]' lvalue " -should_negotiate <string> - The version that should be negotiated, fail-client or fail-server\n"
|   |-CallExpr 0x1ff427e8dc0 <line:785:5, col:69> 'int'
|   | |-ImplicitCastExpr 0x1ff427e8da8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8c50 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8d28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8d10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e8cf0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e8ca8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8c90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8c70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e8cc8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8e08 <.//openssl//file_jk/before\test\ssltest_old.c:785:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8df0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8d48 <col:21> 'char [46]' lvalue " -noct         - no certificate transparency\n"
|   |-CallExpr 0x1ff427e8f98 <line:786:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427e8f80 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8e20 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e8ef8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e8ee0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e8ec0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e8e78 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e8e60 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e8e40 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e8e98 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e8fe0 <.//openssl//file_jk/before\test\ssltest_old.c:786:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e8fc8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e8f18 <col:21> 'char [51]' lvalue " -requestct    - request certificate transparency\n"
|   |-CallExpr 0x1ff427e9170 <line:787:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9158 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e8ff8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e90d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e90b8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9098 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9050 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9038 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e9018 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9070 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e91b8 <.//openssl//file_jk/before\test\ssltest_old.c:787:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e91a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e90f0 <col:21> 'char [51]' lvalue " -requirect    - require certificate transparency\n"
|   |-CallExpr 0x1ff427e9350 <line:789:5, col:84> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9338 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e91d0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e92a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9290 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9270 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9228 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9210 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e91f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9248 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e9398 <.//openssl//file_jk/before\test\ssltest_old.c:789:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e9380 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e92c8 <col:21> 'char [61]' lvalue " -sn_client <string>  - have client request this servername\n"
|   |-CallExpr 0x1ff427e9580 <line:790:5, col:97> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9568 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e93b0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e9488 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9470 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9450 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9408 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e93f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e93d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9428 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e95c8 <.//openssl//file_jk/before\test\ssltest_old.c:790:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e95b0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e94e8 <col:21> 'char [74]' lvalue " -sn_server1 <string> - have server context 1 respond to this servername\n"
|   |-CallExpr 0x1ff427e9770 <line:791:5, col:97> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9758 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e95e0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e96b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e96a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9680 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9638 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9620 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e9600 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9658 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e97b8 <.//openssl//file_jk/before\test\ssltest_old.c:791:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e97a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e96d8 <col:21> 'char [74]' lvalue " -sn_server2 <string> - have server context 2 respond to this servername\n"
|   |-CallExpr 0x1ff427e9940 <line:792:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9928 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e97d0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e98a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9890 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9870 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9828 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9810 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e97f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9848 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e9988 <.//openssl//file_jk/before\test\ssltest_old.c:792:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e9970 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e98c8 <col:21> 'char [43]' lvalue " -sn_expect1          - expected server 1\n"
|   |-CallExpr 0x1ff427e9b10 <line:793:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9af8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e99a0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e9a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9a60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9a40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e99f8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e99e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e99c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9a18 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e9b58 <.//openssl//file_jk/before\test\ssltest_old.c:793:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e9b40 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e9a98 <col:21> 'char [43]' lvalue " -sn_expect2          - expected server 2\n"
|   |-CallExpr 0x1ff427e9cf0 <line:794:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x1ff427e9cd8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e9b70 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e9c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9c30 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9c10 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9bc8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9bb0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e9b90 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9be8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e9d38 <.//openssl//file_jk/before\test\ssltest_old.c:794:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e9d20 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e9c68 <col:21> 'char [65]' lvalue " -server_sess_out <file>    - Save the server session to a file\n"
|   |-CallExpr 0x1ff427e3ec0 <line:795:5, col:90> 'int'
|   | |-ImplicitCastExpr 0x1ff427e3ea8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e9d50 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e9e28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e9e10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e9df0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e9da8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e9d90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e9d70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e9dc8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e3f08 <.//openssl//file_jk/before\test\ssltest_old.c:795:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e3ef0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e9e48 <col:21> 'char [67]' lvalue " -server_sess_in <file>     - Read the server session from a file\n"
|   |-CallExpr 0x1ff427e40a0 <line:796:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x1ff427e4088 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e3f20 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e3ff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e3fe0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e3fc0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e3f78 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e3f60 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e3f40 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e3f98 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e40e8 <.//openssl//file_jk/before\test\ssltest_old.c:796:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e40d0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e4018 <col:21> 'char [65]' lvalue " -client_sess_out <file>    - Save the client session to a file\n"
|   |-CallExpr 0x1ff427e4288 <line:797:5, col:90> 'int'
|   | |-ImplicitCastExpr 0x1ff427e4270 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e4100 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e41d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e41c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e41a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e4158 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e4140 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e4120 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e4178 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e42d0 <.//openssl//file_jk/before\test\ssltest_old.c:797:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e42b8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e41f8 <col:21> 'char [67]' lvalue " -client_sess_in <file>     - Read the client session from a file\n"
|   |-CallExpr 0x1ff427e4470 <line:798:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x1ff427e4458 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427e42e8 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x1ff427e43c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x1ff427e43a8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x1ff427e4388 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x1ff427e4340 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x1ff427e4328 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x1ff427e4308 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x1ff427e4360 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x1ff427e44b8 <.//openssl//file_jk/before\test\ssltest_old.c:798:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1ff427e44a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff427e43e0 <col:21> 'char [73]' lvalue " -should_reuse <number>     - The expected state of reusing the session\n"
|   `-CallExpr 0x1ff427e4648 <line:799:5, col:73> 'int'
|     |-ImplicitCastExpr 0x1ff427e4630 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1ff427e44d0 <col:5> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|     |-ParenExpr 0x1ff427e45a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|     | `-UnaryOperator 0x1ff427e4590 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x1ff427e4570 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|     |     |-CallExpr 0x1ff427e4528 <col:18, col:29> 'FILE *'
|     |     | `-ImplicitCastExpr 0x1ff427e4510 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|     |     |   `-DeclRefExpr 0x1ff427e44f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|     |     `-IntegerLiteral 0x1ff427e4548 <col:31> 'int' 2
|     `-ImplicitCastExpr 0x1ff427e4690 <.//openssl//file_jk/before\test\ssltest_old.c:799:21> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x1ff427e4678 <col:21> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x1ff427e45c8 <col:21> 'char [50]' lvalue " -no_ticket    - do not issue TLS session ticket\n"
|-FunctionDecl 0x1ff427e4a38 <line:802:1, line:836:1> line:802:13 invalid print_key_details 'void (int *, int *)' static
| |-ParmVarDecl 0x1ff427e48e0 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x1ff427e4960 <col:41, col:51> col:51 invalid key 'int *'
| `-CompoundStmt 0x1ff427e5dd0 <line:803:1, line:836:1>
|   |-DeclStmt 0x1ff427e4c90 <line:804:5, col:33>
|   | `-VarDecl 0x1ff427e4b18 <col:5, col:9> col:9 used keyid 'int'
|   `-IfStmt 0x1ff427e5da8 <line:806:5, line:835:5> has_else
|     |-OpaqueValueExpr 0x1ff427e5d90 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1ff427e5880 <line:806:31, line:816:5>
|     | |-DeclStmt 0x1ff427e4e70 <line:808:9, col:16>
|     | | `-VarDecl 0x1ff427e4e08 <col:9, col:13> col:13 used nid 'int'
|     | |-DeclStmt 0x1ff427e4f08 <line:809:9, col:26>
|     | | `-VarDecl 0x1ff427e4ea0 <col:9, col:21> col:21 used cname 'const char *'
|     | |-BinaryOperator 0x1ff427e5460 <line:812:9, col:38> 'const char *' '='
|     | | |-DeclRefExpr 0x1ff427e5288 <col:9> 'const char *' lvalue Var 0x1ff427e4ea0 'cname' 'const char *'
|     | | `-ImplicitCastExpr 0x1ff427e5448 <col:17, col:38> 'const char *' <IntegralToPointer>
|     | |   `-CallExpr 0x1ff427e5408 <col:17, col:38> 'int'
|     | |     |-ImplicitCastExpr 0x1ff427e53f0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x1ff427e53b0 <col:17> 'int ()' Function 0x1ff427e52e8 'EC_curve_nid2nist' 'int ()'
|     | |     `-ImplicitCastExpr 0x1ff427e5430 <col:35> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1ff427e53d0 <col:35> 'int' lvalue Var 0x1ff427e4e08 'nid' 'int'
|     | `-IfStmt 0x1ff427e56b0 <line:813:9, line:814:35>
|     |   |-UnaryOperator 0x1ff427e54b8 <line:813:13, col:14> 'int' prefix '!' cannot overflow
|     |   | `-ImplicitCastExpr 0x1ff427e54a0 <col:14> 'const char *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x1ff427e5480 <col:14> 'const char *' lvalue Var 0x1ff427e4ea0 'cname' 'const char *'
|     |   `-BinaryOperator 0x1ff427e5690 <line:814:13, col:35> 'const char *' '='
|     |     |-DeclRefExpr 0x1ff427e54d0 <col:13> 'const char *' lvalue Var 0x1ff427e4ea0 'cname' 'const char *'
|     |     `-ImplicitCastExpr 0x1ff427e5678 <col:21, col:35> 'const char *' <IntegralToPointer>
|     |       `-CallExpr 0x1ff427e5638 <col:21, col:35> 'int'
|     |         |-ImplicitCastExpr 0x1ff427e5620 <col:21> 'int (*)()' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x1ff427e55e0 <col:21> 'int ()' Function 0x1ff427e5518 'OBJ_nid2sn' 'int ()'
|     |         `-ImplicitCastExpr 0x1ff427e5660 <col:32> 'int' <LValueToRValue>
|     |           `-DeclRefExpr 0x1ff427e5600 <col:32> 'int' lvalue Var 0x1ff427e4e08 'nid' 'int'
|     `-CompoundStmt 0x1ff427e5d70 <line:818:5, line:835:5>
|       |-DeclStmt 0x1ff427e5930 <line:819:9, col:28>
|       | `-VarDecl 0x1ff427e58c8 <col:9, col:21> col:21 used algname 'const char *'
|       `-SwitchStmt 0x1ff427e5980 <line:820:9, line:833:9>
|         |-ImplicitCastExpr 0x1ff427e5968 <line:820:17> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x1ff427e5948 <col:17> 'int' lvalue Var 0x1ff427e4b18 'keyid' 'int'
|         `-CompoundStmt 0x1ff427e5c98 <col:24, line:833:9>
|           |-BinaryOperator 0x1ff427e5a28 <line:822:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x1ff427e59a0 <col:13> 'const char *' lvalue Var 0x1ff427e58c8 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x1ff427e5a10 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x1ff427e59f8 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x1ff427e59d8 <col:23> 'char [4]' lvalue "RSA"
|           |-BreakStmt 0x1ff427e5a48 <line:823:13>
|           |-BinaryOperator 0x1ff427e5ac0 <line:825:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x1ff427e5a50 <col:13> 'const char *' lvalue Var 0x1ff427e58c8 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x1ff427e5aa8 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x1ff427e5a90 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x1ff427e5a70 <col:23> 'char [4]' lvalue "DSA"
|           |-BreakStmt 0x1ff427e5ae0 <line:826:13>
|           |-BinaryOperator 0x1ff427e5b58 <line:828:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x1ff427e5ae8 <col:13> 'const char *' lvalue Var 0x1ff427e58c8 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x1ff427e5b40 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x1ff427e5b28 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x1ff427e5b08 <col:23> 'char [3]' lvalue "DH"
|           |-BreakStmt 0x1ff427e5b78 <line:829:13>
|           |-DefaultStmt 0x1ff427e5c70 <line:830:9, line:831:39>
|           | `-BinaryOperator 0x1ff427e5c50 <col:13, col:39> 'const char *' '='
|           |   |-DeclRefExpr 0x1ff427e5b80 <col:13> 'const char *' lvalue Var 0x1ff427e58c8 'algname' 'const char *'
|           |   `-ImplicitCastExpr 0x1ff427e5c38 <col:23, col:39> 'const char *' <IntegralToPointer>
|           |     `-CallExpr 0x1ff427e5bf8 <col:23, col:39> 'int'
|           |       |-ImplicitCastExpr 0x1ff427e5be0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|           |       | `-DeclRefExpr 0x1ff427e5ba0 <col:23> 'int ()' Function 0x1ff427e5518 'OBJ_nid2sn' 'int ()'
|           |       `-ImplicitCastExpr 0x1ff427e5c20 <col:34> 'int' <LValueToRValue>
|           |         `-DeclRefExpr 0x1ff427e5bc0 <col:34> 'int' lvalue Var 0x1ff427e4b18 'keyid' 'int'
|           `-BreakStmt 0x1ff427e5c90 <line:832:13>
|-FunctionDecl 0x1ff427e9f98 <line:838:1, line:868:1> line:838:13 invalid print_details 'void (int *, const char *)' static
| |-ParmVarDecl 0x1ff427e5e08 <col:27, col:32> col:32 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff427e9ec0 <col:39, col:51> col:51 used prefix 'const char *'
| `-CompoundStmt 0x1ff427eb1e8 <line:839:1, line:868:1>
|   |-DeclStmt 0x1ff427ea0e0 <line:840:5, col:27>
|   | `-VarDecl 0x1ff427ea078 <col:5, col:23> col:23 invalid ciph 'const int *'
|   |-DeclStmt 0x1ff427ea178 <line:841:5, col:14>
|   | `-VarDecl 0x1ff427ea110 <col:5, col:9> col:9 used mdnid 'int'
|   |-IfStmt 0x1ff427eac70 <line:851:5, line:859:5>
|   | |-OpaqueValueExpr 0x1ff427eac58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427eac40 <line:851:23, line:859:5>
|   |   `-IfStmt 0x1ff427eab18 <line:854:9, line:857:9>
|   |     |-OpaqueValueExpr 0x1ff427eab00 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff427eaaf0 <line:854:29, line:857:9>
|   `-IfStmt 0x1ff427eaf18 <line:860:5, line:864:5>
|     |-OpaqueValueExpr 0x1ff427eaf00 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff427eaef0 <line:860:47, line:864:5>
|-FunctionDecl 0x1ff427eb2e0 <line:875:1, line:895:1> line:875:12 used protocol_from_string 'int (const char *)' static
| |-ParmVarDecl 0x1ff427eb230 <col:33, col:45> col:45 used value 'const char *'
| `-CompoundStmt 0x1ff427e6028 <line:876:1, line:895:1>
|   |-DeclStmt 0x1ff427eb540 <line:877:5, line:880:6>
|   | `-RecordDecl 0x1ff427eb3a0 <line:877:5, line:880:5> line:877:12 struct protocol_versions definition
|   |   |-FieldDecl 0x1ff427eb478 <line:878:9, col:21> col:21 referenced name 'const char *'
|   |   `-FieldDecl 0x1ff427eb4e8 <line:879:9, col:13> col:13 referenced version 'int'
|   |-DeclStmt 0x1ff427eb7f8 <line:881:5, line:887:38>
|   | `-VarDecl 0x1ff427eb618 <line:881:5, col:52> col:43 used versions 'const struct protocol_versions []' static
|   |-DeclStmt 0x1ff427eb888 <line:888:5, col:13>
|   | `-VarDecl 0x1ff427eb820 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x1ff427ebb28 <line:889:5, col:36>
|   | `-VarDecl 0x1ff427eb8b0 <col:5, col:35> col:12 used n 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1ff427ebb10 <col:16, col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-CallExpr 0x1ff427eba78 <col:16, col:35> 'int'
|   |       |-ImplicitCastExpr 0x1ff427eba60 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1ff427eba08 <col:16> 'int ()' Function 0x1ff427eb940 'OSSL_NELEM' 'int ()'
|   |       `-ImplicitCastExpr 0x1ff427ebaf8 <col:27> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x1ff427eba28 <col:27> 'const struct protocol_versions []' lvalue Var 0x1ff427eb618 'versions' 'const struct protocol_versions []'
|   |-ForStmt 0x1ff427e5fa0 <line:891:5, line:893:32>
|   | |-BinaryOperator 0x1ff427ebbb8 <line:891:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1ff427ebb40 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb820 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427ebba0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427ebb78 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ff427ebc60 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1ff427ebc30 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427ebbd8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb820 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1ff427ebc48 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427ebbf8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb8b0 'n' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1ff427ebca0 <col:24, col:25> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1ff427ebc80 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb820 'i' 'size_t':'unsigned long long'
|   | `-IfStmt 0x1ff427e5f88 <line:892:9, line:893:32>
|   |   |-BinaryOperator 0x1ff427ebe88 <line:892:13, col:48> 'int' '=='
|   |   | |-CallExpr 0x1ff427ebe00 <col:13, col:43> 'int'
|   |   | | |-ImplicitCastExpr 0x1ff427ebde8 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1ff427ebcb8 <col:13> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x1ff427ebe30 <col:20, col:32> 'const char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1ff427ebd68 <col:20, col:32> 'const char *const' lvalue .name 0x1ff427eb478
|   |   | | |   `-ArraySubscriptExpr 0x1ff427ebd48 <col:20, col:30> 'const struct protocol_versions':'const struct protocol_versions' lvalue
|   |   | | |     |-ImplicitCastExpr 0x1ff427ebd18 <col:20> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x1ff427ebcd8 <col:20> 'const struct protocol_versions []' lvalue Var 0x1ff427eb618 'versions' 'const struct protocol_versions []'
|   |   | | |     `-ImplicitCastExpr 0x1ff427ebd30 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1ff427ebcf8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb820 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1ff427ebe48 <col:38> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff427ebd98 <col:38> 'const char *' lvalue ParmVar 0x1ff427eb230 'value' 'const char *'
|   |   | `-IntegerLiteral 0x1ff427ebe60 <col:48> 'int' 0
|   |   `-ReturnStmt 0x1ff427e5f78 <line:893:13, col:32>
|   |     `-ImplicitCastExpr 0x1ff427e5f60 <col:20, col:32> 'int' <LValueToRValue>
|   |       `-MemberExpr 0x1ff427e5f30 <col:20, col:32> 'const int' lvalue .version 0x1ff427eb4e8
|   |         `-ArraySubscriptExpr 0x1ff427e5f10 <col:20, col:30> 'const struct protocol_versions':'const struct protocol_versions' lvalue
|   |           |-ImplicitCastExpr 0x1ff427e5ee0 <col:20> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |           | `-DeclRefExpr 0x1ff427e5ea0 <col:20> 'const struct protocol_versions []' lvalue Var 0x1ff427eb618 'versions' 'const struct protocol_versions []'
|   |           `-ImplicitCastExpr 0x1ff427e5ef8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x1ff427e5ec0 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1ff427eb820 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x1ff427e6018 <line:894:5, col:13>
|     `-UnaryOperator 0x1ff427e6000 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1ff427e5fd8 <col:13> 'int' 1
|-FunctionDecl 0x1ff427e6160 <line:897:1, line:914:1> line:897:21 invalid read_session 'int *(const char *)' static
| |-ParmVarDecl 0x1ff427e6080 <col:34, col:46> col:46 used filename 'const char *'
| `-CompoundStmt 0x1ff427e6ba8 <line:898:1, line:914:1>
|   |-IfStmt 0x1ff427e66d8 <line:902:5, line:906:5>
|   | |-OpaqueValueExpr 0x1ff427e66c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427e66a8 <line:902:20, line:906:5>
|   |   `-ReturnStmt 0x1ff427e6698 <line:905:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1ff427e6680 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x1ff427e6660 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff427e6638 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff427e65f8 <col:26> 'int' 0
|   `-IfStmt 0x1ff427e6a80 <.//openssl//file_jk/before\test\ssltest_old.c:908:5, line:911:5>
|     |-OpaqueValueExpr 0x1ff427e6a68 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff427e6a58 <line:908:23, line:911:5>
|-FunctionDecl 0x1ff427e6d40 <line:916:1, line:932:1> line:916:12 invalid write_session 'int (const char *, int *)' static
| |-ParmVarDecl 0x1ff427e6be0 <col:26, col:38> col:38 used filename 'const char *'
| |-ParmVarDecl 0x1ff427e6c60 <col:48, col:61> col:61 invalid sess 'int *'
| `-CompoundStmt 0x1ff427e7358 <line:917:1, line:932:1>
|   |-IfStmt 0x1ff427e7038 <line:920:5, line:923:5>
|   | |-OpaqueValueExpr 0x1ff427e7020 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427e7008 <line:920:23, line:923:5>
|   |   `-ReturnStmt 0x1ff427e6ff8 <line:922:9, col:16>
|   |     `-IntegerLiteral 0x1ff427e6fd0 <col:16> 'int' 0
|   |-IfStmt 0x1ff427e71d8 <line:924:5, line:928:5>
|   | |-OpaqueValueExpr 0x1ff427e71c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427e71a8 <line:924:20, line:928:5>
|   |   `-ReturnStmt 0x1ff427e7198 <line:927:9, col:16>
|   |     `-IntegerLiteral 0x1ff427e7170 <col:16> 'int' 0
|   `-ReturnStmt 0x1ff427e7348 <line:931:5, col:12>
|     `-IntegerLiteral 0x1ff427e7320 <col:12> 'int' 1
|-FunctionDecl 0x1ff427e7580 <line:939:1, line:950:1> line:939:12 invalid set_protocol_version 'int (const char *, int *, int)' static
| |-ParmVarDecl 0x1ff427e7398 <col:33, col:45> col:45 used version 'const char *'
| |-ParmVarDecl 0x1ff427e7418 <col:54, col:59> col:59 invalid ssl 'int *'
| |-ParmVarDecl 0x1ff427e7498 <col:64, col:68> col:68 used setting 'int'
| `-CompoundStmt 0x1ff427e7c88 <line:940:1, line:950:1>
|   |-IfStmt 0x1ff427e7c38 <line:941:5, line:948:5>
|   | |-BinaryOperator 0x1ff427e7740 <line:941:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427e7710 <.//openssl//file_jk/before\test\ssltest_old.c:941:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427e7650 <col:9> 'const char *' lvalue ParmVar 0x1ff427e7398 'version' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff427e7728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff427e76f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427e76c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427e7688 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff427e7c18 <.//openssl//file_jk/before\test\ssltest_old.c:941:26, line:948:5>
|   |   |-DeclStmt 0x1ff427e78a0 <line:942:9, col:48>
|   |   | `-VarDecl 0x1ff427e7778 <col:9, col:47> col:13 used ver 'int' cinit
|   |   |   `-CallExpr 0x1ff427e7860 <col:19, col:47> 'int'
|   |   |     |-ImplicitCastExpr 0x1ff427e7848 <col:19> 'int (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1ff427e77e0 <col:19> 'int (const char *)' Function 0x1ff427eb2e0 'protocol_from_string' 'int (const char *)'
|   |   |     `-ImplicitCastExpr 0x1ff427e7888 <col:40> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ff427e7800 <col:40> 'const char *' lvalue ParmVar 0x1ff427e7398 'version' 'const char *'
|   |   `-IfStmt 0x1ff427e7a10 <line:943:9, line:946:9>
|   |     |-BinaryOperator 0x1ff427e7930 <line:943:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1ff427e7918 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ff427e78b8 <col:13> 'int' lvalue Var 0x1ff427e7778 'ver' 'int'
|   |     | `-IntegerLiteral 0x1ff427e78f0 <col:19> 'int' 0
|   |     `-CompoundStmt 0x1ff427e79f8 <col:22, line:946:9>
|   |       `-ReturnStmt 0x1ff427e79e8 <line:945:13, col:20>
|   |         `-IntegerLiteral 0x1ff427e79c0 <col:20> 'int' 0
|   `-ReturnStmt 0x1ff427e7c78 <line:949:5, col:12>
|     `-IntegerLiteral 0x1ff427e7c50 <col:12> 'int' 1
|-FunctionDecl 0x1ff427ebf40 <line:952:1, line:1958:1> line:952:5 main 'int (int, char **)'
| |-ParmVarDecl 0x1ff427e7cc0 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x1ff427e7db0 <col:20, col:31> col:26 used argv 'char **':'char **'
| `-CompoundStmt 0x1ff42811b18 <line:953:1, line:1958:1>
|   |-DeclStmt 0x1ff427ec260 <line:954:5, col:46>
|   | |-VarDecl 0x1ff427ec020 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:954:17 used CApath 'const char *' cinit
|   | | `-ImplicitCastExpr 0x1ff427ec110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   `-ParenExpr 0x1ff427ec0f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427ec0c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427ec088 <col:26> 'int' 0
|   | `-VarDecl 0x1ff427ec140 <.//openssl//file_jk/before\test\ssltest_old.c:954:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:954:33 used CAfile 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1ff427ec230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1ff427ec210 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ff427ec1e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ff427ec1a8 <col:26> 'int' 0
|   |-DeclStmt 0x1ff427ec320 <.//openssl//file_jk/before\test\ssltest_old.c:955:5, col:18>
|   | `-VarDecl 0x1ff427ec290 <col:5, col:17> col:9 used badop 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ec2f8 <col:17> 'int' 0
|   |-DeclStmt 0x1ff427ec680 <line:956:5, col:70>
|   | |-EnumDecl 0x1ff427ec338 <col:5, col:50> col:5
|   | | |-EnumConstantDecl 0x1ff427ec410 <col:12> col:12 referenced BIO_MEM 'int'
|   | | |-EnumConstantDecl 0x1ff427ec468 <col:21> col:21 referenced BIO_PAIR 'int'
|   | | |-EnumConstantDecl 0x1ff427ec4c0 <col:31> col:31 referenced BIO_IPV4 'int'
|   | | `-EnumConstantDecl 0x1ff427ec518 <col:41> col:41 referenced BIO_IPV6 'int'
|   | `-VarDecl 0x1ff427ec5c8 <col:5, col:63> col:52 used bio_type 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' cinit
|   |   `-ImplicitCastExpr 0x1ff427ec650 <col:63> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <IntegralCast>
|   |     `-DeclRefExpr 0x1ff427ec630 <col:63> 'int' EnumConstant 0x1ff427ec410 'BIO_MEM' 'int'
|   |-DeclStmt 0x1ff427ec740 <line:957:5, col:18>
|   | `-VarDecl 0x1ff427ec6b0 <col:5, col:17> col:9 used force 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ec718 <col:17> 'int' 0
|   |-DeclStmt 0x1ff427ecb80 <line:958:5, col:69>
|   | |-VarDecl 0x1ff427ec770 <col:5, col:17> col:9 used dtls1 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ec7d8 <col:17> 'int' 0
|   | |-VarDecl 0x1ff427ec818 <col:5, col:29> col:20 used dtls12 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ec880 <col:29> 'int' 0
|   | |-VarDecl 0x1ff427ec8c0 <col:5, col:39> col:32 used dtls 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ec928 <col:39> 'int' 0
|   | |-VarDecl 0x1ff427ec968 <col:5, col:49> col:42 used tls1 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ec9d0 <col:49> 'int' 0
|   | |-VarDecl 0x1ff427eca10 <col:5, col:59> col:52 used ssl3 'int' cinit
|   | | `-IntegerLiteral 0x1ff427eca78 <col:59> 'int' 0
|   | `-VarDecl 0x1ff427ecab8 <col:5, col:68> col:62 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ecb20 <col:68> 'int' 1
|   |-DeclStmt 0x1ff427ecc40 <line:959:5, col:24>
|   | `-VarDecl 0x1ff427ecbb0 <col:5, col:23> col:9 used client_auth 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ecc18 <col:23> 'int' 0
|   |-DeclStmt 0x1ff427ecd98 <line:960:5, col:27>
|   | |-VarDecl 0x1ff427ecc70 <col:5, col:23> col:9 used server_auth 'int' cinit
|   | | `-IntegerLiteral 0x1ff427eccd8 <col:23> 'int' 0
|   | `-VarDecl 0x1ff427ecd18 <col:5, col:26> col:26 used i 'int'
|   |-DeclStmt 0x1ff427ecf88 <line:961:5, line:962:35>
|   | `-VarDecl 0x1ff427ece00 <line:961:5, line:962:34> line:961:27 used app_verify_arg 'struct app_verify_arg':'struct app_verify_arg' cinit
|   |   `-InitListExpr 0x1ff427ecf20 <line:962:9, col:34> 'struct app_verify_arg':'struct app_verify_arg'
|   |     |-ImplicitCastExpr 0x1ff427ecf70 <line:120:29> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x1ff427ece68 <col:29> 'char [23]' lvalue "Test Callback Argument"
|   |     `-IntegerLiteral 0x1ff427ece98 <line:962:32> 'int' 0
|   |-DeclStmt 0x1ff427ed020 <line:963:5, col:12>
|   | `-VarDecl 0x1ff427ecfb8 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1ff427ed1c8 <line:965:5, col:34>
|   | `-VarDecl 0x1ff427ed0d8 <col:5, col:23> col:23 invalid meth 'const int *'
|   |-DeclStmt 0x1ff427ed348 <line:967:5, col:30>
|   | |-VarDecl 0x1ff427ed1f8 <col:5, col:18> col:9 used number 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ed260 <col:18> 'int' 1
|   | `-VarDecl 0x1ff427ed2a0 <col:5, col:29> col:21 used reuse 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ed308 <col:29> 'int' 0
|   |-DeclStmt 0x1ff427ed420 <line:968:5, col:26>
|   | `-VarDecl 0x1ff427ed378 <col:5, col:25> col:9 used should_reuse 'int' cinit
|   |   `-UnaryOperator 0x1ff427ed408 <col:24, col:25> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ff427ed3e0 <col:25> 'int' 1
|   |-DeclStmt 0x1ff427ed4e0 <line:969:5, col:22>
|   | `-VarDecl 0x1ff427ed450 <col:5, col:21> col:9 used no_ticket 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ed4b8 <col:21> 'int' 0
|   |-DeclStmt 0x1ff427ed5a0 <line:970:5, col:22>
|   | `-VarDecl 0x1ff427ed510 <col:5, col:18> col:10 used bytes 'long' cinit
|   |   `-IntegerLiteral 0x1ff427ed578 <col:18> 'long' 256
|   |-DeclStmt 0x1ff427ed720 <line:973:5, col:35>
|   | |-VarDecl 0x1ff427ed5d0 <col:5, col:18> col:9 used dhe512 'int' cinit
|   | | `-IntegerLiteral 0x1ff427ed638 <col:18> 'int' 0
|   | `-VarDecl 0x1ff427ed678 <col:5, col:34> col:21 used dhe1024dsa 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ed6e0 <col:34> 'int' 0
|   |-DeclStmt 0x1ff427ed9a0 <line:977:5, col:51>
|   | `-VarDecl 0x1ff427ed748 <col:5, col:50> col:20 used srp_client_arg 'SRP_CLIENT_ARG':'struct srp_client_arg_st' cinit
|   |   `-InitListExpr 0x1ff427ed920 <col:37, col:50> 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |     |-ImplicitCastExpr 0x1ff427ed970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x1ff427ed818 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x1ff427ed7f0 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x1ff427ed7b0 <col:26> 'int' 0
|   |     `-ImplicitCastExpr 0x1ff427ed988 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x1ff427ed8a0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff427ed878 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff427ed838 <col:26> 'int' 0
|   |-DeclStmt 0x1ff427edc20 <.//openssl//file_jk/before\test\ssltest_old.c:979:5, col:51>
|   | `-VarDecl 0x1ff427ed9c8 <col:5, col:50> col:20 used srp_server_arg 'SRP_SERVER_ARG':'struct srp_server_arg_st' cinit
|   |   `-InitListExpr 0x1ff427edba0 <col:37, col:50> 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |     |-ImplicitCastExpr 0x1ff427edbf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x1ff427eda98 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x1ff427eda70 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x1ff427eda30 <col:26> 'int' 0
|   |     `-ImplicitCastExpr 0x1ff427edc08 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x1ff427edb20 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff427edaf8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff427edab8 <col:26> 'int' 0
|   |-DeclStmt 0x1ff427edce0 <.//openssl//file_jk/before\test\ssltest_old.c:981:5, col:19>
|   | `-VarDecl 0x1ff427edc50 <col:5, col:18> col:9 used no_dhe 'int' cinit
|   |   `-IntegerLiteral 0x1ff427edcb8 <col:18> 'int' 0
|   |-DeclStmt 0x1ff427edda0 <line:982:5, col:19>
|   | `-VarDecl 0x1ff427edd10 <col:5, col:18> col:9 used no_psk 'int' cinit
|   |   `-IntegerLiteral 0x1ff427edd78 <col:18> 'int' 0
|   |-DeclStmt 0x1ff427ede60 <line:983:5, col:23>
|   | `-VarDecl 0x1ff427eddd0 <col:5, col:22> col:9 used print_time 'int' cinit
|   |   `-IntegerLiteral 0x1ff427ede38 <col:22> 'int' 0
|   |-DeclStmt 0x1ff427ddfd8 <line:984:5, col:35>
|   | |-VarDecl 0x1ff427dde60 <col:5, col:22> col:13 used s_time 'clock_t':'long' cinit
|   | | `-ImplicitCastExpr 0x1ff427ddef0 <col:22> 'clock_t':'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ff427ddec8 <col:22> 'int' 0
|   | `-VarDecl 0x1ff427ddf18 <col:5, col:34> col:25 used c_time 'clock_t':'long' cinit
|   |   `-ImplicitCastExpr 0x1ff427ddfa8 <col:34> 'clock_t':'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff427ddf80 <col:34> 'int' 0
|   |-DeclStmt 0x1ff427de130 <line:986:5, col:20>
|   | |-VarDecl 0x1ff427de008 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x1ff427de088 <col:5, col:19> col:12 used comp 'int' cinit
|   |   `-IntegerLiteral 0x1ff427de0f0 <col:19> 'int' 0
|   |-DeclStmt 0x1ff427de3e8 <line:993:5, col:20>
|   | `-VarDecl 0x1ff427de380 <col:5, col:9> col:9 used no_protocol 'int'
|   |-DeclStmt 0x1ff427de568 <line:994:5, col:41>
|   | |-VarDecl 0x1ff427de418 <col:5, col:23> col:9 used min_version 'int' cinit
|   | | `-IntegerLiteral 0x1ff427de480 <col:23> 'int' 0
|   | `-VarDecl 0x1ff427de4c0 <col:5, col:40> col:26 used max_version 'int' cinit
|   |   `-IntegerLiteral 0x1ff427de528 <col:40> 'int' 0
|   |-DeclStmt 0x1ff427de628 <line:1000:5, col:26>
|   | `-VarDecl 0x1ff427de598 <col:5, col:25> col:9 used ct_validation 'int' cinit
|   |   `-IntegerLiteral 0x1ff427de600 <col:25> 'int' 0
|   |-DeclStmt 0x1ff427dead8 <line:1004:5, col:35>
|   | |-VarDecl 0x1ff427de898 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:1004:11 used arg 'char *' cinit
|   | | `-ImplicitCastExpr 0x1ff427de988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1ff427de968 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427de940 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427de900 <col:26> 'int' 0
|   | `-VarDecl 0x1ff427de9b8 <.//openssl//file_jk/before\test\ssltest_old.c:1004:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:1004:24 used argn 'char *' cinit
|   |   `-ImplicitCastExpr 0x1ff427deaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1ff427dea88 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ff427dea60 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ff427dea20 <col:26> 'int' 0
|   |-BinaryOperator 0x1ff427deb38 <.//openssl//file_jk/before\test\ssltest_old.c:1006:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ff427deaf0 <col:5> 'int' lvalue Var 0x1ff427d36c0 'verbose' 'int'
|   | `-IntegerLiteral 0x1ff427deb10 <col:15> 'int' 0
|   |-BinaryOperator 0x1ff427deba0 <line:1007:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x1ff427deb58 <col:5> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | `-IntegerLiteral 0x1ff427deb78 <col:13> 'int' 0
|   |-BinaryOperator 0x1ff427dec20 <line:1008:5, col:14> 'char *' '='
|   | |-DeclRefExpr 0x1ff427debc0 <col:5> 'char *' lvalue Var 0x1ff427d3588 'cipher' 'char *'
|   | `-ImplicitCastExpr 0x1ff427dec08 <col:14> 'char *' <NullToPointer>
|   |   `-IntegerLiteral 0x1ff427debe0 <col:14> 'int' 0
|   |-BinaryOperator 0x1ff427defb8 <line:1012:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x1ff427dee28 <col:5> 'char *' lvalue Var 0x1ff427ecfb8 'p' 'char *'
|   | `-CallExpr 0x1ff427def60 <col:9, col:38> 'char *'
|   |   |-ImplicitCastExpr 0x1ff427def48 <col:9> 'char *(*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427dee60 <col:9> 'char *(const char *) __attribute__((cdecl))':'char *(const char *)' Function 0x1ff42781ac8 'getenv' 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
|   |   `-ImplicitCastExpr 0x1ff427defa0 <col:16> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1ff427def88 <col:16> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1ff427deeb8 <col:16> 'char [21]' lvalue "OPENSSL_DEBUG_MEMORY"
|   |-IfStmt 0x1ff427df3e8 <line:1013:5, line:1014:31>
|   | |-BinaryOperator 0x1ff427df250 <line:1013:9, col:41> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427df0b0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff427df080 <.//openssl//file_jk/before\test\ssltest_old.c:1013:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427defd8 <col:9> 'char *' lvalue Var 0x1ff427ecfb8 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x1ff427df098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff427df060 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff427df038 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff427deff8 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff427df230 <.//openssl//file_jk/before\test\ssltest_old.c:1013:22, col:41> 'int' '=='
|   | |   |-CallExpr 0x1ff427df178 <col:22, col:36> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff427df160 <col:22> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff427df0d0 <col:22> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1ff427df1c0 <col:29> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x1ff427df1a8 <col:29> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1ff427df0f0 <col:29> 'char *' lvalue Var 0x1ff427ecfb8 'p' 'char *'
|   | |   | `-ImplicitCastExpr 0x1ff427df1f0 <col:32> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1ff427df1d8 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1ff427df110 <col:32> 'char [3]' lvalue "on"
|   | |   `-IntegerLiteral 0x1ff427df208 <col:41> 'int' 0
|   | `-CallExpr 0x1ff427df3c0 <line:1014:9, col:31> 'int'
|   |   |-ImplicitCastExpr 0x1ff427df3a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff427df360 <col:9> 'int ()' Function 0x1ff427df298 'CRYPTO_set_mem_debug' 'int ()'
|   |   `-IntegerLiteral 0x1ff427df380 <col:30> 'int' 1
|   |-CallExpr 0x1ff427df6b8 <line:1017:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1ff427df6a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427df600 <col:5> 'int ()' Function 0x1ff427df538 'RAND_seed' 'int ()'
|   | |-ImplicitCastExpr 0x1ff427df6e8 <col:15> 'const char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1ff427df620 <col:15> 'const char [64]' lvalue Var 0x1ff427d3848 'rnd_seed' 'const char [64]'
|   | `-UnaryExprOrTypeTraitExpr 0x1ff427df680 <col:25, col:40> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1ff427df660 <col:31, col:40> 'const char [64]' lvalue
|   |     `-DeclRefExpr 0x1ff427df640 <col:32> 'const char [64]' lvalue Var 0x1ff427d3848 'rnd_seed' 'const char [64]' non_odr_use_unevaluated
|   |-IfStmt 0x1ff427dfaa8 <line:1025:5, line:1028:5>
|   | |-OpaqueValueExpr 0x1ff427dfa90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427dfa78 <line:1025:41, line:1028:5>
|   |   `-GotoStmt 0x1ff427dfa60 <line:1027:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427dfd88 <line:1038:5, line:1041:5>
|   | |-OpaqueValueExpr 0x1ff427dfd70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427dfd58 <line:1038:51, line:1041:5>
|   |   `-GotoStmt 0x1ff427dfd40 <line:1040:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427dfe48 <line:1042:5, line:1045:5>
|   | |-OpaqueValueExpr 0x1ff427dfe30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427dfe18 <line:1042:52, line:1045:5>
|   |   `-GotoStmt 0x1ff427dfe00 <line:1044:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427effb8 <line:1051:5, line:1054:5>
|   | |-OpaqueValueExpr 0x1ff427effa0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427eff88 <line:1051:51, line:1054:5>
|   |   `-GotoStmt 0x1ff427eff70 <line:1053:9, col:14> 'end' 0x1ff427dfa10
|   |-UnaryOperator 0x1ff427efff0 <line:1056:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x1ff427effd0 <col:5> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |-UnaryOperator 0x1ff427f0028 <line:1057:5, col:9> 'char **':'char **' postfix '++'
|   | `-DeclRefExpr 0x1ff427f0008 <col:5> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |-WhileStmt 0x1ff427f3390 <line:1059:5, line:1322:5>
|   | |-BinaryOperator 0x1ff427f00a0 <line:1059:12, col:20> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ff427f0088 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427f0040 <col:12> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   | | `-IntegerLiteral 0x1ff427f0060 <col:20> 'int' 1
|   | `-CompoundStmt 0x1ff427f3368 <col:23, line:1322:5>
|   |   |-IfStmt 0x1ff427f32d0 <line:1060:9, line:1319:9> has_else
|   |   | |-BinaryOperator 0x1ff427f0250 <line:1060:13, col:36> 'int' '=='
|   |   | | |-CallExpr 0x1ff427f0198 <col:13, col:31> 'int'
|   |   | | | |-ImplicitCastExpr 0x1ff427f0180 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x1ff427f00c0 <col:13> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x1ff427f01e0 <col:20, col:21> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x1ff427f01c8 <col:20, col:21> 'char *' <LValueToRValue>
|   |   | | | |   `-UnaryOperator 0x1ff427f0118 <col:20, col:21> 'char *' lvalue prefix '*' cannot overflow
|   |   | | | |     `-ImplicitCastExpr 0x1ff427f0100 <col:21> 'char **':'char **' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x1ff427f00e0 <col:21> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   | | | `-ImplicitCastExpr 0x1ff427f0210 <col:27> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x1ff427f01f8 <col:27> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x1ff427f0130 <col:27> 'char [3]' lvalue "-F"
|   |   | | `-IntegerLiteral 0x1ff427f0228 <col:36> 'int' 0
|   |   | |-CompoundStmt 0x1ff427f05c8 <col:39, line:1068:9>
|   |   | | |-CallExpr 0x1ff427f03f0 <line:1064:13, line:1065:84> 'int'
|   |   | | | |-ImplicitCastExpr 0x1ff427f03d8 <line:1064:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x1ff427f0270 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | | | |-ParenExpr 0x1ff427f0348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | | | `-UnaryOperator 0x1ff427f0330 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | | | |   `-ArraySubscriptExpr 0x1ff427f0310 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | | | |     |-CallExpr 0x1ff427f02c8 <col:18, col:29> 'FILE *'
|   |   | | | |     | `-ImplicitCastExpr 0x1ff427f02b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | | | |     |   `-DeclRefExpr 0x1ff427f0290 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | | | |     `-IntegerLiteral 0x1ff427f02e8 <col:31> 'int' 2
|   |   | | | `-ImplicitCastExpr 0x1ff427f0438 <.//openssl//file_jk/before\test\ssltest_old.c:1065:21> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x1ff427f0420 <col:21> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x1ff427f0368 <col:21> 'char [61]' lvalue "not compiled with FIPS support, so exiting without running.\n"
|   |   | | `-CallExpr 0x1ff427f05a0 <line:1066:13, col:19> 'int'
|   |   | |   |-ImplicitCastExpr 0x1ff427f0588 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1ff427f0540 <col:13> 'int ()' Function 0x1ff427f0478 'EXIT' 'int ()'
|   |   | |   `-IntegerLiteral 0x1ff427f0560 <col:18> 'int' 0
|   |   | `-IfStmt 0x1ff427f32a8 <line:1068:16, line:1319:9> has_else
|   |   |   |-BinaryOperator 0x1ff427f0780 <line:1068:20, col:53> 'int' '=='
|   |   |   | |-CallExpr 0x1ff427f06c8 <col:20, col:48> 'int'
|   |   |   | | |-ImplicitCastExpr 0x1ff427f06b0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x1ff427f05e8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |   | | |-ImplicitCastExpr 0x1ff427f0710 <col:27, col:28> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x1ff427f06f8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |   | | |   `-UnaryOperator 0x1ff427f0640 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x1ff427f0628 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x1ff427f0608 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |   | | `-ImplicitCastExpr 0x1ff427f0740 <col:34> 'const char *' <NoOp>
|   |   |   | |   `-ImplicitCastExpr 0x1ff427f0728 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |     `-StringLiteral 0x1ff427f0658 <col:34> 'char [13]' lvalue "-server_auth"
|   |   |   | `-IntegerLiteral 0x1ff427f0758 <col:53> 'int' 0
|   |   |   |-BinaryOperator 0x1ff427f0800 <line:1069:13, col:27> 'int' '='
|   |   |   | |-DeclRefExpr 0x1ff427f07a0 <col:13> 'int' lvalue Var 0x1ff427ecc70 'server_auth' 'int'
|   |   |   | `-IntegerLiteral 0x1ff427f07d8 <col:27> 'int' 1
|   |   |   `-IfStmt 0x1ff427f3280 <line:1070:14, line:1319:9> has_else
|   |   |     |-BinaryOperator 0x1ff427f09b8 <line:1070:18, col:51> 'int' '=='
|   |   |     | |-CallExpr 0x1ff427f0900 <col:18, col:46> 'int'
|   |   |     | | |-ImplicitCastExpr 0x1ff427f08e8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x1ff427f0820 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |     | | |-ImplicitCastExpr 0x1ff427f0948 <col:25, col:26> 'const char *' <NoOp>
|   |   |     | | | `-ImplicitCastExpr 0x1ff427f0930 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |     | | |   `-UnaryOperator 0x1ff427f0878 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |     | | |     `-ImplicitCastExpr 0x1ff427f0860 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |     | | |       `-DeclRefExpr 0x1ff427f0840 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |     | | `-ImplicitCastExpr 0x1ff427f0978 <col:32> 'const char *' <NoOp>
|   |   |     | |   `-ImplicitCastExpr 0x1ff427f0960 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     | |     `-StringLiteral 0x1ff427f0890 <col:32> 'char [13]' lvalue "-client_auth"
|   |   |     | `-IntegerLiteral 0x1ff427f0990 <col:51> 'int' 0
|   |   |     |-BinaryOperator 0x1ff427f0a38 <line:1071:13, col:27> 'int' '='
|   |   |     | |-DeclRefExpr 0x1ff427f09d8 <col:13> 'int' lvalue Var 0x1ff427ecbb0 'client_auth' 'int'
|   |   |     | `-IntegerLiteral 0x1ff427f0a10 <col:27> 'int' 1
|   |   |     `-IfStmt 0x1ff427f3258 <line:1072:14, line:1319:9> has_else
|   |   |       |-BinaryOperator 0x1ff427f0be8 <line:1072:18, col:41> 'int' '=='
|   |   |       | |-CallExpr 0x1ff427f0b30 <col:18, col:36> 'int'
|   |   |       | | |-ImplicitCastExpr 0x1ff427f0b18 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x1ff427f0a58 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |       | | |-ImplicitCastExpr 0x1ff427f0b78 <col:25, col:26> 'const char *' <NoOp>
|   |   |       | | | `-ImplicitCastExpr 0x1ff427f0b60 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |       | | |   `-UnaryOperator 0x1ff427f0ab0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |       | | |     `-ImplicitCastExpr 0x1ff427f0a98 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x1ff427f0a78 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |       | | `-ImplicitCastExpr 0x1ff427f0ba8 <col:32> 'const char *' <NoOp>
|   |   |       | |   `-ImplicitCastExpr 0x1ff427f0b90 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |       | |     `-StringLiteral 0x1ff427f0ac8 <col:32> 'char [3]' lvalue "-v"
|   |   |       | `-IntegerLiteral 0x1ff427f0bc0 <col:41> 'int' 0
|   |   |       |-BinaryOperator 0x1ff427f0c50 <line:1073:13, col:23> 'int' '='
|   |   |       | |-DeclRefExpr 0x1ff427f0c08 <col:13> 'int' lvalue Var 0x1ff427d36c0 'verbose' 'int'
|   |   |       | `-IntegerLiteral 0x1ff427f0c28 <col:23> 'int' 1
|   |   |       `-IfStmt 0x1ff427f3230 <line:1074:14, line:1319:9> has_else
|   |   |         |-BinaryOperator 0x1ff427f0e00 <line:1074:18, col:41> 'int' '=='
|   |   |         | |-CallExpr 0x1ff427f0d48 <col:18, col:36> 'int'
|   |   |         | | |-ImplicitCastExpr 0x1ff427f0d30 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |         | | | `-DeclRefExpr 0x1ff427f0c70 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |         | | |-ImplicitCastExpr 0x1ff427f0d90 <col:25, col:26> 'const char *' <NoOp>
|   |   |         | | | `-ImplicitCastExpr 0x1ff427f0d78 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |         | | |   `-UnaryOperator 0x1ff427f0cc8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |         | | |     `-ImplicitCastExpr 0x1ff427f0cb0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |         | | |       `-DeclRefExpr 0x1ff427f0c90 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |         | | `-ImplicitCastExpr 0x1ff427f0dc0 <col:32> 'const char *' <NoOp>
|   |   |         | |   `-ImplicitCastExpr 0x1ff427f0da8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |         | |     `-StringLiteral 0x1ff427f0ce0 <col:32> 'char [3]' lvalue "-d"
|   |   |         | `-IntegerLiteral 0x1ff427f0dd8 <col:41> 'int' 0
|   |   |         |-BinaryOperator 0x1ff427f0e68 <line:1075:13, col:21> 'int' '='
|   |   |         | |-DeclRefExpr 0x1ff427f0e20 <col:13> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   |         | `-IntegerLiteral 0x1ff427f0e40 <col:21> 'int' 1
|   |   |         `-IfStmt 0x1ff427f3208 <line:1076:14, line:1319:9> has_else
|   |   |           |-BinaryOperator 0x1ff427f1018 <line:1076:18, col:45> 'int' '=='
|   |   |           | |-CallExpr 0x1ff427f0f60 <col:18, col:40> 'int'
|   |   |           | | |-ImplicitCastExpr 0x1ff427f0f48 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x1ff427f0e88 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |           | | |-ImplicitCastExpr 0x1ff427f0fa8 <col:25, col:26> 'const char *' <NoOp>
|   |   |           | | | `-ImplicitCastExpr 0x1ff427f0f90 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |           | | |   `-UnaryOperator 0x1ff427f0ee0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |           | | |     `-ImplicitCastExpr 0x1ff427f0ec8 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |           | | |       `-DeclRefExpr 0x1ff427f0ea8 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |           | | `-ImplicitCastExpr 0x1ff427f0fd8 <col:32> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x1ff427f0fc0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x1ff427f0ef8 <col:32> 'char [7]' lvalue "-reuse"
|   |   |           | `-IntegerLiteral 0x1ff427f0ff0 <col:45> 'int' 0
|   |   |           |-BinaryOperator 0x1ff427f1098 <line:1077:13, col:21> 'int' '='
|   |   |           | |-DeclRefExpr 0x1ff427f1038 <col:13> 'int' lvalue Var 0x1ff427ed2a0 'reuse' 'int'
|   |   |           | `-IntegerLiteral 0x1ff427f1070 <col:21> 'int' 1
|   |   |           `-IfStmt 0x1ff427f31e0 <line:1078:14, line:1319:9> has_else
|   |   |             |-BinaryOperator 0x1ff427f1248 <line:1078:18, col:46> 'int' '=='
|   |   |             | |-CallExpr 0x1ff427f1190 <col:18, col:41> 'int'
|   |   |             | | |-ImplicitCastExpr 0x1ff427f1178 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |             | | | `-DeclRefExpr 0x1ff427f10b8 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |             | | |-ImplicitCastExpr 0x1ff427f11d8 <col:25, col:26> 'const char *' <NoOp>
|   |   |             | | | `-ImplicitCastExpr 0x1ff427f11c0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |             | | |   `-UnaryOperator 0x1ff427f1110 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |             | | |     `-ImplicitCastExpr 0x1ff427f10f8 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |             | | |       `-DeclRefExpr 0x1ff427f10d8 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |             | | `-ImplicitCastExpr 0x1ff427f1208 <col:32> 'const char *' <NoOp>
|   |   |             | |   `-ImplicitCastExpr 0x1ff427f11f0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             | |     `-StringLiteral 0x1ff427f1128 <col:32> 'char [8]' lvalue "-dhe512"
|   |   |             | `-IntegerLiteral 0x1ff427f1220 <col:46> 'int' 0
|   |   |             |-CompoundStmt 0x1ff427f12e8 <col:49, line:1085:9>
|   |   |             | `-BinaryOperator 0x1ff427f12c8 <line:1080:13, col:22> 'int' '='
|   |   |             |   |-DeclRefExpr 0x1ff427f1268 <col:13> 'int' lvalue Var 0x1ff427ed5d0 'dhe512' 'int'
|   |   |             |   `-IntegerLiteral 0x1ff427f12a0 <col:22> 'int' 1
|   |   |             `-IfStmt 0x1ff427f31b8 <line:1085:16, line:1319:9> has_else
|   |   |               |-BinaryOperator 0x1ff427f1498 <line:1085:20, col:52> 'int' '=='
|   |   |               | |-CallExpr 0x1ff427f13e0 <col:20, col:47> 'int'
|   |   |               | | |-ImplicitCastExpr 0x1ff427f13c8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |               | | | `-DeclRefExpr 0x1ff427f1300 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |               | | |-ImplicitCastExpr 0x1ff427f1428 <col:27, col:28> 'const char *' <NoOp>
|   |   |               | | | `-ImplicitCastExpr 0x1ff427f1410 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |               | | |   `-UnaryOperator 0x1ff427f1358 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |               | | |     `-ImplicitCastExpr 0x1ff427f1340 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |               | | |       `-DeclRefExpr 0x1ff427f1320 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |               | | `-ImplicitCastExpr 0x1ff427f1458 <col:34> 'const char *' <NoOp>
|   |   |               | |   `-ImplicitCastExpr 0x1ff427f1440 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |               | |     `-StringLiteral 0x1ff427f1370 <col:34> 'char [12]' lvalue "-dhe1024dsa"
|   |   |               | `-IntegerLiteral 0x1ff427f1470 <col:52> 'int' 0
|   |   |               |-CompoundStmt 0x1ff427f1538 <col:55, line:1092:9>
|   |   |               | `-BinaryOperator 0x1ff427f1518 <line:1087:13, col:26> 'int' '='
|   |   |               |   |-DeclRefExpr 0x1ff427f14b8 <col:13> 'int' lvalue Var 0x1ff427ed678 'dhe1024dsa' 'int'
|   |   |               |   `-IntegerLiteral 0x1ff427f14f0 <col:26> 'int' 1
|   |   |               `-IfStmt 0x1ff427f3190 <line:1092:16, line:1319:9> has_else
|   |   |                 |-BinaryOperator 0x1ff427f16e0 <line:1092:20, col:48> 'int' '=='
|   |   |                 | |-CallExpr 0x1ff427f1628 <col:20, col:43> 'int'
|   |   |                 | | |-ImplicitCastExpr 0x1ff427f1610 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                 | | | `-DeclRefExpr 0x1ff427f1550 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                 | | |-ImplicitCastExpr 0x1ff427f1670 <col:27, col:28> 'const char *' <NoOp>
|   |   |                 | | | `-ImplicitCastExpr 0x1ff427f1658 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                 | | |   `-UnaryOperator 0x1ff427f15a8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                 | | |     `-ImplicitCastExpr 0x1ff427f1590 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                 | | |       `-DeclRefExpr 0x1ff427f1570 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                 | | `-ImplicitCastExpr 0x1ff427f16a0 <col:34> 'const char *' <NoOp>
|   |   |                 | |   `-ImplicitCastExpr 0x1ff427f1688 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                 | |     `-StringLiteral 0x1ff427f15c0 <col:34> 'char [8]' lvalue "-no_dhe"
|   |   |                 | `-IntegerLiteral 0x1ff427f16b8 <col:48> 'int' 0
|   |   |                 |-BinaryOperator 0x1ff427f1760 <line:1093:13, col:22> 'int' '='
|   |   |                 | |-DeclRefExpr 0x1ff427f1700 <col:13> 'int' lvalue Var 0x1ff427edc50 'no_dhe' 'int'
|   |   |                 | `-IntegerLiteral 0x1ff427f1738 <col:22> 'int' 1
|   |   |                 `-IfStmt 0x1ff427f3168 <line:1094:14, line:1319:9> has_else
|   |   |                   |-BinaryOperator 0x1ff427f1950 <line:1094:18, col:48> 'int' '=='
|   |   |                   | |-CallExpr 0x1ff427f1898 <col:18, col:43> 'int'
|   |   |                   | | |-ImplicitCastExpr 0x1ff427f1880 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                   | | | `-DeclRefExpr 0x1ff427f1780 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                   | | |-ImplicitCastExpr 0x1ff427f18e0 <col:25, col:26> 'const char *' <NoOp>
|   |   |                   | | | `-ImplicitCastExpr 0x1ff427f18c8 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                   | | |   `-UnaryOperator 0x1ff427f17d8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                   | | |     `-ImplicitCastExpr 0x1ff427f17c0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                   | | |       `-DeclRefExpr 0x1ff427f17a0 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                   | | `-ImplicitCastExpr 0x1ff427f1910 <col:32> 'const char *' <NoOp>
|   |   |                   | |   `-ImplicitCastExpr 0x1ff427f18f8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                   | |     `-StringLiteral 0x1ff427f1828 <col:32> 'char [10]' lvalue "-no_ecdhe"
|   |   |                   | `-IntegerLiteral 0x1ff427f1928 <col:48> 'int' 0
|   |   |                   |-NullStmt 0x1ff427f1970 <line:1095:27>
|   |   |                   `-IfStmt 0x1ff427f3140 <line:1096:14, line:1319:9> has_else
|   |   |                     |-BinaryOperator 0x1ff427f1b08 <line:1096:18, col:43> 'int' '=='
|   |   |                     | |-CallExpr 0x1ff427f1a50 <col:18, col:38> 'int'
|   |   |                     | | |-ImplicitCastExpr 0x1ff427f1a38 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                     | | | `-DeclRefExpr 0x1ff427f1978 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                     | | |-ImplicitCastExpr 0x1ff427f1a98 <col:25, col:26> 'const char *' <NoOp>
|   |   |                     | | | `-ImplicitCastExpr 0x1ff427f1a80 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                     | | |   `-UnaryOperator 0x1ff427f19d0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                     | | |     `-ImplicitCastExpr 0x1ff427f19b8 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                     | | |       `-DeclRefExpr 0x1ff427f1998 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                     | | `-ImplicitCastExpr 0x1ff427f1ac8 <col:32> 'const char *' <NoOp>
|   |   |                     | |   `-ImplicitCastExpr 0x1ff427f1ab0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                     | |     `-StringLiteral 0x1ff427f19e8 <col:32> 'char [5]' lvalue "-psk"
|   |   |                     | `-IntegerLiteral 0x1ff427f1ae0 <col:43> 'int' 0
|   |   |                     |-CompoundStmt 0x1ff427ee040 <col:46, line:1108:9>
|   |   |                     | |-IfStmt 0x1ff427f1c10 <line:1097:13, line:1098:22>
|   |   |                     | | |-BinaryOperator 0x1ff427f1b88 <line:1097:17, col:26> 'int' '<'
|   |   |                     | | | |-UnaryOperator 0x1ff427f1b48 <col:17, col:19> 'int' prefix '--'
|   |   |                     | | | | `-DeclRefExpr 0x1ff427f1b28 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                     | | | `-IntegerLiteral 0x1ff427f1b60 <col:26> 'int' 1
|   |   |                     | | `-GotoStmt 0x1ff427f1bf8 <line:1098:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                     | |-BinaryOperator 0x1ff427f1cd0 <line:1099:13, col:31> 'char *' '='
|   |   |                     | | |-DeclRefExpr 0x1ff427f1c28 <col:13> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
|   |   |                     | | `-ImplicitCastExpr 0x1ff427f1cb8 <col:23, col:31> 'char *' <LValueToRValue>
|   |   |                     | |   `-UnaryOperator 0x1ff427f1ca0 <col:23, col:31> 'char *' lvalue prefix '*' cannot overflow
|   |   |                     | |     `-ParenExpr 0x1ff427f1c80 <col:24, col:31> 'char **':'char **'
|   |   |                     | |       `-UnaryOperator 0x1ff427f1c68 <col:25, col:27> 'char **':'char **' prefix '++'
|   |   |                     | |         `-DeclRefExpr 0x1ff427f1c48 <col:27> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                     | `-IfStmt 0x1ff427ee028 <line:1101:13, line:1104:13>
|   |   |                     |   |-BinaryOperator 0x1ff427edf38 <line:1101:17, col:76> 'int' '!='
|   |   |                     |   | |-CallExpr 0x1ff427f1dd0 <col:17, col:57> 'unsigned long long'
|   |   |                     |   | | |-ImplicitCastExpr 0x1ff427f1db8 <col:17> 'unsigned long long (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                     |   | | | `-DeclRefExpr 0x1ff427f1cf0 <col:17> 'unsigned long long (const char *, const char *)' Function 0x1ff427362d0 'strspn' 'unsigned long long (const char *, const char *)'
|   |   |                     |   | | |-ImplicitCastExpr 0x1ff427f1e18 <col:24> 'const char *' <NoOp>
|   |   |                     |   | | | `-ImplicitCastExpr 0x1ff427f1e00 <col:24> 'char *' <LValueToRValue>
|   |   |                     |   | | |   `-DeclRefExpr 0x1ff427f1d10 <col:24> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
|   |   |                     |   | | `-ImplicitCastExpr 0x1ff427f1e48 <col:33> 'const char *' <NoOp>
|   |   |                     |   | |   `-ImplicitCastExpr 0x1ff427f1e30 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |                     |   | |     `-StringLiteral 0x1ff427f1d30 <col:33> 'char [23]' lvalue "abcdefABCDEF1234567890"
|   |   |                     |   | `-CallExpr 0x1ff427edee0 <col:62, col:76> 'unsigned long long'
|   |   |                     |   |   |-ImplicitCastExpr 0x1ff427f1eb8 <col:62> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |                     |   |   | `-DeclRefExpr 0x1ff427f1e60 <col:62> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   |                     |   |   `-ImplicitCastExpr 0x1ff427edf20 <col:69> 'const char *' <NoOp>
|   |   |                     |   |     `-ImplicitCastExpr 0x1ff427edf08 <col:69> 'char *' <LValueToRValue>
|   |   |                     |   |       `-DeclRefExpr 0x1ff427f1e80 <col:69> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
|   |   |                     |   `-CompoundStmt 0x1ff427ee010 <col:79, line:1104:13>
|   |   |                     |     `-GotoStmt 0x1ff427edff8 <line:1103:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                     `-IfStmt 0x1ff427f3118 <line:1110:14, line:1319:9> has_else
|   |   |                       |-BinaryOperator 0x1ff427ee238 <line:1110:18, col:47> 'int' '=='
|   |   |                       | |-CallExpr 0x1ff427ee180 <col:18, col:42> 'int'
|   |   |                       | | |-ImplicitCastExpr 0x1ff427ee168 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                       | | | `-DeclRefExpr 0x1ff427ee068 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                       | | |-ImplicitCastExpr 0x1ff427ee1c8 <col:25, col:26> 'const char *' <NoOp>
|   |   |                       | | | `-ImplicitCastExpr 0x1ff427ee1b0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                       | | |   `-UnaryOperator 0x1ff427ee0c0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                       | | |     `-ImplicitCastExpr 0x1ff427ee0a8 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                       | | |       `-DeclRefExpr 0x1ff427ee088 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                       | | `-ImplicitCastExpr 0x1ff427ee1f8 <col:32> 'const char *' <NoOp>
|   |   |                       | |   `-ImplicitCastExpr 0x1ff427ee1e0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                       | |     `-StringLiteral 0x1ff427ee118 <col:32> 'char [9]' lvalue "-srpuser"
|   |   |                       | `-IntegerLiteral 0x1ff427ee210 <col:47> 'int' 0
|   |   |                       |-CompoundStmt 0x1ff427ee4d8 <col:50, line:1116:9>
|   |   |                       | |-IfStmt 0x1ff427ee2f0 <line:1111:13, line:1112:22>
|   |   |                       | | |-BinaryOperator 0x1ff427ee2b8 <line:1111:17, col:26> 'int' '<'
|   |   |                       | | | |-UnaryOperator 0x1ff427ee278 <col:17, col:19> 'int' prefix '--'
|   |   |                       | | | | `-DeclRefExpr 0x1ff427ee258 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                       | | | `-IntegerLiteral 0x1ff427ee290 <col:26> 'int' 1
|   |   |                       | | `-GotoStmt 0x1ff427ee2d8 <line:1112:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                       | `-BinaryOperator 0x1ff427ee480 <line:1113:13, line:1114:25> 'char *' '='
|   |   |                       |   |-MemberExpr 0x1ff427ee340 <line:1113:13, col:28> 'char *' lvalue .expected_user 0x1ff427c5fc8
|   |   |                       |   | `-DeclRefExpr 0x1ff427ee308 <col:13> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x1ff427ed9c8 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |   |                       |   `-BinaryOperator 0x1ff427ee460 <col:44, line:1114:25> 'char *' '='
|   |   |                       |     |-MemberExpr 0x1ff427ee3a8 <line:1113:44, col:59> 'char *' lvalue .srplogin 0x1ff428bef08
|   |   |                       |     | `-DeclRefExpr 0x1ff427ee370 <col:44> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x1ff427ed748 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |   |                       |     `-ImplicitCastExpr 0x1ff427ee448 <line:1114:17, col:25> 'char *' <LValueToRValue>
|   |   |                       |       `-UnaryOperator 0x1ff427ee430 <col:17, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |   |                       |         `-ParenExpr 0x1ff427ee410 <col:18, col:25> 'char **':'char **'
|   |   |                       |           `-UnaryOperator 0x1ff427ee3f8 <col:19, col:21> 'char **':'char **' prefix '++'
|   |   |                       |             `-DeclRefExpr 0x1ff427ee3d8 <col:21> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                       `-IfStmt 0x1ff427f30f0 <line:1116:16, line:1319:9> has_else
|   |   |                         |-BinaryOperator 0x1ff427ee688 <line:1116:20, col:49> 'int' '=='
|   |   |                         | |-CallExpr 0x1ff427ee5d0 <col:20, col:44> 'int'
|   |   |                         | | |-ImplicitCastExpr 0x1ff427ee5b8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                         | | | `-DeclRefExpr 0x1ff427ee4f8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                         | | |-ImplicitCastExpr 0x1ff427ee618 <col:27, col:28> 'const char *' <NoOp>
|   |   |                         | | | `-ImplicitCastExpr 0x1ff427ee600 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                         | | |   `-UnaryOperator 0x1ff427ee550 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                         | | |     `-ImplicitCastExpr 0x1ff427ee538 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                         | | |       `-DeclRefExpr 0x1ff427ee518 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                         | | `-ImplicitCastExpr 0x1ff427ee648 <col:34> 'const char *' <NoOp>
|   |   |                         | |   `-ImplicitCastExpr 0x1ff427ee630 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                         | |     `-StringLiteral 0x1ff427ee568 <col:34> 'char [9]' lvalue "-srppass"
|   |   |                         | `-IntegerLiteral 0x1ff427ee660 <col:49> 'int' 0
|   |   |                         |-CompoundStmt 0x1ff427ee8e0 <col:52, line:1121:9>
|   |   |                         | |-IfStmt 0x1ff427ee740 <line:1117:13, line:1118:22>
|   |   |                         | | |-BinaryOperator 0x1ff427ee708 <line:1117:17, col:26> 'int' '<'
|   |   |                         | | | |-UnaryOperator 0x1ff427ee6c8 <col:17, col:19> 'int' prefix '--'
|   |   |                         | | | | `-DeclRefExpr 0x1ff427ee6a8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                         | | | `-IntegerLiteral 0x1ff427ee6e0 <col:26> 'int' 1
|   |   |                         | | `-GotoStmt 0x1ff427ee728 <line:1118:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                         | `-BinaryOperator 0x1ff427ee8a0 <line:1119:13, col:70> 'char *' '='
|   |   |                         |   |-MemberExpr 0x1ff427ee778 <col:13, col:28> 'char *' lvalue .pass 0x1ff427c6038
|   |   |                         |   | `-DeclRefExpr 0x1ff427ee758 <col:13> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x1ff427ed9c8 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |   |                         |   `-BinaryOperator 0x1ff427ee880 <col:35, col:70> 'char *' '='
|   |   |                         |     |-MemberExpr 0x1ff427ee7c8 <col:35, col:50> 'char *' lvalue .srppassin 0x1ff428bee98
|   |   |                         |     | `-DeclRefExpr 0x1ff427ee7a8 <col:35> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x1ff427ed748 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |   |                         |     `-ImplicitCastExpr 0x1ff427ee868 <col:62, col:70> 'char *' <LValueToRValue>
|   |   |                         |       `-UnaryOperator 0x1ff427ee850 <col:62, col:70> 'char *' lvalue prefix '*' cannot overflow
|   |   |                         |         `-ParenExpr 0x1ff427ee830 <col:63, col:70> 'char **':'char **'
|   |   |                         |           `-UnaryOperator 0x1ff427ee818 <col:64, col:66> 'char **':'char **' prefix '++'
|   |   |                         |             `-DeclRefExpr 0x1ff427ee7f8 <col:66> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                         `-IfStmt 0x1ff427f30c8 <line:1123:14, line:1319:9> has_else
|   |   |                           |-BinaryOperator 0x1ff427eea90 <line:1123:18, col:44> 'int' '=='
|   |   |                           | |-CallExpr 0x1ff427ee9d8 <col:18, col:39> 'int'
|   |   |                           | | |-ImplicitCastExpr 0x1ff427ee9c0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                           | | | `-DeclRefExpr 0x1ff427ee900 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                           | | |-ImplicitCastExpr 0x1ff427eea20 <col:25, col:26> 'const char *' <NoOp>
|   |   |                           | | | `-ImplicitCastExpr 0x1ff427eea08 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                           | | |   `-UnaryOperator 0x1ff427ee958 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                           | | |     `-ImplicitCastExpr 0x1ff427ee940 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                           | | |       `-DeclRefExpr 0x1ff427ee920 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                           | | `-ImplicitCastExpr 0x1ff427eea50 <col:32> 'const char *' <NoOp>
|   |   |                           | |   `-ImplicitCastExpr 0x1ff427eea38 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                           | |     `-StringLiteral 0x1ff427ee970 <col:32> 'char [6]' lvalue "-tls1"
|   |   |                           | `-IntegerLiteral 0x1ff427eea68 <col:44> 'int' 0
|   |   |                           |-CompoundStmt 0x1ff427eeb30 <col:47, line:1125:9>
|   |   |                           | `-BinaryOperator 0x1ff427eeb10 <line:1124:13, col:20> 'int' '='
|   |   |                           |   |-DeclRefExpr 0x1ff427eeab0 <col:13> 'int' lvalue Var 0x1ff427ec968 'tls1' 'int'
|   |   |                           |   `-IntegerLiteral 0x1ff427eeae8 <col:20> 'int' 1
|   |   |                           `-IfStmt 0x1ff427f30a0 <line:1125:16, line:1319:9> has_else
|   |   |                             |-BinaryOperator 0x1ff427eecd8 <line:1125:20, col:46> 'int' '=='
|   |   |                             | |-CallExpr 0x1ff427eec20 <col:20, col:41> 'int'
|   |   |                             | | |-ImplicitCastExpr 0x1ff427eec08 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                             | | | `-DeclRefExpr 0x1ff427eeb48 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                             | | |-ImplicitCastExpr 0x1ff427eec68 <col:27, col:28> 'const char *' <NoOp>
|   |   |                             | | | `-ImplicitCastExpr 0x1ff427eec50 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                             | | |   `-UnaryOperator 0x1ff427eeba0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                             | | |     `-ImplicitCastExpr 0x1ff427eeb88 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                             | | |       `-DeclRefExpr 0x1ff427eeb68 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                             | | `-ImplicitCastExpr 0x1ff427eec98 <col:34> 'const char *' <NoOp>
|   |   |                             | |   `-ImplicitCastExpr 0x1ff427eec80 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                             | |     `-StringLiteral 0x1ff427eebb8 <col:34> 'char [6]' lvalue "-ssl3"
|   |   |                             | `-IntegerLiteral 0x1ff427eecb0 <col:46> 'int' 0
|   |   |                             |-CompoundStmt 0x1ff427eed78 <col:49, line:1127:9>
|   |   |                             | `-BinaryOperator 0x1ff427eed58 <line:1126:13, col:20> 'int' '='
|   |   |                             |   |-DeclRefExpr 0x1ff427eecf8 <col:13> 'int' lvalue Var 0x1ff427eca10 'ssl3' 'int'
|   |   |                             |   `-IntegerLiteral 0x1ff427eed30 <col:20> 'int' 1
|   |   |                             `-IfStmt 0x1ff427f3078 <line:1127:16, line:1319:9> has_else
|   |   |                               |-BinaryOperator 0x1ff427eef20 <line:1127:20, col:47> 'int' '=='
|   |   |                               | |-CallExpr 0x1ff427eee68 <col:20, col:42> 'int'
|   |   |                               | | |-ImplicitCastExpr 0x1ff427eee50 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                               | | | `-DeclRefExpr 0x1ff427eed90 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                               | | |-ImplicitCastExpr 0x1ff427eeeb0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                               | | | `-ImplicitCastExpr 0x1ff427eee98 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                               | | |   `-UnaryOperator 0x1ff427eede8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                               | | |     `-ImplicitCastExpr 0x1ff427eedd0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                               | | |       `-DeclRefExpr 0x1ff427eedb0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                               | | `-ImplicitCastExpr 0x1ff427eeee0 <col:34> 'const char *' <NoOp>
|   |   |                               | |   `-ImplicitCastExpr 0x1ff427eeec8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                               | |     `-StringLiteral 0x1ff427eee00 <col:34> 'char [7]' lvalue "-dtls1"
|   |   |                               | `-IntegerLiteral 0x1ff427eeef8 <col:47> 'int' 0
|   |   |                               |-CompoundStmt 0x1ff427eefc0 <col:50, line:1129:9>
|   |   |                               | `-BinaryOperator 0x1ff427eefa0 <line:1128:13, col:21> 'int' '='
|   |   |                               |   |-DeclRefExpr 0x1ff427eef40 <col:13> 'int' lvalue Var 0x1ff427ec770 'dtls1' 'int'
|   |   |                               |   `-IntegerLiteral 0x1ff427eef78 <col:21> 'int' 1
|   |   |                               `-IfStmt 0x1ff427f3050 <line:1129:16, line:1319:9> has_else
|   |   |                                 |-BinaryOperator 0x1ff427ef168 <line:1129:20, col:48> 'int' '=='
|   |   |                                 | |-CallExpr 0x1ff427ef0b0 <col:20, col:43> 'int'
|   |   |                                 | | |-ImplicitCastExpr 0x1ff427ef098 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                 | | | `-DeclRefExpr 0x1ff427eefd8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                 | | |-ImplicitCastExpr 0x1ff427ef0f8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                 | | | `-ImplicitCastExpr 0x1ff427ef0e0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                 | | |   `-UnaryOperator 0x1ff427ef030 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                 | | |     `-ImplicitCastExpr 0x1ff427ef018 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                 | | |       `-DeclRefExpr 0x1ff427eeff8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                 | | `-ImplicitCastExpr 0x1ff427ef128 <col:34> 'const char *' <NoOp>
|   |   |                                 | |   `-ImplicitCastExpr 0x1ff427ef110 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                 | |     `-StringLiteral 0x1ff427ef048 <col:34> 'char [8]' lvalue "-dtls12"
|   |   |                                 | `-IntegerLiteral 0x1ff427ef140 <col:48> 'int' 0
|   |   |                                 |-CompoundStmt 0x1ff427ef208 <col:51, line:1131:9>
|   |   |                                 | `-BinaryOperator 0x1ff427ef1e8 <line:1130:13, col:22> 'int' '='
|   |   |                                 |   |-DeclRefExpr 0x1ff427ef188 <col:13> 'int' lvalue Var 0x1ff427ec818 'dtls12' 'int'
|   |   |                                 |   `-IntegerLiteral 0x1ff427ef1c0 <col:22> 'int' 1
|   |   |                                 `-IfStmt 0x1ff427f3028 <line:1131:16, line:1319:9> has_else
|   |   |                                   |-BinaryOperator 0x1ff427ef3b0 <line:1131:20, col:46> 'int' '=='
|   |   |                                   | |-CallExpr 0x1ff427ef2f8 <col:20, col:41> 'int'
|   |   |                                   | | |-ImplicitCastExpr 0x1ff427ef2e0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                   | | | `-DeclRefExpr 0x1ff427ef220 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                   | | |-ImplicitCastExpr 0x1ff427ef340 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                   | | | `-ImplicitCastExpr 0x1ff427ef328 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                   | | |   `-UnaryOperator 0x1ff427ef278 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                   | | |     `-ImplicitCastExpr 0x1ff427ef260 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                   | | |       `-DeclRefExpr 0x1ff427ef240 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                   | | `-ImplicitCastExpr 0x1ff427ef370 <col:34> 'const char *' <NoOp>
|   |   |                                   | |   `-ImplicitCastExpr 0x1ff427ef358 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                   | |     `-StringLiteral 0x1ff427ef290 <col:34> 'char [6]' lvalue "-dtls"
|   |   |                                   | `-IntegerLiteral 0x1ff427ef388 <col:46> 'int' 0
|   |   |                                   |-CompoundStmt 0x1ff427ef450 <col:49, line:1133:9>
|   |   |                                   | `-BinaryOperator 0x1ff427ef430 <line:1132:13, col:20> 'int' '='
|   |   |                                   |   |-DeclRefExpr 0x1ff427ef3d0 <col:13> 'int' lvalue Var 0x1ff427ec8c0 'dtls' 'int'
|   |   |                                   |   `-IntegerLiteral 0x1ff427ef408 <col:20> 'int' 1
|   |   |                                   `-IfStmt 0x1ff427f3000 <line:1133:16, line:1319:9> has_else
|   |   |                                     |-BinaryOperator 0x1ff427ef668 <line:1133:20, col:49> 'int' '=='
|   |   |                                     | |-CallExpr 0x1ff427ef590 <col:20, col:44> 'int'
|   |   |                                     | | |-ImplicitCastExpr 0x1ff427ef578 <col:20> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   |                                     | | | `-DeclRefExpr 0x1ff427ef468 <col:20> 'int (const char *, const char *, unsigned long long)' Function 0x1ff42733a30 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   |                                     | | |-ImplicitCastExpr 0x1ff427ef5e0 <col:28, col:29> 'const char *' <NoOp>
|   |   |                                     | | | `-ImplicitCastExpr 0x1ff427ef5c8 <col:28, col:29> 'char *' <LValueToRValue>
|   |   |                                     | | |   `-UnaryOperator 0x1ff427ef4c0 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                     | | |     `-ImplicitCastExpr 0x1ff427ef4a8 <col:29> 'char **':'char **' <LValueToRValue>
|   |   |                                     | | |       `-DeclRefExpr 0x1ff427ef488 <col:29> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                     | | |-ImplicitCastExpr 0x1ff427ef610 <col:35> 'const char *' <NoOp>
|   |   |                                     | | | `-ImplicitCastExpr 0x1ff427ef5f8 <col:35> 'char *' <ArrayToPointerDecay>
|   |   |                                     | | |   `-StringLiteral 0x1ff427ef4d8 <col:35> 'char [5]' lvalue "-num"
|   |   |                                     | | `-ImplicitCastExpr 0x1ff427ef628 <col:43> 'unsigned long long' <IntegralCast>
|   |   |                                     | |   `-IntegerLiteral 0x1ff427ef4f8 <col:43> 'int' 4
|   |   |                                     | `-IntegerLiteral 0x1ff427ef640 <col:49> 'int' 0
|   |   |                                     |-CompoundStmt 0x1ff427ef9b8 <col:52, line:1139:9>
|   |   |                                     | |-IfStmt 0x1ff427ef720 <line:1134:13, line:1135:22>
|   |   |                                     | | |-BinaryOperator 0x1ff427ef6e8 <line:1134:17, col:26> 'int' '<'
|   |   |                                     | | | |-UnaryOperator 0x1ff427ef6a8 <col:17, col:19> 'int' prefix '--'
|   |   |                                     | | | | `-DeclRefExpr 0x1ff427ef688 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                     | | | `-IntegerLiteral 0x1ff427ef6c0 <col:26> 'int' 1
|   |   |                                     | | `-GotoStmt 0x1ff427ef708 <line:1135:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                     | |-BinaryOperator 0x1ff427ef898 <line:1136:13, col:36> 'int' '='
|   |   |                                     | | |-DeclRefExpr 0x1ff427ef738 <col:13> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   |   |                                     | | `-CallExpr 0x1ff427ef840 <col:22, col:36> 'int'
|   |   |                                     | |   |-ImplicitCastExpr 0x1ff427ef828 <col:22> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                     | |   | `-DeclRefExpr 0x1ff427ef770 <col:22> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1ff4277ed80 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |   |                                     | |   `-ImplicitCastExpr 0x1ff427ef880 <col:27, col:35> 'const char *' <NoOp>
|   |   |                                     | |     `-ImplicitCastExpr 0x1ff427ef868 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                     | |       `-UnaryOperator 0x1ff427ef7e8 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                     | |         `-ParenExpr 0x1ff427ef7c8 <col:28, col:35> 'char **':'char **'
|   |   |                                     | |           `-UnaryOperator 0x1ff427ef7b0 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                     | |             `-DeclRefExpr 0x1ff427ef790 <col:31> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                     | `-IfStmt 0x1ff427ef9a0 <line:1137:13, line:1138:26>
|   |   |                                     |   |-BinaryOperator 0x1ff427ef918 <line:1137:17, col:27> 'int' '=='
|   |   |                                     |   | |-ImplicitCastExpr 0x1ff427ef900 <col:17> 'int' <LValueToRValue>
|   |   |                                     |   | | `-DeclRefExpr 0x1ff427ef8b8 <col:17> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   |   |                                     |   | `-IntegerLiteral 0x1ff427ef8d8 <col:27> 'int' 0
|   |   |                                     |   `-BinaryOperator 0x1ff427ef980 <line:1138:17, col:26> 'int' '='
|   |   |                                     |     |-DeclRefExpr 0x1ff427ef938 <col:17> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   |   |                                     |     `-IntegerLiteral 0x1ff427ef958 <col:26> 'int' 1
|   |   |                                     `-IfStmt 0x1ff427f2fd8 <line:1139:16, line:1319:9> has_else
|   |   |                                       |-BinaryOperator 0x1ff427efb70 <line:1139:20, col:47> 'int' '=='
|   |   |                                       | |-CallExpr 0x1ff427efab8 <col:20, col:42> 'int'
|   |   |                                       | | |-ImplicitCastExpr 0x1ff427efaa0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                       | | | `-DeclRefExpr 0x1ff427ef9e0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                       | | |-ImplicitCastExpr 0x1ff427efb00 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                       | | | `-ImplicitCastExpr 0x1ff427efae8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                       | | |   `-UnaryOperator 0x1ff427efa38 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                       | | |     `-ImplicitCastExpr 0x1ff427efa20 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                       | | |       `-DeclRefExpr 0x1ff427efa00 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                       | | `-ImplicitCastExpr 0x1ff427efb30 <col:34> 'const char *' <NoOp>
|   |   |                                       | |   `-ImplicitCastExpr 0x1ff427efb18 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                       | |     `-StringLiteral 0x1ff427efa50 <col:34> 'char [7]' lvalue "-bytes"
|   |   |                                       | `-IntegerLiteral 0x1ff427efb48 <col:47> 'int' 0
|   |   |                                       |-CompoundStmt 0x1ff428005c8 <col:50, line:1150:9>
|   |   |                                       | |-IfStmt 0x1ff427efc28 <line:1140:13, line:1141:22>
|   |   |                                       | | |-BinaryOperator 0x1ff427efbf0 <line:1140:17, col:26> 'int' '<'
|   |   |                                       | | | |-UnaryOperator 0x1ff427efbb0 <col:17, col:19> 'int' prefix '--'
|   |   |                                       | | | | `-DeclRefExpr 0x1ff427efb90 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                       | | | `-IntegerLiteral 0x1ff427efbc8 <col:26> 'int' 1
|   |   |                                       | | `-GotoStmt 0x1ff427efc10 <line:1141:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                       | |-BinaryOperator 0x1ff427efdd8 <line:1142:13, col:35> 'long' '='
|   |   |                                       | | |-DeclRefExpr 0x1ff427efc40 <col:13> 'long' lvalue Var 0x1ff427ed510 'bytes' 'long'
|   |   |                                       | | `-CallExpr 0x1ff427efd80 <col:21, col:35> 'long'
|   |   |                                       | |   |-ImplicitCastExpr 0x1ff427efd68 <col:21> 'long (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                       | |   | `-DeclRefExpr 0x1ff427efc78 <col:21> 'long (const char *) __attribute__((cdecl))':'long (const char *)' Function 0x1ff42786358 'atol' 'long (const char *) __attribute__((cdecl))':'long (const char *)'
|   |   |                                       | |   `-ImplicitCastExpr 0x1ff427efdc0 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                       | |     `-ImplicitCastExpr 0x1ff427efda8 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                       | |       `-UnaryOperator 0x1ff427efcf0 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                       | |         `-ParenExpr 0x1ff427efcd0 <col:27, col:34> 'char **':'char **'
|   |   |                                       | |           `-UnaryOperator 0x1ff427efcb8 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                       | |             `-DeclRefExpr 0x1ff427efc98 <col:30> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                       | |-IfStmt 0x1ff427fff70 <line:1143:13, line:1144:25>
|   |   |                                       | | |-BinaryOperator 0x1ff427efe58 <line:1143:17, col:26> 'int' '=='
|   |   |                                       | | | |-ImplicitCastExpr 0x1ff427efe40 <col:17> 'long' <LValueToRValue>
|   |   |                                       | | | | `-DeclRefExpr 0x1ff427efdf8 <col:17> 'long' lvalue Var 0x1ff427ed510 'bytes' 'long'
|   |   |                                       | | | `-IntegerLiteral 0x1ff427efe18 <col:26> 'long' 0
|   |   |                                       | | `-BinaryOperator 0x1ff427efec0 <line:1144:17, col:25> 'long' '='
|   |   |                                       | |   |-DeclRefExpr 0x1ff427efe78 <col:17> 'long' lvalue Var 0x1ff427ed510 'bytes' 'long'
|   |   |                                       | |   `-IntegerLiteral 0x1ff427efe98 <col:25> 'long' 1
|   |   |                                       | |-BinaryOperator 0x1ff42800100 <line:1145:13, col:31> 'int' '='
|   |   |                                       | | |-DeclRefExpr 0x1ff427fff88 <col:13> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   |   |                                       | | `-ImplicitCastExpr 0x1ff428000e8 <col:17, col:31> 'int' <IntegralCast>
|   |   |                                       | |   `-CallExpr 0x1ff42800090 <col:17, col:31> 'unsigned long long'
|   |   |                                       | |     |-ImplicitCastExpr 0x1ff42800078 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |                                       | |     | `-DeclRefExpr 0x1ff427fffc0 <col:17> 'unsigned long long (const char *)' Function 0x1ff42868910 'strlen' 'unsigned long long (const char *)'
|   |   |                                       | |     `-ImplicitCastExpr 0x1ff428000d0 <col:24, col:30> 'const char *' <NoOp>
|   |   |                                       | |       `-ImplicitCastExpr 0x1ff428000b8 <col:24, col:30> 'char *' <LValueToRValue>
|   |   |                                       | |         `-ArraySubscriptExpr 0x1ff42800040 <col:24, col:30> 'char *' lvalue
|   |   |                                       | |           |-ImplicitCastExpr 0x1ff42800028 <col:24> 'char **':'char **' <LValueToRValue>
|   |   |                                       | |           | `-DeclRefExpr 0x1ff427fffe0 <col:24> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                       | |           `-IntegerLiteral 0x1ff42800000 <col:29> 'int' 0
|   |   |                                       | |-IfStmt 0x1ff42800338 <line:1146:13, line:1147:26>
|   |   |                                       | | |-BinaryOperator 0x1ff428002a0 <line:1146:17, col:35> 'int' '=='
|   |   |                                       | | | |-ImplicitCastExpr 0x1ff42800288 <col:17, col:30> 'int' <IntegralCast>
|   |   |                                       | | | | `-ImplicitCastExpr 0x1ff42800270 <col:17, col:30> 'char' <LValueToRValue>
|   |   |                                       | | | |   `-ArraySubscriptExpr 0x1ff42800238 <col:17, col:30> 'char' lvalue
|   |   |                                       | | | |     |-ImplicitCastExpr 0x1ff42800220 <col:17, col:23> 'char *' <LValueToRValue>
|   |   |                                       | | | |     | `-ArraySubscriptExpr 0x1ff42800180 <col:17, col:23> 'char *' lvalue
|   |   |                                       | | | |     |   |-ImplicitCastExpr 0x1ff42800168 <col:17> 'char **':'char **' <LValueToRValue>
|   |   |                                       | | | |     |   | `-DeclRefExpr 0x1ff42800120 <col:17> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                       | | | |     |   `-IntegerLiteral 0x1ff42800140 <col:22> 'int' 0
|   |   |                                       | | | |     `-BinaryOperator 0x1ff42800200 <col:25, col:29> 'int' '-'
|   |   |                                       | | | |       |-ImplicitCastExpr 0x1ff428001e8 <col:25> 'int' <LValueToRValue>
|   |   |                                       | | | |       | `-DeclRefExpr 0x1ff428001a0 <col:25> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   |   |                                       | | | |       `-IntegerLiteral 0x1ff428001c0 <col:29> 'int' 1
|   |   |                                       | | | `-CharacterLiteral 0x1ff42800258 <col:35> 'int' 107
|   |   |                                       | | `-CompoundAssignOperator 0x1ff42800308 <line:1147:17, col:26> 'long' '*=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |                                       | |   |-DeclRefExpr 0x1ff428002c0 <col:17> 'long' lvalue Var 0x1ff427ed510 'bytes' 'long'
|   |   |                                       | |   `-IntegerLiteral 0x1ff428002e0 <col:26> 'long' 1024
|   |   |                                       | `-IfStmt 0x1ff428005b0 <line:1148:13, line:1149:34>
|   |   |                                       |   |-BinaryOperator 0x1ff428004d0 <line:1148:17, col:35> 'int' '=='
|   |   |                                       |   | |-ImplicitCastExpr 0x1ff428004b8 <col:17, col:30> 'int' <IntegralCast>
|   |   |                                       |   | | `-ImplicitCastExpr 0x1ff428004a0 <col:17, col:30> 'char' <LValueToRValue>
|   |   |                                       |   | |   `-ArraySubscriptExpr 0x1ff42800468 <col:17, col:30> 'char' lvalue
|   |   |                                       |   | |     |-ImplicitCastExpr 0x1ff42800450 <col:17, col:23> 'char *' <LValueToRValue>
|   |   |                                       |   | |     | `-ArraySubscriptExpr 0x1ff428003b0 <col:17, col:23> 'char *' lvalue
|   |   |                                       |   | |     |   |-ImplicitCastExpr 0x1ff42800398 <col:17> 'char **':'char **' <LValueToRValue>
|   |   |                                       |   | |     |   | `-DeclRefExpr 0x1ff42800350 <col:17> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                       |   | |     |   `-IntegerLiteral 0x1ff42800370 <col:22> 'int' 0
|   |   |                                       |   | |     `-BinaryOperator 0x1ff42800430 <col:25, col:29> 'int' '-'
|   |   |                                       |   | |       |-ImplicitCastExpr 0x1ff42800418 <col:25> 'int' <LValueToRValue>
|   |   |                                       |   | |       | `-DeclRefExpr 0x1ff428003d0 <col:25> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   |   |                                       |   | |       `-IntegerLiteral 0x1ff428003f0 <col:29> 'int' 1
|   |   |                                       |   | `-CharacterLiteral 0x1ff42800488 <col:35> 'int' 109
|   |   |                                       |   `-CompoundAssignOperator 0x1ff42800580 <line:1149:17, col:34> 'long' '*=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |                                       |     |-DeclRefExpr 0x1ff428004f0 <col:17> 'long' lvalue Var 0x1ff427ed510 'bytes' 'long'
|   |   |                                       |     `-BinaryOperator 0x1ff42800560 <col:26, col:34> 'long' '*'
|   |   |                                       |       |-IntegerLiteral 0x1ff42800510 <col:26> 'long' 1024
|   |   |                                       |       `-IntegerLiteral 0x1ff42800538 <col:34> 'long' 1024
|   |   |                                       `-IfStmt 0x1ff427f2fb0 <line:1150:16, line:1319:9> has_else
|   |   |                                         |-BinaryOperator 0x1ff42800798 <line:1150:20, col:48> 'int' '=='
|   |   |                                         | |-CallExpr 0x1ff428006e0 <col:20, col:43> 'int'
|   |   |                                         | | |-ImplicitCastExpr 0x1ff428006c8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                         | | | `-DeclRefExpr 0x1ff42800608 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                         | | |-ImplicitCastExpr 0x1ff42800728 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                         | | | `-ImplicitCastExpr 0x1ff42800710 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                         | | |   `-UnaryOperator 0x1ff42800660 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                         | | |     `-ImplicitCastExpr 0x1ff42800648 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                         | | |       `-DeclRefExpr 0x1ff42800628 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                         | | `-ImplicitCastExpr 0x1ff42800758 <col:34> 'const char *' <NoOp>
|   |   |                                         | |   `-ImplicitCastExpr 0x1ff42800740 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                         | |     `-StringLiteral 0x1ff42800678 <col:34> 'char [8]' lvalue "-cipher"
|   |   |                                         | `-IntegerLiteral 0x1ff42800770 <col:48> 'int' 0
|   |   |                                         |-CompoundStmt 0x1ff42800930 <col:51, line:1154:9>
|   |   |                                         | |-IfStmt 0x1ff42800850 <line:1151:13, line:1152:22>
|   |   |                                         | | |-BinaryOperator 0x1ff42800818 <line:1151:17, col:26> 'int' '<'
|   |   |                                         | | | |-UnaryOperator 0x1ff428007d8 <col:17, col:19> 'int' prefix '--'
|   |   |                                         | | | | `-DeclRefExpr 0x1ff428007b8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                         | | | `-IntegerLiteral 0x1ff428007f0 <col:26> 'int' 1
|   |   |                                         | | `-GotoStmt 0x1ff42800838 <line:1152:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                         | `-BinaryOperator 0x1ff42800910 <line:1153:13, col:30> 'char *' '='
|   |   |                                         |   |-DeclRefExpr 0x1ff42800868 <col:13> 'char *' lvalue Var 0x1ff427d3588 'cipher' 'char *'
|   |   |                                         |   `-ImplicitCastExpr 0x1ff428008f8 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                         |     `-UnaryOperator 0x1ff428008e0 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                         |       `-ParenExpr 0x1ff428008c0 <col:23, col:30> 'char **':'char **'
|   |   |                                         |         `-UnaryOperator 0x1ff428008a8 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                         |           `-DeclRefExpr 0x1ff42800888 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                         `-IfStmt 0x1ff427f2f88 <line:1154:16, line:1319:9> has_else
|   |   |                                           |-BinaryOperator 0x1ff42800ae0 <line:1154:20, col:48> 'int' '=='
|   |   |                                           | |-CallExpr 0x1ff42800a28 <col:20, col:43> 'int'
|   |   |                                           | | |-ImplicitCastExpr 0x1ff42800a10 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                           | | | `-DeclRefExpr 0x1ff42800950 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                           | | |-ImplicitCastExpr 0x1ff42800a70 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                           | | | `-ImplicitCastExpr 0x1ff42800a58 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                           | | |   `-UnaryOperator 0x1ff428009a8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                           | | |     `-ImplicitCastExpr 0x1ff42800990 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                           | | |       `-DeclRefExpr 0x1ff42800970 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                           | | `-ImplicitCastExpr 0x1ff42800aa0 <col:34> 'const char *' <NoOp>
|   |   |                                           | |   `-ImplicitCastExpr 0x1ff42800a88 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                           | |     `-StringLiteral 0x1ff428009c0 <col:34> 'char [8]' lvalue "-CApath"
|   |   |                                           | `-IntegerLiteral 0x1ff42800ab8 <col:48> 'int' 0
|   |   |                                           |-CompoundStmt 0x1ff42800cd8 <col:51, line:1158:9>
|   |   |                                           | |-IfStmt 0x1ff42800b98 <line:1155:13, line:1156:22>
|   |   |                                           | | |-BinaryOperator 0x1ff42800b60 <line:1155:17, col:26> 'int' '<'
|   |   |                                           | | | |-UnaryOperator 0x1ff42800b20 <col:17, col:19> 'int' prefix '--'
|   |   |                                           | | | | `-DeclRefExpr 0x1ff42800b00 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                           | | | `-IntegerLiteral 0x1ff42800b38 <col:26> 'int' 1
|   |   |                                           | | `-GotoStmt 0x1ff42800b80 <line:1156:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                           | `-BinaryOperator 0x1ff42800cb8 <line:1157:13, col:30> 'const char *' '='
|   |   |                                           |   |-DeclRefExpr 0x1ff42800bb0 <col:13> 'const char *' lvalue Var 0x1ff427ec020 'CApath' 'const char *'
|   |   |                                           |   `-ImplicitCastExpr 0x1ff42800ca0 <col:22, col:30> 'const char *' <NoOp>
|   |   |                                           |     `-ImplicitCastExpr 0x1ff42800c88 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                           |       `-UnaryOperator 0x1ff42800c70 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                           |         `-ParenExpr 0x1ff42800c50 <col:23, col:30> 'char **':'char **'
|   |   |                                           |           `-UnaryOperator 0x1ff42800c38 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                           |             `-DeclRefExpr 0x1ff42800c18 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                           `-IfStmt 0x1ff427f2f60 <line:1158:16, line:1319:9> has_else
|   |   |                                             |-BinaryOperator 0x1ff42800e88 <line:1158:20, col:48> 'int' '=='
|   |   |                                             | |-CallExpr 0x1ff42800dd0 <col:20, col:43> 'int'
|   |   |                                             | | |-ImplicitCastExpr 0x1ff42800db8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                             | | | `-DeclRefExpr 0x1ff42800cf8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                             | | |-ImplicitCastExpr 0x1ff42800e18 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                             | | | `-ImplicitCastExpr 0x1ff42800e00 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                             | | |   `-UnaryOperator 0x1ff42800d50 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                             | | |     `-ImplicitCastExpr 0x1ff42800d38 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                             | | |       `-DeclRefExpr 0x1ff42800d18 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                             | | `-ImplicitCastExpr 0x1ff42800e48 <col:34> 'const char *' <NoOp>
|   |   |                                             | |   `-ImplicitCastExpr 0x1ff42800e30 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                             | |     `-StringLiteral 0x1ff42800d68 <col:34> 'char [8]' lvalue "-CAfile"
|   |   |                                             | `-IntegerLiteral 0x1ff42800e60 <col:48> 'int' 0
|   |   |                                             |-CompoundStmt 0x1ff42801050 <col:51, line:1162:9>
|   |   |                                             | |-IfStmt 0x1ff42800f40 <line:1159:13, line:1160:22>
|   |   |                                             | | |-BinaryOperator 0x1ff42800f08 <line:1159:17, col:26> 'int' '<'
|   |   |                                             | | | |-UnaryOperator 0x1ff42800ec8 <col:17, col:19> 'int' prefix '--'
|   |   |                                             | | | | `-DeclRefExpr 0x1ff42800ea8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                             | | | `-IntegerLiteral 0x1ff42800ee0 <col:26> 'int' 1
|   |   |                                             | | `-GotoStmt 0x1ff42800f28 <line:1160:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                             | `-BinaryOperator 0x1ff42801030 <line:1161:13, col:30> 'const char *' '='
|   |   |                                             |   |-DeclRefExpr 0x1ff42800f58 <col:13> 'const char *' lvalue Var 0x1ff427ec140 'CAfile' 'const char *'
|   |   |                                             |   `-ImplicitCastExpr 0x1ff42801018 <col:22, col:30> 'const char *' <NoOp>
|   |   |                                             |     `-ImplicitCastExpr 0x1ff42801000 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                             |       `-UnaryOperator 0x1ff42800fe8 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                             |         `-ParenExpr 0x1ff42800fc8 <col:23, col:30> 'char **':'char **'
|   |   |                                             |           `-UnaryOperator 0x1ff42800fb0 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                             |             `-DeclRefExpr 0x1ff42800f90 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                             `-IfStmt 0x1ff427f2f38 <line:1162:16, line:1319:9> has_else
|   |   |                                               |-BinaryOperator 0x1ff42801208 <line:1162:20, col:50> 'int' '=='
|   |   |                                               | |-CallExpr 0x1ff42801150 <col:20, col:45> 'int'
|   |   |                                               | | |-ImplicitCastExpr 0x1ff42801138 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                               | | | `-DeclRefExpr 0x1ff42801070 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                               | | |-ImplicitCastExpr 0x1ff42801198 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                               | | | `-ImplicitCastExpr 0x1ff42801180 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                               | | |   `-UnaryOperator 0x1ff428010c8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                               | | |     `-ImplicitCastExpr 0x1ff428010b0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                               | | |       `-DeclRefExpr 0x1ff42801090 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                               | | `-ImplicitCastExpr 0x1ff428011c8 <col:34> 'const char *' <NoOp>
|   |   |                                               | |   `-ImplicitCastExpr 0x1ff428011b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                               | |     `-StringLiteral 0x1ff428010e0 <col:34> 'char [10]' lvalue "-bio_pair"
|   |   |                                               | `-IntegerLiteral 0x1ff428011e0 <col:50> 'int' 0
|   |   |                                               |-CompoundStmt 0x1ff428012b8 <col:53, line:1164:9>
|   |   |                                               | `-BinaryOperator 0x1ff42801298 <line:1163:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' '='
|   |   |                                               |   |-DeclRefExpr 0x1ff42801228 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   |                                               |   `-ImplicitCastExpr 0x1ff42801280 <col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                               |     `-DeclRefExpr 0x1ff42801260 <col:24> 'int' EnumConstant 0x1ff427ec468 'BIO_PAIR' 'int'
|   |   |                                               `-IfStmt 0x1ff427f2f10 <line:1166:14, line:1319:9> has_else
|   |   |                                                 |-BinaryOperator 0x1ff42801460 <line:1166:18, col:44> 'int' '=='
|   |   |                                                 | |-CallExpr 0x1ff428013a8 <col:18, col:39> 'int'
|   |   |                                                 | | |-ImplicitCastExpr 0x1ff42801390 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                 | | | `-DeclRefExpr 0x1ff428012d0 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                 | | |-ImplicitCastExpr 0x1ff428013f0 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                 | | | `-ImplicitCastExpr 0x1ff428013d8 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                 | | |   `-UnaryOperator 0x1ff42801328 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                 | | |     `-ImplicitCastExpr 0x1ff42801310 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                 | | |       `-DeclRefExpr 0x1ff428012f0 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                 | | `-ImplicitCastExpr 0x1ff42801420 <col:32> 'const char *' <NoOp>
|   |   |                                                 | |   `-ImplicitCastExpr 0x1ff42801408 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                 | |     `-StringLiteral 0x1ff42801340 <col:32> 'char [6]' lvalue "-ipv4"
|   |   |                                                 | `-IntegerLiteral 0x1ff42801438 <col:44> 'int' 0
|   |   |                                                 |-CompoundStmt 0x1ff428014f8 <col:47, line:1168:9>
|   |   |                                                 | `-BinaryOperator 0x1ff428014d8 <line:1167:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' '='
|   |   |                                                 |   |-DeclRefExpr 0x1ff42801480 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   |                                                 |   `-ImplicitCastExpr 0x1ff428014c0 <col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                                 |     `-DeclRefExpr 0x1ff428014a0 <col:24> 'int' EnumConstant 0x1ff427ec4c0 'BIO_IPV4' 'int'
|   |   |                                                 `-IfStmt 0x1ff427f2ee8 <line:1168:16, line:1319:9> has_else
|   |   |                                                   |-BinaryOperator 0x1ff428016a0 <line:1168:20, col:46> 'int' '=='
|   |   |                                                   | |-CallExpr 0x1ff428015e8 <col:20, col:41> 'int'
|   |   |                                                   | | |-ImplicitCastExpr 0x1ff428015d0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                   | | | `-DeclRefExpr 0x1ff42801510 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                   | | |-ImplicitCastExpr 0x1ff42801630 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                   | | | `-ImplicitCastExpr 0x1ff42801618 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                   | | |   `-UnaryOperator 0x1ff42801568 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                   | | |     `-ImplicitCastExpr 0x1ff42801550 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                   | | |       `-DeclRefExpr 0x1ff42801530 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                   | | `-ImplicitCastExpr 0x1ff42801660 <col:34> 'const char *' <NoOp>
|   |   |                                                   | |   `-ImplicitCastExpr 0x1ff42801648 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                   | |     `-StringLiteral 0x1ff42801580 <col:34> 'char [6]' lvalue "-ipv6"
|   |   |                                                   | `-IntegerLiteral 0x1ff42801678 <col:46> 'int' 0
|   |   |                                                   |-CompoundStmt 0x1ff42801738 <col:49, line:1170:9>
|   |   |                                                   | `-BinaryOperator 0x1ff42801718 <line:1169:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' '='
|   |   |                                                   |   |-DeclRefExpr 0x1ff428016c0 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   |                                                   |   `-ImplicitCastExpr 0x1ff42801700 <col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                                   |     `-DeclRefExpr 0x1ff428016e0 <col:24> 'int' EnumConstant 0x1ff427ec518 'BIO_IPV6' 'int'
|   |   |                                                   `-IfStmt 0x1ff427f2ec0 <line:1172:14, line:1319:9> has_else
|   |   |                                                     |-BinaryOperator 0x1ff428018e0 <line:1172:18, col:41> 'int' '=='
|   |   |                                                     | |-CallExpr 0x1ff42801828 <col:18, col:36> 'int'
|   |   |                                                     | | |-ImplicitCastExpr 0x1ff42801810 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                     | | | `-DeclRefExpr 0x1ff42801750 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                     | | |-ImplicitCastExpr 0x1ff42801870 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                     | | | `-ImplicitCastExpr 0x1ff42801858 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                     | | |   `-UnaryOperator 0x1ff428017a8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                     | | |     `-ImplicitCastExpr 0x1ff42801790 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                     | | |       `-DeclRefExpr 0x1ff42801770 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                     | | `-ImplicitCastExpr 0x1ff428018a0 <col:32> 'const char *' <NoOp>
|   |   |                                                     | |   `-ImplicitCastExpr 0x1ff42801888 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                     | |     `-StringLiteral 0x1ff428017c0 <col:32> 'char [3]' lvalue "-f"
|   |   |                                                     | `-IntegerLiteral 0x1ff428018b8 <col:41> 'int' 0
|   |   |                                                     |-CompoundStmt 0x1ff42801980 <col:44, line:1174:9>
|   |   |                                                     | `-BinaryOperator 0x1ff42801960 <line:1173:13, col:21> 'int' '='
|   |   |                                                     |   |-DeclRefExpr 0x1ff42801900 <col:13> 'int' lvalue Var 0x1ff427ec6b0 'force' 'int'
|   |   |                                                     |   `-IntegerLiteral 0x1ff42801938 <col:21> 'int' 1
|   |   |                                                     `-IfStmt 0x1ff427f2e98 <line:1174:16, line:1319:9> has_else
|   |   |                                                       |-BinaryOperator 0x1ff42801b28 <line:1174:20, col:46> 'int' '=='
|   |   |                                                       | |-CallExpr 0x1ff42801a70 <col:20, col:41> 'int'
|   |   |                                                       | | |-ImplicitCastExpr 0x1ff42801a58 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                       | | | `-DeclRefExpr 0x1ff42801998 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                       | | |-ImplicitCastExpr 0x1ff42801ab8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                       | | | `-ImplicitCastExpr 0x1ff42801aa0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                       | | |   `-UnaryOperator 0x1ff428019f0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                       | | |     `-ImplicitCastExpr 0x1ff428019d8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                       | | |       `-DeclRefExpr 0x1ff428019b8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                       | | `-ImplicitCastExpr 0x1ff42801ae8 <col:34> 'const char *' <NoOp>
|   |   |                                                       | |   `-ImplicitCastExpr 0x1ff42801ad0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                       | |     `-StringLiteral 0x1ff42801a08 <col:34> 'char [6]' lvalue "-time"
|   |   |                                                       | `-IntegerLiteral 0x1ff42801b00 <col:46> 'int' 0
|   |   |                                                       |-CompoundStmt 0x1ff42801bc8 <col:49, line:1176:9>
|   |   |                                                       | `-BinaryOperator 0x1ff42801ba8 <line:1175:13, col:26> 'int' '='
|   |   |                                                       |   |-DeclRefExpr 0x1ff42801b48 <col:13> 'int' lvalue Var 0x1ff427eddd0 'print_time' 'int'
|   |   |                                                       |   `-IntegerLiteral 0x1ff42801b80 <col:26> 'int' 1
|   |   |                                                       `-IfStmt 0x1ff427f2e70 <line:1178:14, line:1319:9> has_else
|   |   |                                                         |-BinaryOperator 0x1ff42801d70 <line:1178:18, col:44> 'int' '=='
|   |   |                                                         | |-CallExpr 0x1ff42801cb8 <col:18, col:39> 'int'
|   |   |                                                         | | |-ImplicitCastExpr 0x1ff42801ca0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                         | | | `-DeclRefExpr 0x1ff42801be0 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                         | | |-ImplicitCastExpr 0x1ff42801d00 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                         | | | `-ImplicitCastExpr 0x1ff42801ce8 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                         | | |   `-UnaryOperator 0x1ff42801c38 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                         | | |     `-ImplicitCastExpr 0x1ff42801c20 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                         | | |       `-DeclRefExpr 0x1ff42801c00 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                         | | `-ImplicitCastExpr 0x1ff42801d30 <col:32> 'const char *' <NoOp>
|   |   |                                                         | |   `-ImplicitCastExpr 0x1ff42801d18 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                         | |     `-StringLiteral 0x1ff42801c50 <col:32> 'char [6]' lvalue "-noct"
|   |   |                                                         | `-IntegerLiteral 0x1ff42801d48 <col:44> 'int' 0
|   |   |                                                         |-CompoundStmt 0x1ff42801e10 <col:47, line:1180:9>
|   |   |                                                         | `-BinaryOperator 0x1ff42801df0 <line:1179:13, col:29> 'int' '='
|   |   |                                                         |   |-DeclRefExpr 0x1ff42801d90 <col:13> 'int' lvalue Var 0x1ff427de598 'ct_validation' 'int'
|   |   |                                                         |   `-IntegerLiteral 0x1ff42801dc8 <col:29> 'int' 0
|   |   |                                                         `-IfStmt 0x1ff427f2e48 <line:1181:14, line:1319:9> has_else
|   |   |                                                           |-BinaryOperator 0x1ff427f9f98 <line:1181:18, col:42> 'int' '=='
|   |   |                                                           | |-CallExpr 0x1ff42801f00 <col:18, col:37> 'int'
|   |   |                                                           | | |-ImplicitCastExpr 0x1ff42801ee8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                           | | | `-DeclRefExpr 0x1ff42801e28 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                           | | |-ImplicitCastExpr 0x1ff42801f48 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                           | | | `-ImplicitCastExpr 0x1ff42801f30 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                           | | |   `-UnaryOperator 0x1ff42801e80 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                           | | |     `-ImplicitCastExpr 0x1ff42801e68 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                           | | |       `-DeclRefExpr 0x1ff42801e48 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                           | | `-ImplicitCastExpr 0x1ff427f9f58 <col:32> 'const char *' <NoOp>
|   |   |                                                           | |   `-ImplicitCastExpr 0x1ff427f9f40 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                           | |     `-StringLiteral 0x1ff42801e98 <col:32> 'char [4]' lvalue "-ct"
|   |   |                                                           | `-IntegerLiteral 0x1ff427f9f70 <col:42> 'int' 0
|   |   |                                                           |-CompoundStmt 0x1ff427fa020 <col:45, line:1183:9>
|   |   |                                                           | `-BinaryOperator 0x1ff427fa000 <line:1182:13, col:29> 'int' '='
|   |   |                                                           |   |-DeclRefExpr 0x1ff427f9fb8 <col:13> 'int' lvalue Var 0x1ff427de598 'ct_validation' 'int'
|   |   |                                                           |   `-IntegerLiteral 0x1ff427f9fd8 <col:29> 'int' 1
|   |   |                                                           `-IfStmt 0x1ff427f2e20 <line:1186:14, line:1319:9> has_else
|   |   |                                                             |-BinaryOperator 0x1ff427fa1c8 <line:1186:18, col:44> 'int' '=='
|   |   |                                                             | |-CallExpr 0x1ff427fa110 <col:18, col:39> 'int'
|   |   |                                                             | | |-ImplicitCastExpr 0x1ff427fa0f8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                             | | | `-DeclRefExpr 0x1ff427fa038 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                             | | |-ImplicitCastExpr 0x1ff427fa158 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                             | | | `-ImplicitCastExpr 0x1ff427fa140 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                             | | |   `-UnaryOperator 0x1ff427fa090 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                             | | |     `-ImplicitCastExpr 0x1ff427fa078 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                             | | |       `-DeclRefExpr 0x1ff427fa058 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                             | | `-ImplicitCastExpr 0x1ff427fa188 <col:32> 'const char *' <NoOp>
|   |   |                                                             | |   `-ImplicitCastExpr 0x1ff427fa170 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                             | |     `-StringLiteral 0x1ff427fa0a8 <col:32> 'char [6]' lvalue "-zlib"
|   |   |                                                             | `-IntegerLiteral 0x1ff427fa1a0 <col:44> 'int' 0
|   |   |                                                             |-CompoundStmt 0x1ff427fa268 <col:47, line:1188:9>
|   |   |                                                             | `-BinaryOperator 0x1ff427fa248 <line:1187:13, line:116:25> 'int' '='
|   |   |                                                             |   |-DeclRefExpr 0x1ff427fa1e8 <line:1187:13> 'int' lvalue Var 0x1ff427de088 'comp' 'int'
|   |   |                                                             |   `-IntegerLiteral 0x1ff427fa220 <line:116:25> 'int' 1
|   |   |                                                             `-IfStmt 0x1ff427f2df8 <line:1190:14, line:1319:9> has_else
|   |   |                                                               |-BinaryOperator 0x1ff427fa418 <line:1190:18, col:50> 'int' '=='
|   |   |                                                               | |-CallExpr 0x1ff427fa360 <col:18, col:45> 'int'
|   |   |                                                               | | |-ImplicitCastExpr 0x1ff427fa348 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                               | | | `-DeclRefExpr 0x1ff427fa280 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                               | | |-ImplicitCastExpr 0x1ff427fa3a8 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                               | | | `-ImplicitCastExpr 0x1ff427fa390 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                               | | |   `-UnaryOperator 0x1ff427fa2d8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                               | | |     `-ImplicitCastExpr 0x1ff427fa2c0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                               | | |       `-DeclRefExpr 0x1ff427fa2a0 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                               | | `-ImplicitCastExpr 0x1ff427fa3d8 <col:32> 'const char *' <NoOp>
|   |   |                                                               | |   `-ImplicitCastExpr 0x1ff427fa3c0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                               | |     `-StringLiteral 0x1ff427fa2f0 <col:32> 'char [12]' lvalue "-app_verify"
|   |   |                                                               | `-IntegerLiteral 0x1ff427fa3f0 <col:50> 'int' 0
|   |   |                                                               |-CompoundStmt 0x1ff427fa540 <col:53, line:1192:9>
|   |   |                                                               | `-BinaryOperator 0x1ff427fa4c8 <line:1191:13, col:41> 'int' '='
|   |   |                                                               |   |-MemberExpr 0x1ff427fa470 <col:13, col:28> 'int' lvalue .app_verify 0x1ff428be068
|   |   |                                                               |   | `-DeclRefExpr 0x1ff427fa438 <col:13> 'struct app_verify_arg':'struct app_verify_arg' lvalue Var 0x1ff427ece00 'app_verify_arg' 'struct app_verify_arg':'struct app_verify_arg'
|   |   |                                                               |   `-IntegerLiteral 0x1ff427fa4a0 <col:41> 'int' 1
|   |   |                                                               `-IfStmt 0x1ff427f2dd0 <line:1194:16, line:1319:9> has_else
|   |   |                                                                 |-BinaryOperator 0x1ff427fa6f0 <line:1194:20, col:52> 'int' '=='
|   |   |                                                                 | |-CallExpr 0x1ff427fa638 <col:20, col:47> 'int'
|   |   |                                                                 | | |-ImplicitCastExpr 0x1ff427fa620 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                 | | | `-DeclRefExpr 0x1ff427fa558 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                 | | |-ImplicitCastExpr 0x1ff427fa680 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                 | | | `-ImplicitCastExpr 0x1ff427fa668 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                 | | |   `-UnaryOperator 0x1ff427fa5b0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                 | | |     `-ImplicitCastExpr 0x1ff427fa598 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                 | | |       `-DeclRefExpr 0x1ff427fa578 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                 | | `-ImplicitCastExpr 0x1ff427fa6b0 <col:34> 'const char *' <NoOp>
|   |   |                                                                 | |   `-ImplicitCastExpr 0x1ff427fa698 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                 | |     `-StringLiteral 0x1ff427fa5c8 <col:34> 'char [12]' lvalue "-npn_client"
|   |   |                                                                 | `-IntegerLiteral 0x1ff427fa6c8 <col:52> 'int' 0
|   |   |                                                                 |-CompoundStmt 0x1ff427fa778 <col:55, line:1196:9>
|   |   |                                                                 | `-BinaryOperator 0x1ff427fa758 <line:1195:13, col:26> 'int' '='
|   |   |                                                                 |   |-DeclRefExpr 0x1ff427fa710 <col:13> 'int' lvalue Var 0x1ff427c70b0 'npn_client' 'int'
|   |   |                                                                 |   `-IntegerLiteral 0x1ff427fa730 <col:26> 'int' 1
|   |   |                                                                 `-IfStmt 0x1ff427f2da8 <line:1196:16, line:1319:9> has_else
|   |   |                                                                   |-BinaryOperator 0x1ff427fa928 <line:1196:20, col:52> 'int' '=='
|   |   |                                                                   | |-CallExpr 0x1ff427fa870 <col:20, col:47> 'int'
|   |   |                                                                   | | |-ImplicitCastExpr 0x1ff427fa858 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                   | | | `-DeclRefExpr 0x1ff427fa790 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                   | | |-ImplicitCastExpr 0x1ff427fa8b8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                   | | | `-ImplicitCastExpr 0x1ff427fa8a0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                   | | |   `-UnaryOperator 0x1ff427fa7e8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                   | | |     `-ImplicitCastExpr 0x1ff427fa7d0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                   | | |       `-DeclRefExpr 0x1ff427fa7b0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                   | | `-ImplicitCastExpr 0x1ff427fa8e8 <col:34> 'const char *' <NoOp>
|   |   |                                                                   | |   `-ImplicitCastExpr 0x1ff427fa8d0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                   | |     `-StringLiteral 0x1ff427fa800 <col:34> 'char [12]' lvalue "-npn_server"
|   |   |                                                                   | `-IntegerLiteral 0x1ff427fa900 <col:52> 'int' 0
|   |   |                                                                   |-CompoundStmt 0x1ff427fa9b0 <col:55, line:1198:9>
|   |   |                                                                   | `-BinaryOperator 0x1ff427fa990 <line:1197:13, col:26> 'int' '='
|   |   |                                                                   |   |-DeclRefExpr 0x1ff427fa948 <col:13> 'int' lvalue Var 0x1ff427c7170 'npn_server' 'int'
|   |   |                                                                   |   `-IntegerLiteral 0x1ff427fa968 <col:26> 'int' 1
|   |   |                                                                   `-IfStmt 0x1ff427f2d80 <line:1198:16, line:1319:9> has_else
|   |   |                                                                     |-BinaryOperator 0x1ff427fab68 <line:1198:20, col:59> 'int' '=='
|   |   |                                                                     | |-CallExpr 0x1ff427faab0 <col:20, col:54> 'int'
|   |   |                                                                     | | |-ImplicitCastExpr 0x1ff427faa98 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                     | | | `-DeclRefExpr 0x1ff427fa9c8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                     | | |-ImplicitCastExpr 0x1ff427faaf8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                     | | | `-ImplicitCastExpr 0x1ff427faae0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                     | | |   `-UnaryOperator 0x1ff427faa20 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                     | | |     `-ImplicitCastExpr 0x1ff427faa08 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                     | | |       `-DeclRefExpr 0x1ff427fa9e8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                     | | `-ImplicitCastExpr 0x1ff427fab28 <col:34> 'const char *' <NoOp>
|   |   |                                                                     | |   `-ImplicitCastExpr 0x1ff427fab10 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                     | |     `-StringLiteral 0x1ff427faa38 <col:34> 'char [19]' lvalue "-npn_server_reject"
|   |   |                                                                     | `-IntegerLiteral 0x1ff427fab40 <col:59> 'int' 0
|   |   |                                                                     |-CompoundStmt 0x1ff427fabf0 <col:62, line:1200:9>
|   |   |                                                                     | `-BinaryOperator 0x1ff427fabd0 <line:1199:13, col:33> 'int' '='
|   |   |                                                                     |   |-DeclRefExpr 0x1ff427fab88 <col:13> 'int' lvalue Var 0x1ff427c7230 'npn_server_reject' 'int'
|   |   |                                                                     |   `-IntegerLiteral 0x1ff427faba8 <col:33> 'int' 1
|   |   |                                                                     `-IfStmt 0x1ff427f2d58 <line:1202:14, line:1319:9> has_else
|   |   |                                                                       |-BinaryOperator 0x1ff427fada0 <line:1202:18, col:54> 'int' '=='
|   |   |                                                                       | |-CallExpr 0x1ff427face8 <col:18, col:49> 'int'
|   |   |                                                                       | | |-ImplicitCastExpr 0x1ff427facd0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                       | | | `-DeclRefExpr 0x1ff427fac08 <col:18> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                       | | |-ImplicitCastExpr 0x1ff427fad30 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                                       | | | `-ImplicitCastExpr 0x1ff427fad18 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                                       | | |   `-UnaryOperator 0x1ff427fac60 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                       | | |     `-ImplicitCastExpr 0x1ff427fac48 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                                       | | |       `-DeclRefExpr 0x1ff427fac28 <col:26> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                       | | `-ImplicitCastExpr 0x1ff427fad60 <col:32> 'const char *' <NoOp>
|   |   |                                                                       | |   `-ImplicitCastExpr 0x1ff427fad48 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                                       | |     `-StringLiteral 0x1ff427fac78 <col:32> 'char [16]' lvalue "-serverinfo_sct"
|   |   |                                                                       | `-IntegerLiteral 0x1ff427fad78 <col:54> 'int' 0
|   |   |                                                                       |-CompoundStmt 0x1ff427fae28 <col:57, line:1204:9>
|   |   |                                                                       | `-BinaryOperator 0x1ff427fae08 <line:1203:13, col:30> 'int' '='
|   |   |                                                                       |   |-DeclRefExpr 0x1ff427fadc0 <col:13> 'int' lvalue Var 0x1ff427ced18 'serverinfo_sct' 'int'
|   |   |                                                                       |   `-IntegerLiteral 0x1ff427fade0 <col:30> 'int' 1
|   |   |                                                                       `-IfStmt 0x1ff427f2d30 <line:1204:16, line:1319:9> has_else
|   |   |                                                                         |-BinaryOperator 0x1ff427fb010 <line:1204:20, col:57> 'int' '=='
|   |   |                                                                         | |-CallExpr 0x1ff427faf58 <col:20, col:52> 'int'
|   |   |                                                                         | | |-ImplicitCastExpr 0x1ff427faf40 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                         | | | `-DeclRefExpr 0x1ff427fae40 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                         | | |-ImplicitCastExpr 0x1ff427fafa0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                         | | | `-ImplicitCastExpr 0x1ff427faf88 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                         | | |   `-UnaryOperator 0x1ff427fae98 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                         | | |     `-ImplicitCastExpr 0x1ff427fae80 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                         | | |       `-DeclRefExpr 0x1ff427fae60 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                         | | `-ImplicitCastExpr 0x1ff427fafd0 <col:34> 'const char *' <NoOp>
|   |   |                                                                         | |   `-ImplicitCastExpr 0x1ff427fafb8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                         | |     `-StringLiteral 0x1ff427faee8 <col:34> 'char [17]' lvalue "-serverinfo_tack"
|   |   |                                                                         | `-IntegerLiteral 0x1ff427fafe8 <col:57> 'int' 0
|   |   |                                                                         |-CompoundStmt 0x1ff427fb098 <col:60, line:1206:9>
|   |   |                                                                         | `-BinaryOperator 0x1ff427fb078 <line:1205:13, col:31> 'int' '='
|   |   |                                                                         |   |-DeclRefExpr 0x1ff427fb030 <col:13> 'int' lvalue Var 0x1ff427cedd8 'serverinfo_tack' 'int'
|   |   |                                                                         |   `-IntegerLiteral 0x1ff427fb050 <col:31> 'int' 1
|   |   |                                                                         `-IfStmt 0x1ff427f2d08 <line:1206:16, line:1319:9> has_else
|   |   |                                                                           |-BinaryOperator 0x1ff427fb248 <line:1206:20, col:57> 'int' '=='
|   |   |                                                                           | |-CallExpr 0x1ff427fb190 <col:20, col:52> 'int'
|   |   |                                                                           | | |-ImplicitCastExpr 0x1ff427fb178 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                           | | | `-DeclRefExpr 0x1ff427fb0b0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                           | | |-ImplicitCastExpr 0x1ff427fb1d8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                           | | | `-ImplicitCastExpr 0x1ff427fb1c0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                           | | |   `-UnaryOperator 0x1ff427fb108 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                           | | |     `-ImplicitCastExpr 0x1ff427fb0f0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                           | | |       `-DeclRefExpr 0x1ff427fb0d0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                           | | `-ImplicitCastExpr 0x1ff427fb208 <col:34> 'const char *' <NoOp>
|   |   |                                                                           | |   `-ImplicitCastExpr 0x1ff427fb1f0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                           | |     `-StringLiteral 0x1ff427fb120 <col:34> 'char [17]' lvalue "-serverinfo_file"
|   |   |                                                                           | `-IntegerLiteral 0x1ff427fb220 <col:57> 'int' 0
|   |   |                                                                           |-CompoundStmt 0x1ff427fb3e0 <col:60, line:1210:9>
|   |   |                                                                           | |-IfStmt 0x1ff427fb300 <line:1207:13, line:1208:22>
|   |   |                                                                           | | |-BinaryOperator 0x1ff427fb2c8 <line:1207:17, col:26> 'int' '<'
|   |   |                                                                           | | | |-UnaryOperator 0x1ff427fb288 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                           | | | | `-DeclRefExpr 0x1ff427fb268 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                           | | | `-IntegerLiteral 0x1ff427fb2a0 <col:26> 'int' 1
|   |   |                                                                           | | `-GotoStmt 0x1ff427fb2e8 <line:1208:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                           | `-BinaryOperator 0x1ff427fb3c0 <line:1209:13, col:39> 'char *' '='
|   |   |                                                                           |   |-DeclRefExpr 0x1ff427fb318 <col:13> 'char *' lvalue Var 0x1ff427cebe0 'serverinfo_file' 'char *'
|   |   |                                                                           |   `-ImplicitCastExpr 0x1ff427fb3a8 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                           |     `-UnaryOperator 0x1ff427fb390 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                           |       `-ParenExpr 0x1ff427fb370 <col:32, col:39> 'char **':'char **'
|   |   |                                                                           |         `-UnaryOperator 0x1ff427fb358 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                           |           `-DeclRefExpr 0x1ff427fb338 <col:35> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                           `-IfStmt 0x1ff427f2ce0 <line:1210:16, line:1319:9> has_else
|   |   |                                                                             |-BinaryOperator 0x1ff427fb598 <line:1210:20, col:52> 'int' '=='
|   |   |                                                                             | |-CallExpr 0x1ff427fb4e0 <col:20, col:47> 'int'
|   |   |                                                                             | | |-ImplicitCastExpr 0x1ff427fb4c8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                             | | | `-DeclRefExpr 0x1ff427fb400 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                             | | |-ImplicitCastExpr 0x1ff427fb528 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                             | | | `-ImplicitCastExpr 0x1ff427fb510 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                             | | |   `-UnaryOperator 0x1ff427fb458 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                             | | |     `-ImplicitCastExpr 0x1ff427fb440 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                             | | |       `-DeclRefExpr 0x1ff427fb420 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                             | | `-ImplicitCastExpr 0x1ff427fb558 <col:34> 'const char *' <NoOp>
|   |   |                                                                             | |   `-ImplicitCastExpr 0x1ff427fb540 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                             | |     `-StringLiteral 0x1ff427fb470 <col:34> 'char [12]' lvalue "-custom_ext"
|   |   |                                                                             | `-IntegerLiteral 0x1ff427fb570 <col:52> 'int' 0
|   |   |                                                                             |-CompoundStmt 0x1ff427fb620 <col:55, line:1212:9>
|   |   |                                                                             | `-BinaryOperator 0x1ff427fb600 <line:1211:13, col:26> 'int' '='
|   |   |                                                                             |   |-DeclRefExpr 0x1ff427fb5b8 <col:13> 'int' lvalue Var 0x1ff427cf0d8 'custom_ext' 'int'
|   |   |                                                                             |   `-IntegerLiteral 0x1ff427fb5d8 <col:26> 'int' 1
|   |   |                                                                             `-IfStmt 0x1ff427f2cb8 <line:1212:16, line:1319:9> has_else
|   |   |                                                                               |-BinaryOperator 0x1ff427fb7d0 <line:1212:20, col:53> 'int' '=='
|   |   |                                                                               | |-CallExpr 0x1ff427fb718 <col:20, col:48> 'int'
|   |   |                                                                               | | |-ImplicitCastExpr 0x1ff427fb700 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                               | | | `-DeclRefExpr 0x1ff427fb638 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                               | | |-ImplicitCastExpr 0x1ff427fb760 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                               | | | `-ImplicitCastExpr 0x1ff427fb748 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                               | | |   `-UnaryOperator 0x1ff427fb690 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                               | | |     `-ImplicitCastExpr 0x1ff427fb678 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                               | | |       `-DeclRefExpr 0x1ff427fb658 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                               | | `-ImplicitCastExpr 0x1ff427fb790 <col:34> 'const char *' <NoOp>
|   |   |                                                                               | |   `-ImplicitCastExpr 0x1ff427fb778 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                               | |     `-StringLiteral 0x1ff427fb6a8 <col:34> 'char [13]' lvalue "-alpn_client"
|   |   |                                                                               | `-IntegerLiteral 0x1ff427fb7a8 <col:53> 'int' 0
|   |   |                                                                               |-CompoundStmt 0x1ff427fb980 <col:56, line:1216:9>
|   |   |                                                                               | |-IfStmt 0x1ff427fb888 <line:1213:13, line:1214:22>
|   |   |                                                                               | | |-BinaryOperator 0x1ff427fb850 <line:1213:17, col:26> 'int' '<'
|   |   |                                                                               | | | |-UnaryOperator 0x1ff427fb810 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                               | | | | `-DeclRefExpr 0x1ff427fb7f0 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                               | | | `-IntegerLiteral 0x1ff427fb828 <col:26> 'int' 1
|   |   |                                                                               | | `-GotoStmt 0x1ff427fb870 <line:1214:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                               | `-BinaryOperator 0x1ff427fb960 <line:1215:13, col:35> 'const char *' '='
|   |   |                                                                               |   |-DeclRefExpr 0x1ff427fb8a0 <col:13> 'const char *' lvalue Var 0x1ff427c9e50 'alpn_client' 'const char *'
|   |   |                                                                               |   `-ImplicitCastExpr 0x1ff427fb948 <col:27, col:35> 'const char *' <NoOp>
|   |   |                                                                               |     `-ImplicitCastExpr 0x1ff427fb930 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                                                               |       `-UnaryOperator 0x1ff427fb918 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                               |         `-ParenExpr 0x1ff427fb8f8 <col:28, col:35> 'char **':'char **'
|   |   |                                                                               |           `-UnaryOperator 0x1ff427fb8e0 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                                                               |             `-DeclRefExpr 0x1ff427fb8c0 <col:31> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                               `-IfStmt 0x1ff427f2c90 <line:1216:16, line:1319:9> has_else
|   |   |                                                                                 |-BinaryOperator 0x1ff427fbd50 <line:1216:20, line:1217:54> 'int' '||'
|   |   |                                                                                 | |-BinaryOperator 0x1ff427fbb38 <line:1216:20, col:53> 'int' '=='
|   |   |                                                                                 | | |-CallExpr 0x1ff427fba80 <col:20, col:48> 'int'
|   |   |                                                                                 | | | |-ImplicitCastExpr 0x1ff427fba68 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                 | | | | `-DeclRefExpr 0x1ff427fb9a0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                 | | | |-ImplicitCastExpr 0x1ff427fbac8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                 | | | | `-ImplicitCastExpr 0x1ff427fbab0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                 | | | |   `-UnaryOperator 0x1ff427fb9f8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 | | | |     `-ImplicitCastExpr 0x1ff427fb9e0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                 | | | |       `-DeclRefExpr 0x1ff427fb9c0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                 | | | `-ImplicitCastExpr 0x1ff427fbaf8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                 | | |   `-ImplicitCastExpr 0x1ff427fbae0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                 | | |     `-StringLiteral 0x1ff427fba10 <col:34> 'char [13]' lvalue "-alpn_server"
|   |   |                                                                                 | | `-IntegerLiteral 0x1ff427fbb10 <col:53> 'int' 0
|   |   |                                                                                 | `-BinaryOperator 0x1ff427fbd30 <line:1217:20, col:54> 'int' '=='
|   |   |                                                                                 |   |-CallExpr 0x1ff427fbc78 <col:20, col:49> 'int'
|   |   |                                                                                 |   | |-ImplicitCastExpr 0x1ff427fbc60 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                 |   | | `-DeclRefExpr 0x1ff427fbb58 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                 |   | |-ImplicitCastExpr 0x1ff427fbcc0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                 |   | | `-ImplicitCastExpr 0x1ff427fbca8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                 |   | |   `-UnaryOperator 0x1ff427fbbb0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 |   | |     `-ImplicitCastExpr 0x1ff427fbb98 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                 |   | |       `-DeclRefExpr 0x1ff427fbb78 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                 |   | `-ImplicitCastExpr 0x1ff427fbcf0 <col:34> 'const char *' <NoOp>
|   |   |                                                                                 |   |   `-ImplicitCastExpr 0x1ff427fbcd8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                 |   |     `-StringLiteral 0x1ff427fbc08 <col:34> 'char [14]' lvalue "-alpn_server1"
|   |   |                                                                                 |   `-IntegerLiteral 0x1ff427fbd08 <col:54> 'int' 0
|   |   |                                                                                 |-CompoundStmt 0x1ff427fbee8 <col:57, line:1221:9>
|   |   |                                                                                 | |-IfStmt 0x1ff427fbe08 <line:1218:13, line:1219:22>
|   |   |                                                                                 | | |-BinaryOperator 0x1ff427fbdd0 <line:1218:17, col:26> 'int' '<'
|   |   |                                                                                 | | | |-UnaryOperator 0x1ff427fbd90 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                 | | | | `-DeclRefExpr 0x1ff427fbd70 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                 | | | `-IntegerLiteral 0x1ff427fbda8 <col:26> 'int' 1
|   |   |                                                                                 | | `-GotoStmt 0x1ff427fbdf0 <line:1219:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                 | `-BinaryOperator 0x1ff427fbec8 <line:1220:13, col:35> 'char *' '='
|   |   |                                                                                 |   |-DeclRefExpr 0x1ff427fbe20 <col:13> 'char *' lvalue Var 0x1ff427c9ee8 'alpn_server' 'char *'
|   |   |                                                                                 |   `-ImplicitCastExpr 0x1ff427fbeb0 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                                                                 |     `-UnaryOperator 0x1ff427fbe98 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 |       `-ParenExpr 0x1ff427fbe78 <col:28, col:35> 'char **':'char **'
|   |   |                                                                                 |         `-UnaryOperator 0x1ff427fbe60 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                                                                 |           `-DeclRefExpr 0x1ff427fbe40 <col:31> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                 `-IfStmt 0x1ff427f2c68 <line:1221:16, line:1319:9> has_else
|   |   |                                                                                   |-BinaryOperator 0x1ff427f4088 <line:1221:20, col:54> 'int' '=='
|   |   |                                                                                   | |-CallExpr 0x1ff427f3fd0 <col:20, col:49> 'int'
|   |   |                                                                                   | | |-ImplicitCastExpr 0x1ff427f3fb8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                   | | | `-DeclRefExpr 0x1ff427fbf08 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                   | | |-ImplicitCastExpr 0x1ff427f4018 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                   | | | `-ImplicitCastExpr 0x1ff427f4000 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                   | | |   `-UnaryOperator 0x1ff427f3f48 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                   | | |     `-ImplicitCastExpr 0x1ff427f3f30 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                   | | |       `-DeclRefExpr 0x1ff427f3f10 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                   | | `-ImplicitCastExpr 0x1ff427f4048 <col:34> 'const char *' <NoOp>
|   |   |                                                                                   | |   `-ImplicitCastExpr 0x1ff427f4030 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                   | |     `-StringLiteral 0x1ff427f3f60 <col:34> 'char [14]' lvalue "-alpn_server2"
|   |   |                                                                                   | `-IntegerLiteral 0x1ff427f4060 <col:54> 'int' 0
|   |   |                                                                                   |-CompoundStmt 0x1ff427f4220 <col:57, line:1225:9>
|   |   |                                                                                   | |-IfStmt 0x1ff427f4140 <line:1222:13, line:1223:22>
|   |   |                                                                                   | | |-BinaryOperator 0x1ff427f4108 <line:1222:17, col:26> 'int' '<'
|   |   |                                                                                   | | | |-UnaryOperator 0x1ff427f40c8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                   | | | | `-DeclRefExpr 0x1ff427f40a8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                   | | | `-IntegerLiteral 0x1ff427f40e0 <col:26> 'int' 1
|   |   |                                                                                   | | `-GotoStmt 0x1ff427f4128 <line:1223:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                   | `-BinaryOperator 0x1ff427f4200 <line:1224:13, col:36> 'char *' '='
|   |   |                                                                                   |   |-DeclRefExpr 0x1ff427f4158 <col:13> 'char *' lvalue Var 0x1ff427c9f80 'alpn_server2' 'char *'
|   |   |                                                                                   |   `-ImplicitCastExpr 0x1ff427f41e8 <col:28, col:36> 'char *' <LValueToRValue>
|   |   |                                                                                   |     `-UnaryOperator 0x1ff427f41d0 <col:28, col:36> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                   |       `-ParenExpr 0x1ff427f41b0 <col:29, col:36> 'char **':'char **'
|   |   |                                                                                   |         `-UnaryOperator 0x1ff427f4198 <col:30, col:32> 'char **':'char **' prefix '++'
|   |   |                                                                                   |           `-DeclRefExpr 0x1ff427f4178 <col:32> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                   `-IfStmt 0x1ff427f2c40 <line:1225:16, line:1319:9> has_else
|   |   |                                                                                     |-BinaryOperator 0x1ff427f4410 <line:1225:20, col:55> 'int' '=='
|   |   |                                                                                     | |-CallExpr 0x1ff427f4358 <col:20, col:50> 'int'
|   |   |                                                                                     | | |-ImplicitCastExpr 0x1ff427f4340 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                     | | | `-DeclRefExpr 0x1ff427f4240 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                     | | |-ImplicitCastExpr 0x1ff427f43a0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                     | | | `-ImplicitCastExpr 0x1ff427f4388 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                     | | |   `-UnaryOperator 0x1ff427f4298 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                     | | |     `-ImplicitCastExpr 0x1ff427f4280 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                     | | |       `-DeclRefExpr 0x1ff427f4260 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                     | | `-ImplicitCastExpr 0x1ff427f43d0 <col:34> 'const char *' <NoOp>
|   |   |                                                                                     | |   `-ImplicitCastExpr 0x1ff427f43b8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                     | |     `-StringLiteral 0x1ff427f42e8 <col:34> 'char [15]' lvalue "-alpn_expected"
|   |   |                                                                                     | `-IntegerLiteral 0x1ff427f43e8 <col:55> 'int' 0
|   |   |                                                                                     |-CompoundStmt 0x1ff427f45c0 <col:58, line:1229:9>
|   |   |                                                                                     | |-IfStmt 0x1ff427f44c8 <line:1226:13, line:1227:22>
|   |   |                                                                                     | | |-BinaryOperator 0x1ff427f4490 <line:1226:17, col:26> 'int' '<'
|   |   |                                                                                     | | | |-UnaryOperator 0x1ff427f4450 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                     | | | | `-DeclRefExpr 0x1ff427f4430 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                     | | | `-IntegerLiteral 0x1ff427f4468 <col:26> 'int' 1
|   |   |                                                                                     | | `-GotoStmt 0x1ff427f44b0 <line:1227:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                     | `-BinaryOperator 0x1ff427f45a0 <line:1228:13, col:37> 'const char *' '='
|   |   |                                                                                     |   |-DeclRefExpr 0x1ff427f44e0 <col:13> 'const char *' lvalue Var 0x1ff427ca018 'alpn_expected' 'const char *'
|   |   |                                                                                     |   `-ImplicitCastExpr 0x1ff427f4588 <col:29, col:37> 'const char *' <NoOp>
|   |   |                                                                                     |     `-ImplicitCastExpr 0x1ff427f4570 <col:29, col:37> 'char *' <LValueToRValue>
|   |   |                                                                                     |       `-UnaryOperator 0x1ff427f4558 <col:29, col:37> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                     |         `-ParenExpr 0x1ff427f4538 <col:30, col:37> 'char **':'char **'
|   |   |                                                                                     |           `-UnaryOperator 0x1ff427f4520 <col:31, col:33> 'char **':'char **' prefix '++'
|   |   |                                                                                     |             `-DeclRefExpr 0x1ff427f4500 <col:33> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                     `-IfStmt 0x1ff427f2c18 <line:1229:16, line:1319:9> has_else
|   |   |                                                                                       |-BinaryOperator 0x1ff427f47b8 <line:1229:20, col:58> 'int' '=='
|   |   |                                                                                       | |-CallExpr 0x1ff427f4700 <col:20, col:53> 'int'
|   |   |                                                                                       | | |-ImplicitCastExpr 0x1ff427f46e8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                       | | | `-DeclRefExpr 0x1ff427f45e0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                       | | |-ImplicitCastExpr 0x1ff427f4748 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                       | | | `-ImplicitCastExpr 0x1ff427f4730 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                       | | |   `-UnaryOperator 0x1ff427f4638 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                       | | |     `-ImplicitCastExpr 0x1ff427f4620 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                       | | |       `-DeclRefExpr 0x1ff427f4600 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                       | | `-ImplicitCastExpr 0x1ff427f4778 <col:34> 'const char *' <NoOp>
|   |   |                                                                                       | |   `-ImplicitCastExpr 0x1ff427f4760 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                       | |     `-StringLiteral 0x1ff427f4688 <col:34> 'char [18]' lvalue "-server_min_proto"
|   |   |                                                                                       | `-IntegerLiteral 0x1ff427f4790 <col:58> 'int' 0
|   |   |                                                                                       |-CompoundStmt 0x1ff427f4968 <col:61, line:1233:9>
|   |   |                                                                                       | |-IfStmt 0x1ff427f4870 <line:1230:13, line:1231:22>
|   |   |                                                                                       | | |-BinaryOperator 0x1ff427f4838 <line:1230:17, col:26> 'int' '<'
|   |   |                                                                                       | | | |-UnaryOperator 0x1ff427f47f8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                       | | | | `-DeclRefExpr 0x1ff427f47d8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                       | | | `-IntegerLiteral 0x1ff427f4810 <col:26> 'int' 1
|   |   |                                                                                       | | `-GotoStmt 0x1ff427f4858 <line:1231:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                       | `-BinaryOperator 0x1ff427f4948 <line:1232:13, col:40> 'const char *' '='
|   |   |                                                                                       |   |-DeclRefExpr 0x1ff427f4888 <col:13> 'const char *' lvalue Var 0x1ff427ca148 'server_min_proto' 'const char *'
|   |   |                                                                                       |   `-ImplicitCastExpr 0x1ff427f4930 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                       |     `-ImplicitCastExpr 0x1ff427f4918 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                       |       `-UnaryOperator 0x1ff427f4900 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                       |         `-ParenExpr 0x1ff427f48e0 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                       |           `-UnaryOperator 0x1ff427f48c8 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                       |             `-DeclRefExpr 0x1ff427f48a8 <col:36> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                       `-IfStmt 0x1ff427f2bf0 <line:1233:16, line:1319:9> has_else
|   |   |                                                                                         |-BinaryOperator 0x1ff427f4b28 <line:1233:20, col:58> 'int' '=='
|   |   |                                                                                         | |-CallExpr 0x1ff427f4a70 <col:20, col:53> 'int'
|   |   |                                                                                         | | |-ImplicitCastExpr 0x1ff427f4a58 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                         | | | `-DeclRefExpr 0x1ff427f4988 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                         | | |-ImplicitCastExpr 0x1ff427f4ab8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                         | | | `-ImplicitCastExpr 0x1ff427f4aa0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                         | | |   `-UnaryOperator 0x1ff427f49e0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                         | | |     `-ImplicitCastExpr 0x1ff427f49c8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                         | | |       `-DeclRefExpr 0x1ff427f49a8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                         | | `-ImplicitCastExpr 0x1ff427f4ae8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                         | |   `-ImplicitCastExpr 0x1ff427f4ad0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                         | |     `-StringLiteral 0x1ff427f49f8 <col:34> 'char [18]' lvalue "-server_max_proto"
|   |   |                                                                                         | `-IntegerLiteral 0x1ff427f4b00 <col:58> 'int' 0
|   |   |                                                                                         |-CompoundStmt 0x1ff427f4cd8 <col:61, line:1237:9>
|   |   |                                                                                         | |-IfStmt 0x1ff427f4be0 <line:1234:13, line:1235:22>
|   |   |                                                                                         | | |-BinaryOperator 0x1ff427f4ba8 <line:1234:17, col:26> 'int' '<'
|   |   |                                                                                         | | | |-UnaryOperator 0x1ff427f4b68 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                         | | | | `-DeclRefExpr 0x1ff427f4b48 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                         | | | `-IntegerLiteral 0x1ff427f4b80 <col:26> 'int' 1
|   |   |                                                                                         | | `-GotoStmt 0x1ff427f4bc8 <line:1235:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                         | `-BinaryOperator 0x1ff427f4cb8 <line:1236:13, col:40> 'const char *' '='
|   |   |                                                                                         |   |-DeclRefExpr 0x1ff427f4bf8 <col:13> 'const char *' lvalue Var 0x1ff427ca1e0 'server_max_proto' 'const char *'
|   |   |                                                                                         |   `-ImplicitCastExpr 0x1ff427f4ca0 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                         |     `-ImplicitCastExpr 0x1ff427f4c88 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                         |       `-UnaryOperator 0x1ff427f4c70 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                         |         `-ParenExpr 0x1ff427f4c50 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                         |           `-UnaryOperator 0x1ff427f4c38 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                         |             `-DeclRefExpr 0x1ff427f4c18 <col:36> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                         `-IfStmt 0x1ff427f2bc8 <line:1237:16, line:1319:9> has_else
|   |   |                                                                                           |-BinaryOperator 0x1ff427f4e98 <line:1237:20, col:58> 'int' '=='
|   |   |                                                                                           | |-CallExpr 0x1ff427f4de0 <col:20, col:53> 'int'
|   |   |                                                                                           | | |-ImplicitCastExpr 0x1ff427f4dc8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                           | | | `-DeclRefExpr 0x1ff427f4cf8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                           | | |-ImplicitCastExpr 0x1ff427f4e28 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                           | | | `-ImplicitCastExpr 0x1ff427f4e10 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                           | | |   `-UnaryOperator 0x1ff427f4d50 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                           | | |     `-ImplicitCastExpr 0x1ff427f4d38 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                           | | |       `-DeclRefExpr 0x1ff427f4d18 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                           | | `-ImplicitCastExpr 0x1ff427f4e58 <col:34> 'const char *' <NoOp>
|   |   |                                                                                           | |   `-ImplicitCastExpr 0x1ff427f4e40 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                           | |     `-StringLiteral 0x1ff427f4d68 <col:34> 'char [18]' lvalue "-client_min_proto"
|   |   |                                                                                           | `-IntegerLiteral 0x1ff427f4e70 <col:58> 'int' 0
|   |   |                                                                                           |-CompoundStmt 0x1ff427f5048 <col:61, line:1241:9>
|   |   |                                                                                           | |-IfStmt 0x1ff427f4f50 <line:1238:13, line:1239:22>
|   |   |                                                                                           | | |-BinaryOperator 0x1ff427f4f18 <line:1238:17, col:26> 'int' '<'
|   |   |                                                                                           | | | |-UnaryOperator 0x1ff427f4ed8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                           | | | | `-DeclRefExpr 0x1ff427f4eb8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                           | | | `-IntegerLiteral 0x1ff427f4ef0 <col:26> 'int' 1
|   |   |                                                                                           | | `-GotoStmt 0x1ff427f4f38 <line:1239:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                           | `-BinaryOperator 0x1ff427f5028 <line:1240:13, col:40> 'const char *' '='
|   |   |                                                                                           |   |-DeclRefExpr 0x1ff427f4f68 <col:13> 'const char *' lvalue Var 0x1ff427ca278 'client_min_proto' 'const char *'
|   |   |                                                                                           |   `-ImplicitCastExpr 0x1ff427f5010 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                           |     `-ImplicitCastExpr 0x1ff427f4ff8 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                           |       `-UnaryOperator 0x1ff427f4fe0 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                           |         `-ParenExpr 0x1ff427f4fc0 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                           |           `-UnaryOperator 0x1ff427f4fa8 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                           |             `-DeclRefExpr 0x1ff427f4f88 <col:36> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                           `-IfStmt 0x1ff427f2ba0 <line:1241:16, line:1319:9> has_else
|   |   |                                                                                             |-BinaryOperator 0x1ff427f5208 <line:1241:20, col:58> 'int' '=='
|   |   |                                                                                             | |-CallExpr 0x1ff427f5150 <col:20, col:53> 'int'
|   |   |                                                                                             | | |-ImplicitCastExpr 0x1ff427f5138 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                             | | | `-DeclRefExpr 0x1ff427f5068 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                             | | |-ImplicitCastExpr 0x1ff427f5198 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                             | | | `-ImplicitCastExpr 0x1ff427f5180 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                             | | |   `-UnaryOperator 0x1ff427f50c0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                             | | |     `-ImplicitCastExpr 0x1ff427f50a8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                             | | |       `-DeclRefExpr 0x1ff427f5088 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                             | | `-ImplicitCastExpr 0x1ff427f51c8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                             | |   `-ImplicitCastExpr 0x1ff427f51b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                             | |     `-StringLiteral 0x1ff427f50d8 <col:34> 'char [18]' lvalue "-client_max_proto"
|   |   |                                                                                             | `-IntegerLiteral 0x1ff427f51e0 <col:58> 'int' 0
|   |   |                                                                                             |-CompoundStmt 0x1ff427f53b8 <col:61, line:1245:9>
|   |   |                                                                                             | |-IfStmt 0x1ff427f52c0 <line:1242:13, line:1243:22>
|   |   |                                                                                             | | |-BinaryOperator 0x1ff427f5288 <line:1242:17, col:26> 'int' '<'
|   |   |                                                                                             | | | |-UnaryOperator 0x1ff427f5248 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                             | | | | `-DeclRefExpr 0x1ff427f5228 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                             | | | `-IntegerLiteral 0x1ff427f5260 <col:26> 'int' 1
|   |   |                                                                                             | | `-GotoStmt 0x1ff427f52a8 <line:1243:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                             | `-BinaryOperator 0x1ff427f5398 <line:1244:13, col:40> 'const char *' '='
|   |   |                                                                                             |   |-DeclRefExpr 0x1ff427f52d8 <col:13> 'const char *' lvalue Var 0x1ff427ca310 'client_max_proto' 'const char *'
|   |   |                                                                                             |   `-ImplicitCastExpr 0x1ff427f5380 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                             |     `-ImplicitCastExpr 0x1ff427f5368 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                             |       `-UnaryOperator 0x1ff427f5350 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                             |         `-ParenExpr 0x1ff427f5330 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                             |           `-UnaryOperator 0x1ff427f5318 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                             |             `-DeclRefExpr 0x1ff427f52f8 <col:36> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                             `-IfStmt 0x1ff427f2b78 <line:1245:16, line:1319:9> has_else
|   |   |                                                                                               |-BinaryOperator 0x1ff427f5578 <line:1245:20, col:58> 'int' '=='
|   |   |                                                                                               | |-CallExpr 0x1ff427f54c0 <col:20, col:53> 'int'
|   |   |                                                                                               | | |-ImplicitCastExpr 0x1ff427f54a8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                               | | | `-DeclRefExpr 0x1ff427f53d8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                               | | |-ImplicitCastExpr 0x1ff427f5508 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                               | | | `-ImplicitCastExpr 0x1ff427f54f0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                               | | |   `-UnaryOperator 0x1ff427f5430 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                               | | |     `-ImplicitCastExpr 0x1ff427f5418 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                               | | |       `-DeclRefExpr 0x1ff427f53f8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                               | | `-ImplicitCastExpr 0x1ff427f5538 <col:34> 'const char *' <NoOp>
|   |   |                                                                                               | |   `-ImplicitCastExpr 0x1ff427f5520 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                               | |     `-StringLiteral 0x1ff427f5448 <col:34> 'char [18]' lvalue "-should_negotiate"
|   |   |                                                                                               | `-IntegerLiteral 0x1ff427f5550 <col:58> 'int' 0
|   |   |                                                                                               |-CompoundStmt 0x1ff427f5728 <col:61, line:1249:9>
|   |   |                                                                                               | |-IfStmt 0x1ff427f5630 <line:1246:13, line:1247:22>
|   |   |                                                                                               | | |-BinaryOperator 0x1ff427f55f8 <line:1246:17, col:26> 'int' '<'
|   |   |                                                                                               | | | |-UnaryOperator 0x1ff427f55b8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                               | | | | `-DeclRefExpr 0x1ff427f5598 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                               | | | `-IntegerLiteral 0x1ff427f55d0 <col:26> 'int' 1
|   |   |                                                                                               | | `-GotoStmt 0x1ff427f5618 <line:1247:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                               | `-BinaryOperator 0x1ff427f5708 <line:1248:13, col:40> 'const char *' '='
|   |   |                                                                                               |   |-DeclRefExpr 0x1ff427f5648 <col:13> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   |                                                                                               |   `-ImplicitCastExpr 0x1ff427f56f0 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                               |     `-ImplicitCastExpr 0x1ff427f56d8 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                               |       `-UnaryOperator 0x1ff427f56c0 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                               |         `-ParenExpr 0x1ff427f56a0 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                               |           `-UnaryOperator 0x1ff427f5688 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                               |             `-DeclRefExpr 0x1ff427f5668 <col:36> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                               `-IfStmt 0x1ff427f2b50 <line:1249:16, line:1319:9> has_else
|   |   |                                                                                                 |-BinaryOperator 0x1ff427f58e0 <line:1249:20, col:51> 'int' '=='
|   |   |                                                                                                 | |-CallExpr 0x1ff427f5828 <col:20, col:46> 'int'
|   |   |                                                                                                 | | |-ImplicitCastExpr 0x1ff427f5810 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                 | | | `-DeclRefExpr 0x1ff427f5748 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                 | | |-ImplicitCastExpr 0x1ff427f5870 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                 | | | `-ImplicitCastExpr 0x1ff427f5858 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                 | | |   `-UnaryOperator 0x1ff427f57a0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                 | | |     `-ImplicitCastExpr 0x1ff427f5788 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                 | | |       `-DeclRefExpr 0x1ff427f5768 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                 | | `-ImplicitCastExpr 0x1ff427f58a0 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                 | |   `-ImplicitCastExpr 0x1ff427f5888 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                 | |     `-StringLiteral 0x1ff427f57b8 <col:34> 'char [11]' lvalue "-sn_client"
|   |   |                                                                                                 | `-IntegerLiteral 0x1ff427f58b8 <col:51> 'int' 0
|   |   |                                                                                                 |-CompoundStmt 0x1ff427f5a90 <col:54, line:1253:9>
|   |   |                                                                                                 | |-IfStmt 0x1ff427f5998 <line:1250:13, line:1251:22>
|   |   |                                                                                                 | | |-BinaryOperator 0x1ff427f5960 <line:1250:17, col:26> 'int' '<'
|   |   |                                                                                                 | | | |-UnaryOperator 0x1ff427f5920 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                 | | | | `-DeclRefExpr 0x1ff427f5900 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                 | | | `-IntegerLiteral 0x1ff427f5938 <col:26> 'int' 1
|   |   |                                                                                                 | | `-GotoStmt 0x1ff427f5980 <line:1251:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                 | `-BinaryOperator 0x1ff427f5a70 <line:1252:13, col:33> 'const char *' '='
|   |   |                                                                                                 |   |-DeclRefExpr 0x1ff427f59b0 <col:13> 'const char *' lvalue Var 0x1ff427ca440 'sn_client' 'const char *'
|   |   |                                                                                                 |   `-ImplicitCastExpr 0x1ff427f5a58 <col:25, col:33> 'const char *' <NoOp>
|   |   |                                                                                                 |     `-ImplicitCastExpr 0x1ff427f5a40 <col:25, col:33> 'char *' <LValueToRValue>
|   |   |                                                                                                 |       `-UnaryOperator 0x1ff427f5a28 <col:25, col:33> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                 |         `-ParenExpr 0x1ff427f5a08 <col:26, col:33> 'char **':'char **'
|   |   |                                                                                                 |           `-UnaryOperator 0x1ff427f59f0 <col:27, col:29> 'char **':'char **' prefix '++'
|   |   |                                                                                                 |             `-DeclRefExpr 0x1ff427f59d0 <col:29> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                 `-IfStmt 0x1ff427f2b28 <line:1253:16, line:1319:9> has_else
|   |   |                                                                                                   |-BinaryOperator 0x1ff427f5c48 <line:1253:20, col:52> 'int' '=='
|   |   |                                                                                                   | |-CallExpr 0x1ff427f5b90 <col:20, col:47> 'int'
|   |   |                                                                                                   | | |-ImplicitCastExpr 0x1ff427f5b78 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                   | | | `-DeclRefExpr 0x1ff427f5ab0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                   | | |-ImplicitCastExpr 0x1ff427f5bd8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                   | | | `-ImplicitCastExpr 0x1ff427f5bc0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                   | | |   `-UnaryOperator 0x1ff427f5b08 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                   | | |     `-ImplicitCastExpr 0x1ff427f5af0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                   | | |       `-DeclRefExpr 0x1ff427f5ad0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                   | | `-ImplicitCastExpr 0x1ff427f5c08 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                   | |   `-ImplicitCastExpr 0x1ff427f5bf0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                   | |     `-StringLiteral 0x1ff427f5b20 <col:34> 'char [12]' lvalue "-sn_server1"
|   |   |                                                                                                   | `-IntegerLiteral 0x1ff427f5c20 <col:52> 'int' 0
|   |   |                                                                                                   |-CompoundStmt 0x1ff427f5df8 <col:55, line:1257:9>
|   |   |                                                                                                   | |-IfStmt 0x1ff427f5d00 <line:1254:13, line:1255:22>
|   |   |                                                                                                   | | |-BinaryOperator 0x1ff427f5cc8 <line:1254:17, col:26> 'int' '<'
|   |   |                                                                                                   | | | |-UnaryOperator 0x1ff427f5c88 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                   | | | | `-DeclRefExpr 0x1ff427f5c68 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                   | | | `-IntegerLiteral 0x1ff427f5ca0 <col:26> 'int' 1
|   |   |                                                                                                   | | `-GotoStmt 0x1ff427f5ce8 <line:1255:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                   | `-BinaryOperator 0x1ff427f5dd8 <line:1256:13, col:34> 'const char *' '='
|   |   |                                                                                                   |   |-DeclRefExpr 0x1ff427f5d18 <col:13> 'const char *' lvalue Var 0x1ff427ca4d8 'sn_server1' 'const char *'
|   |   |                                                                                                   |   `-ImplicitCastExpr 0x1ff427f5dc0 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                                                                                   |     `-ImplicitCastExpr 0x1ff427f5da8 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                                                                                   |       `-UnaryOperator 0x1ff427f5d90 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                   |         `-ParenExpr 0x1ff427f5d70 <col:27, col:34> 'char **':'char **'
|   |   |                                                                                                   |           `-UnaryOperator 0x1ff427f5d58 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                                                                                   |             `-DeclRefExpr 0x1ff427f5d38 <col:30> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                   `-IfStmt 0x1ff427f2b00 <line:1257:16, line:1319:9> has_else
|   |   |                                                                                                     |-BinaryOperator 0x1ff427f5fd8 <line:1257:20, col:52> 'int' '=='
|   |   |                                                                                                     | |-CallExpr 0x1ff427f5f20 <col:20, col:47> 'int'
|   |   |                                                                                                     | | |-ImplicitCastExpr 0x1ff427f5ee0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                     | | | `-DeclRefExpr 0x1ff427f5e18 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                     | | |-ImplicitCastExpr 0x1ff427f5f68 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                     | | | `-ImplicitCastExpr 0x1ff427f5f50 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                     | | |   `-UnaryOperator 0x1ff427f5e70 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                     | | |     `-ImplicitCastExpr 0x1ff427f5e58 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                     | | |       `-DeclRefExpr 0x1ff427f5e38 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                     | | `-ImplicitCastExpr 0x1ff427f5f98 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                     | |   `-ImplicitCastExpr 0x1ff427f5f80 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                     | |     `-StringLiteral 0x1ff427f5e88 <col:34> 'char [12]' lvalue "-sn_server2"
|   |   |                                                                                                     | `-IntegerLiteral 0x1ff427f5fb0 <col:52> 'int' 0
|   |   |                                                                                                     |-CompoundStmt 0x1ff427f6188 <col:55, line:1261:9>
|   |   |                                                                                                     | |-IfStmt 0x1ff427f6090 <line:1258:13, line:1259:22>
|   |   |                                                                                                     | | |-BinaryOperator 0x1ff427f6058 <line:1258:17, col:26> 'int' '<'
|   |   |                                                                                                     | | | |-UnaryOperator 0x1ff427f6018 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                     | | | | `-DeclRefExpr 0x1ff427f5ff8 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                     | | | `-IntegerLiteral 0x1ff427f6030 <col:26> 'int' 1
|   |   |                                                                                                     | | `-GotoStmt 0x1ff427f6078 <line:1259:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                     | `-BinaryOperator 0x1ff427f6168 <line:1260:13, col:34> 'const char *' '='
|   |   |                                                                                                     |   |-DeclRefExpr 0x1ff427f60a8 <col:13> 'const char *' lvalue Var 0x1ff427ca570 'sn_server2' 'const char *'
|   |   |                                                                                                     |   `-ImplicitCastExpr 0x1ff427f6150 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                                                                                     |     `-ImplicitCastExpr 0x1ff427f6138 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                                                                                     |       `-UnaryOperator 0x1ff427f6120 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                     |         `-ParenExpr 0x1ff427f6100 <col:27, col:34> 'char **':'char **'
|   |   |                                                                                                     |           `-UnaryOperator 0x1ff427f60e8 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                                                                                     |             `-DeclRefExpr 0x1ff427f60c8 <col:30> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                     `-IfStmt 0x1ff427f2ad8 <line:1261:16, line:1319:9> has_else
|   |   |                                                                                                       |-BinaryOperator 0x1ff427f6340 <line:1261:20, col:52> 'int' '=='
|   |   |                                                                                                       | |-CallExpr 0x1ff427f6288 <col:20, col:47> 'int'
|   |   |                                                                                                       | | |-ImplicitCastExpr 0x1ff427f6270 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                       | | | `-DeclRefExpr 0x1ff427f61a8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                       | | |-ImplicitCastExpr 0x1ff427f62d0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                       | | | `-ImplicitCastExpr 0x1ff427f62b8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                       | | |   `-UnaryOperator 0x1ff427f6200 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                       | | |     `-ImplicitCastExpr 0x1ff427f61e8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                       | | |       `-DeclRefExpr 0x1ff427f61c8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                       | | `-ImplicitCastExpr 0x1ff427f6300 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                       | |   `-ImplicitCastExpr 0x1ff427f62e8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                       | |     `-StringLiteral 0x1ff427f6218 <col:34> 'char [12]' lvalue "-sn_expect1"
|   |   |                                                                                                       | `-IntegerLiteral 0x1ff427f6318 <col:52> 'int' 0
|   |   |                                                                                                       |-CompoundStmt 0x1ff427f63c8 <col:55, line:1263:9>
|   |   |                                                                                                       | `-BinaryOperator 0x1ff427f63a8 <line:1262:13, col:25> 'int' '='
|   |   |                                                                                                       |   |-DeclRefExpr 0x1ff427f6360 <col:13> 'int' lvalue Var 0x1ff427ca608 'sn_expect' 'int'
|   |   |                                                                                                       |   `-IntegerLiteral 0x1ff427f6380 <col:25> 'int' 1
|   |   |                                                                                                       `-IfStmt 0x1ff427f2ab0 <line:1263:16, line:1319:9> has_else
|   |   |                                                                                                         |-BinaryOperator 0x1ff427f6578 <line:1263:20, col:52> 'int' '=='
|   |   |                                                                                                         | |-CallExpr 0x1ff427f64c0 <col:20, col:47> 'int'
|   |   |                                                                                                         | | |-ImplicitCastExpr 0x1ff427f64a8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                         | | | `-DeclRefExpr 0x1ff427f63e0 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                         | | |-ImplicitCastExpr 0x1ff427f6508 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                         | | | `-ImplicitCastExpr 0x1ff427f64f0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                         | | |   `-UnaryOperator 0x1ff427f6438 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                         | | |     `-ImplicitCastExpr 0x1ff427f6420 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                         | | |       `-DeclRefExpr 0x1ff427f6400 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                         | | `-ImplicitCastExpr 0x1ff427f6538 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                         | |   `-ImplicitCastExpr 0x1ff427f6520 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                         | |     `-StringLiteral 0x1ff427f6450 <col:34> 'char [12]' lvalue "-sn_expect2"
|   |   |                                                                                                         | `-IntegerLiteral 0x1ff427f6550 <col:52> 'int' 0
|   |   |                                                                                                         |-CompoundStmt 0x1ff427f6600 <col:55, line:1265:9>
|   |   |                                                                                                         | `-BinaryOperator 0x1ff427f65e0 <line:1264:13, col:25> 'int' '='
|   |   |                                                                                                         |   |-DeclRefExpr 0x1ff427f6598 <col:13> 'int' lvalue Var 0x1ff427ca608 'sn_expect' 'int'
|   |   |                                                                                                         |   `-IntegerLiteral 0x1ff427f65b8 <col:25> 'int' 2
|   |   |                                                                                                         `-IfStmt 0x1ff427f2a88 <line:1265:16, line:1319:9> has_else
|   |   |                                                                                                           |-BinaryOperator 0x1ff427f67b0 <line:1265:20, col:57> 'int' '=='
|   |   |                                                                                                           | |-CallExpr 0x1ff427f66f8 <col:20, col:52> 'int'
|   |   |                                                                                                           | | |-ImplicitCastExpr 0x1ff427f66e0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                           | | | `-DeclRefExpr 0x1ff427f6618 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                           | | |-ImplicitCastExpr 0x1ff427f6740 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                           | | | `-ImplicitCastExpr 0x1ff427f6728 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                           | | |   `-UnaryOperator 0x1ff427f6670 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                           | | |     `-ImplicitCastExpr 0x1ff427f6658 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                           | | |       `-DeclRefExpr 0x1ff427f6638 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                           | | `-ImplicitCastExpr 0x1ff427f6770 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                           | |   `-ImplicitCastExpr 0x1ff427f6758 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                           | |     `-StringLiteral 0x1ff427f6688 <col:34> 'char [17]' lvalue "-server_sess_out"
|   |   |                                                                                                           | `-IntegerLiteral 0x1ff427f6788 <col:57> 'int' 0
|   |   |                                                                                                           |-CompoundStmt 0x1ff427f6960 <col:60, line:1269:9>
|   |   |                                                                                                           | |-IfStmt 0x1ff427f6868 <line:1266:13, line:1267:22>
|   |   |                                                                                                           | | |-BinaryOperator 0x1ff427f6830 <line:1266:17, col:26> 'int' '<'
|   |   |                                                                                                           | | | |-UnaryOperator 0x1ff427f67f0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                           | | | | `-DeclRefExpr 0x1ff427f67d0 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                           | | | `-IntegerLiteral 0x1ff427f6808 <col:26> 'int' 1
|   |   |                                                                                                           | | `-GotoStmt 0x1ff427f6850 <line:1267:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                           | `-BinaryOperator 0x1ff427f6940 <line:1268:13, col:39> 'const char *' '='
|   |   |                                                                                                           |   |-DeclRefExpr 0x1ff427f6880 <col:13> 'const char *' lvalue Var 0x1ff427ca6c8 'server_sess_out' 'const char *'
|   |   |                                                                                                           |   `-ImplicitCastExpr 0x1ff427f6928 <col:31, col:39> 'const char *' <NoOp>
|   |   |                                                                                                           |     `-ImplicitCastExpr 0x1ff427f6910 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                                                           |       `-UnaryOperator 0x1ff427f68f8 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                           |         `-ParenExpr 0x1ff427f68d8 <col:32, col:39> 'char **':'char **'
|   |   |                                                                                                           |           `-UnaryOperator 0x1ff427f68c0 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                                                           |             `-DeclRefExpr 0x1ff427f68a0 <col:35> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                           `-IfStmt 0x1ff427f2a60 <line:1269:16, line:1319:9> has_else
|   |   |                                                                                                             |-BinaryOperator 0x1ff427f6b18 <line:1269:20, col:56> 'int' '=='
|   |   |                                                                                                             | |-CallExpr 0x1ff427f6a60 <col:20, col:51> 'int'
|   |   |                                                                                                             | | |-ImplicitCastExpr 0x1ff427f6a48 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                             | | | `-DeclRefExpr 0x1ff427f6980 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                             | | |-ImplicitCastExpr 0x1ff427f6aa8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                             | | | `-ImplicitCastExpr 0x1ff427f6a90 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                             | | |   `-UnaryOperator 0x1ff427f69d8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                             | | |     `-ImplicitCastExpr 0x1ff427f69c0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                             | | |       `-DeclRefExpr 0x1ff427f69a0 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                             | | `-ImplicitCastExpr 0x1ff427f6ad8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                             | |   `-ImplicitCastExpr 0x1ff427f6ac0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                             | |     `-StringLiteral 0x1ff427f69f0 <col:34> 'char [16]' lvalue "-server_sess_in"
|   |   |                                                                                                             | `-IntegerLiteral 0x1ff427f6af0 <col:56> 'int' 0
|   |   |                                                                                                             |-CompoundStmt 0x1ff427f6cc8 <col:59, line:1273:9>
|   |   |                                                                                                             | |-IfStmt 0x1ff427f6bd0 <line:1270:13, line:1271:22>
|   |   |                                                                                                             | | |-BinaryOperator 0x1ff427f6b98 <line:1270:17, col:26> 'int' '<'
|   |   |                                                                                                             | | | |-UnaryOperator 0x1ff427f6b58 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                             | | | | `-DeclRefExpr 0x1ff427f6b38 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                             | | | `-IntegerLiteral 0x1ff427f6b70 <col:26> 'int' 1
|   |   |                                                                                                             | | `-GotoStmt 0x1ff427f6bb8 <line:1271:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                             | `-BinaryOperator 0x1ff427f6ca8 <line:1272:13, col:38> 'const char *' '='
|   |   |                                                                                                             |   |-DeclRefExpr 0x1ff427f6be8 <col:13> 'const char *' lvalue Var 0x1ff427ca760 'server_sess_in' 'const char *'
|   |   |                                                                                                             |   `-ImplicitCastExpr 0x1ff427f6c90 <col:30, col:38> 'const char *' <NoOp>
|   |   |                                                                                                             |     `-ImplicitCastExpr 0x1ff427f6c78 <col:30, col:38> 'char *' <LValueToRValue>
|   |   |                                                                                                             |       `-UnaryOperator 0x1ff427f6c60 <col:30, col:38> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                             |         `-ParenExpr 0x1ff427f6c40 <col:31, col:38> 'char **':'char **'
|   |   |                                                                                                             |           `-UnaryOperator 0x1ff427f6c28 <col:32, col:34> 'char **':'char **' prefix '++'
|   |   |                                                                                                             |             `-DeclRefExpr 0x1ff427f6c08 <col:34> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                             `-IfStmt 0x1ff427f2a38 <line:1273:16, line:1319:9> has_else
|   |   |                                                                                                               |-BinaryOperator 0x1ff427f6e80 <line:1273:20, col:57> 'int' '=='
|   |   |                                                                                                               | |-CallExpr 0x1ff427f6dc8 <col:20, col:52> 'int'
|   |   |                                                                                                               | | |-ImplicitCastExpr 0x1ff427f6db0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                               | | | `-DeclRefExpr 0x1ff427f6ce8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                               | | |-ImplicitCastExpr 0x1ff427f6e10 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                               | | | `-ImplicitCastExpr 0x1ff427f6df8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                               | | |   `-UnaryOperator 0x1ff427f6d40 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                               | | |     `-ImplicitCastExpr 0x1ff427f6d28 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                               | | |       `-DeclRefExpr 0x1ff427f6d08 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                               | | `-ImplicitCastExpr 0x1ff427f6e40 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                               | |   `-ImplicitCastExpr 0x1ff427f6e28 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                               | |     `-StringLiteral 0x1ff427f6d58 <col:34> 'char [17]' lvalue "-client_sess_out"
|   |   |                                                                                                               | `-IntegerLiteral 0x1ff427f6e58 <col:57> 'int' 0
|   |   |                                                                                                               |-CompoundStmt 0x1ff427f7030 <col:60, line:1277:9>
|   |   |                                                                                                               | |-IfStmt 0x1ff427f6f38 <line:1274:13, line:1275:22>
|   |   |                                                                                                               | | |-BinaryOperator 0x1ff427f6f00 <line:1274:17, col:26> 'int' '<'
|   |   |                                                                                                               | | | |-UnaryOperator 0x1ff427f6ec0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                               | | | | `-DeclRefExpr 0x1ff427f6ea0 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                               | | | `-IntegerLiteral 0x1ff427f6ed8 <col:26> 'int' 1
|   |   |                                                                                                               | | `-GotoStmt 0x1ff427f6f20 <line:1275:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                               | `-BinaryOperator 0x1ff427f7010 <line:1276:13, col:39> 'const char *' '='
|   |   |                                                                                                               |   |-DeclRefExpr 0x1ff427f6f50 <col:13> 'const char *' lvalue Var 0x1ff427ca7f8 'client_sess_out' 'const char *'
|   |   |                                                                                                               |   `-ImplicitCastExpr 0x1ff427f6ff8 <col:31, col:39> 'const char *' <NoOp>
|   |   |                                                                                                               |     `-ImplicitCastExpr 0x1ff427f6fe0 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                                                               |       `-UnaryOperator 0x1ff427f6fc8 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                               |         `-ParenExpr 0x1ff427f6fa8 <col:32, col:39> 'char **':'char **'
|   |   |                                                                                                               |           `-UnaryOperator 0x1ff427f6f90 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                                                               |             `-DeclRefExpr 0x1ff427f6f70 <col:35> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                               `-IfStmt 0x1ff427f2a10 <line:1277:16, line:1319:9> has_else
|   |   |                                                                                                                 |-BinaryOperator 0x1ff427f71e8 <line:1277:20, col:56> 'int' '=='
|   |   |                                                                                                                 | |-CallExpr 0x1ff427f7130 <col:20, col:51> 'int'
|   |   |                                                                                                                 | | |-ImplicitCastExpr 0x1ff427f7118 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                 | | | `-DeclRefExpr 0x1ff427f7050 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                 | | |-ImplicitCastExpr 0x1ff427f7178 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                 | | | `-ImplicitCastExpr 0x1ff427f7160 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                 | | |   `-UnaryOperator 0x1ff427f70a8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                 | | |     `-ImplicitCastExpr 0x1ff427f7090 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                 | | |       `-DeclRefExpr 0x1ff427f7070 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                 | | `-ImplicitCastExpr 0x1ff427f71a8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                 | |   `-ImplicitCastExpr 0x1ff427f7190 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                 | |     `-StringLiteral 0x1ff427f70c0 <col:34> 'char [16]' lvalue "-client_sess_in"
|   |   |                                                                                                                 | `-IntegerLiteral 0x1ff427f71c0 <col:56> 'int' 0
|   |   |                                                                                                                 |-CompoundStmt 0x1ff427f7398 <col:59, line:1281:9>
|   |   |                                                                                                                 | |-IfStmt 0x1ff427f72a0 <line:1278:13, line:1279:22>
|   |   |                                                                                                                 | | |-BinaryOperator 0x1ff427f7268 <line:1278:17, col:26> 'int' '<'
|   |   |                                                                                                                 | | | |-UnaryOperator 0x1ff427f7228 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                                 | | | | `-DeclRefExpr 0x1ff427f7208 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                                 | | | `-IntegerLiteral 0x1ff427f7240 <col:26> 'int' 1
|   |   |                                                                                                                 | | `-GotoStmt 0x1ff427f7288 <line:1279:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                                 | `-BinaryOperator 0x1ff427f7378 <line:1280:13, col:38> 'const char *' '='
|   |   |                                                                                                                 |   |-DeclRefExpr 0x1ff427f72b8 <col:13> 'const char *' lvalue Var 0x1ff427ca890 'client_sess_in' 'const char *'
|   |   |                                                                                                                 |   `-ImplicitCastExpr 0x1ff427f7360 <col:30, col:38> 'const char *' <NoOp>
|   |   |                                                                                                                 |     `-ImplicitCastExpr 0x1ff427f7348 <col:30, col:38> 'char *' <LValueToRValue>
|   |   |                                                                                                                 |       `-UnaryOperator 0x1ff427f7330 <col:30, col:38> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                 |         `-ParenExpr 0x1ff427f7310 <col:31, col:38> 'char **':'char **'
|   |   |                                                                                                                 |           `-UnaryOperator 0x1ff427f72f8 <col:32, col:34> 'char **':'char **' prefix '++'
|   |   |                                                                                                                 |             `-DeclRefExpr 0x1ff427f72d8 <col:34> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                 `-IfStmt 0x1ff427f29e8 <line:1281:16, line:1319:9> has_else
|   |   |                                                                                                                   |-BinaryOperator 0x1ff427f7550 <line:1281:20, col:54> 'int' '=='
|   |   |                                                                                                                   | |-CallExpr 0x1ff427f7498 <col:20, col:49> 'int'
|   |   |                                                                                                                   | | |-ImplicitCastExpr 0x1ff427f7480 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                   | | | `-DeclRefExpr 0x1ff427f73b8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                   | | |-ImplicitCastExpr 0x1ff427f74e0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                   | | | `-ImplicitCastExpr 0x1ff427f74c8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                   | | |   `-UnaryOperator 0x1ff427f7410 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                   | | |     `-ImplicitCastExpr 0x1ff427f73f8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                   | | |       `-DeclRefExpr 0x1ff427f73d8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                   | | `-ImplicitCastExpr 0x1ff427f7510 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                   | |   `-ImplicitCastExpr 0x1ff427f74f8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                   | |     `-StringLiteral 0x1ff427f7428 <col:34> 'char [14]' lvalue "-should_reuse"
|   |   |                                                                                                                   | `-IntegerLiteral 0x1ff427f7528 <col:54> 'int' 0
|   |   |                                                                                                                   |-CompoundStmt 0x1ff427f77a8 <col:57, line:1285:9>
|   |   |                                                                                                                   | |-IfStmt 0x1ff427f7608 <line:1282:13, line:1283:22>
|   |   |                                                                                                                   | | |-BinaryOperator 0x1ff427f75d0 <line:1282:17, col:26> 'int' '<'
|   |   |                                                                                                                   | | | |-UnaryOperator 0x1ff427f7590 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                                   | | | | `-DeclRefExpr 0x1ff427f7570 <col:19> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   |                                                                                                                   | | | `-IntegerLiteral 0x1ff427f75a8 <col:26> 'int' 1
|   |   |                                                                                                                   | | `-GotoStmt 0x1ff427f75f0 <line:1283:17, col:22> 'bad' 0x1ff427f1ba8
|   |   |                                                                                                                   | `-BinaryOperator 0x1ff427f7788 <line:1284:13, col:44> 'int' '='
|   |   |                                                                                                                   |   |-DeclRefExpr 0x1ff427f7620 <col:13> 'int' lvalue Var 0x1ff427ed378 'should_reuse' 'int'
|   |   |                                                                                                                   |   `-UnaryOperator 0x1ff427f7770 <col:28, col:44> 'int' prefix '!' cannot overflow
|   |   |                                                                                                                   |     `-UnaryOperator 0x1ff427f7758 <col:29, col:44> 'int' prefix '!' cannot overflow
|   |   |                                                                                                                   |       `-CallExpr 0x1ff427f7700 <col:30, col:44> 'int'
|   |   |                                                                                                                   |         |-ImplicitCastExpr 0x1ff427f76e8 <col:30> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                                                                                                   |         | `-DeclRefExpr 0x1ff427f7658 <col:30> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1ff4277ed80 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |   |                                                                                                                   |         `-ImplicitCastExpr 0x1ff427f7740 <col:35, col:43> 'const char *' <NoOp>
|   |   |                                                                                                                   |           `-ImplicitCastExpr 0x1ff427f7728 <col:35, col:43> 'char *' <LValueToRValue>
|   |   |                                                                                                                   |             `-UnaryOperator 0x1ff427f76d0 <col:35, col:43> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                   |               `-ParenExpr 0x1ff427f76b0 <col:36, col:43> 'char **':'char **'
|   |   |                                                                                                                   |                 `-UnaryOperator 0x1ff427f7698 <col:37, col:39> 'char **':'char **' prefix '++'
|   |   |                                                                                                                   |                   `-DeclRefExpr 0x1ff427f7678 <col:39> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                   `-IfStmt 0x1ff427f29c0 <line:1285:16, line:1319:9> has_else
|   |   |                                                                                                                     |-BinaryOperator 0x1ff427f7960 <line:1285:20, col:51> 'int' '=='
|   |   |                                                                                                                     | |-CallExpr 0x1ff427f78a8 <col:20, col:46> 'int'
|   |   |                                                                                                                     | | |-ImplicitCastExpr 0x1ff427f7890 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                     | | | `-DeclRefExpr 0x1ff427f77c8 <col:20> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                     | | |-ImplicitCastExpr 0x1ff427f78f0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                     | | | `-ImplicitCastExpr 0x1ff427f78d8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                     | | |   `-UnaryOperator 0x1ff427f7820 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                     | | |     `-ImplicitCastExpr 0x1ff427f7808 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                     | | |       `-DeclRefExpr 0x1ff427f77e8 <col:28> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                     | | `-ImplicitCastExpr 0x1ff427f7920 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                     | |   `-ImplicitCastExpr 0x1ff427f7908 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                     | |     `-StringLiteral 0x1ff427f7838 <col:34> 'char [11]' lvalue "-no_ticket"
|   |   |                                                                                                                     | `-IntegerLiteral 0x1ff427f7938 <col:51> 'int' 0
|   |   |                                                                                                                     |-CompoundStmt 0x1ff427f7a00 <col:54, line:1287:9>
|   |   |                                                                                                                     | `-BinaryOperator 0x1ff427f79e0 <line:1286:13, col:25> 'int' '='
|   |   |                                                                                                                     |   |-DeclRefExpr 0x1ff427f7980 <col:13> 'int' lvalue Var 0x1ff427ed450 'no_ticket' 'int'
|   |   |                                                                                                                     |   `-IntegerLiteral 0x1ff427f79b8 <col:25> 'int' 1
|   |   |                                                                                                                     `-CompoundStmt 0x1ff427f2980 <line:1287:16, line:1319:9>
|   |   |                                                                                                                       |-DeclStmt 0x1ff427f7a98 <line:1288:13, col:19>
|   |   |                                                                                                                       | `-VarDecl 0x1ff427f7a30 <col:13, col:17> col:17 used rv 'int'
|   |   |                                                                                                                       |-BinaryOperator 0x1ff427f7b80 <line:1289:13, col:25> 'char *' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x1ff427f7ab0 <col:13> 'char *' lvalue Var 0x1ff427de898 'arg' 'char *'
|   |   |                                                                                                                       | `-ImplicitCastExpr 0x1ff427f7b68 <col:19, col:25> 'char *' <LValueToRValue>
|   |   |                                                                                                                       |   `-ArraySubscriptExpr 0x1ff427f7b48 <col:19, col:25> 'char *' lvalue
|   |   |                                                                                                                       |     |-ImplicitCastExpr 0x1ff427f7b30 <col:19> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                       |     | `-DeclRefExpr 0x1ff427f7ae8 <col:19> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                       |     `-IntegerLiteral 0x1ff427f7b08 <col:24> 'int' 0
|   |   |                                                                                                                       |-BinaryOperator 0x1ff427f7c70 <line:1290:13, col:26> 'char *' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x1ff427f7ba0 <col:13> 'char *' lvalue Var 0x1ff427de9b8 'argn' 'char *'
|   |   |                                                                                                                       | `-ImplicitCastExpr 0x1ff427f7c58 <col:20, col:26> 'char *' <LValueToRValue>
|   |   |                                                                                                                       |   `-ArraySubscriptExpr 0x1ff427f7c38 <col:20, col:26> 'char *' lvalue
|   |   |                                                                                                                       |     |-ImplicitCastExpr 0x1ff427f7c20 <col:20> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                       |     | `-DeclRefExpr 0x1ff427f7bd8 <col:20> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |   |                                                                                                                       |     `-IntegerLiteral 0x1ff427f7bf8 <col:25> 'int' 1
|   |   |                                                                                                                       |-IfStmt 0x1ff427f25c0 <line:1297:13, line:1310:13>
|   |   |                                                                                                                       | |-BinaryOperator 0x1ff427f2010 <line:1297:17, col:22> 'int' '>'
|   |   |                                                                                                                       | | |-ImplicitCastExpr 0x1ff427f1ff8 <col:17> 'int' <LValueToRValue>
|   |   |                                                                                                                       | | | `-DeclRefExpr 0x1ff427f1fb0 <col:17> 'int' lvalue Var 0x1ff427f7a30 'rv' 'int'
|   |   |                                                                                                                       | | `-IntegerLiteral 0x1ff427f1fd0 <col:22> 'int' 0
|   |   |                                                                                                                       | `-CompoundStmt 0x1ff427f2588 <col:25, line:1310:13>
|   |   |                                                                                                                       |   |-IfStmt 0x1ff427f2190 <line:1298:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   |                                                                                                                       |   | |-BinaryOperator 0x1ff427f2090 <.//openssl//file_jk/before\test\ssltest_old.c:1298:21, col:27> 'int' '=='
|   |   |                                                                                                                       |   | | |-ImplicitCastExpr 0x1ff427f2078 <col:21> 'int' <LValueToRValue>
|   |   |                                                                                                                       |   | | | `-DeclRefExpr 0x1ff427f2030 <col:21> 'int' lvalue Var 0x1ff427f7a30 'rv' 'int'
|   |   |                                                                                                                       |   | | `-IntegerLiteral 0x1ff427f2050 <col:27> 'int' 1
|   |   |                                                                                                                       |   | `-BinaryOperator 0x1ff427f2170 <line:1299:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   |                                                                                                                       |   |   |-DeclRefExpr 0x1ff427f20b0 <.//openssl//file_jk/before\test\ssltest_old.c:1299:21> 'char *' lvalue Var 0x1ff427de9b8 'argn' 'char *'
|   |   |                                                                                                                       |   |   `-ImplicitCastExpr 0x1ff427f2158 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |                                                                                                                       |   |     `-ParenExpr 0x1ff427f2138 <col:17, col:27> 'void *'
|   |   |                                                                                                                       |   |       `-CStyleCastExpr 0x1ff427f2110 <col:18, col:26> 'void *' <NullToPointer>
|   |   |                                                                                                                       |   |         `-IntegerLiteral 0x1ff427f20d0 <col:26> 'int' 0
|   |   |                                                                                                                       |   |-IfStmt 0x1ff427f2368 <.//openssl//file_jk/before\test\ssltest_old.c:1300:17, line:1304:17>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x1ff427f2350 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-CompoundStmt 0x1ff427f2338 <line:1300:33, line:1304:17>
|   |   |                                                                                                                       |   |   `-IfStmt 0x1ff427f2320 <line:1302:21, line:1303:30>
|   |   |                                                                                                                       |   |     |-OpaqueValueExpr 0x1ff427f2308 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   |     `-GotoStmt 0x1ff427f22f0 <col:25, col:30> 'end' 0x1ff427dfa10
|   |   |                                                                                                                       |   |-IfStmt 0x1ff427f24e0 <line:1305:17, line:1306:26>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x1ff427f24c8 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-GotoStmt 0x1ff427f24b0 <col:21, col:26> 'end' 0x1ff427dfa10
|   |   |                                                                                                                       |   |-IfStmt 0x1ff427f2568 <line:1307:17, line:1308:26>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x1ff427f2550 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-GotoStmt 0x1ff427f2538 <col:21, col:26> 'end' 0x1ff427dfa10
|   |   |                                                                                                                       |   `-ContinueStmt 0x1ff427f2580 <line:1309:17>
|   |   |                                                                                                                       |-BinaryOperator 0x1ff427f2958 <line:1317:13, col:21> 'int' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x1ff427f28f8 <col:13> 'int' lvalue Var 0x1ff427ec290 'badop' 'int'
|   |   |                                                                                                                       | `-IntegerLiteral 0x1ff427f2930 <col:21> 'int' 1
|   |   |                                                                                                                       `-BreakStmt 0x1ff427f2978 <line:1318:13>
|   |   |-UnaryOperator 0x1ff427f3318 <line:1320:9, col:13> 'int' postfix '--'
|   |   | `-DeclRefExpr 0x1ff427f32f8 <col:9> 'int' lvalue ParmVar 0x1ff427e7cc0 'argc' 'int'
|   |   `-UnaryOperator 0x1ff427f3350 <line:1321:9, col:13> 'char **':'char **' postfix '++'
|   |     `-DeclRefExpr 0x1ff427f3330 <col:9> 'char **':'char **' lvalue ParmVar 0x1ff427e7db0 'argv' 'char **':'char **'
|   |-IfStmt 0x1ff427f3488 <line:1323:5, line:1327:5>
|   | |-ImplicitCastExpr 0x1ff427f33c8 <line:1323:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427f33a8 <col:9> 'int' lvalue Var 0x1ff427ec290 'badop' 'int'
|   | `-CompoundStmt 0x1ff427f3468 <col:16, line:1327:5>
|   |   |-LabelStmt 0x1ff427f3438 <line:1324:2, line:1325:18> 'bad'
|   |   | `-CallExpr 0x1ff427f3418 <col:9, col:18> 'void'
|   |   |   `-ImplicitCastExpr 0x1ff427f3400 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
|   |   |     `-DeclRefExpr 0x1ff427f33e0 <col:9> 'void (void)' Function 0x1ff427e26d0 'sv_usage' 'void (void)'
|   |   `-GotoStmt 0x1ff427f3450 <line:1326:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427f3958 <line:1329:5, line:1333:5>
|   | |-BinaryOperator 0x1ff427f3660 <line:1329:9, col:47> 'int' '>'
|   | | |-BinaryOperator 0x1ff427f3618 <col:9, col:38> 'int' '+'
|   | | | |-BinaryOperator 0x1ff427f35c0 <col:9, col:30> 'int' '+'
|   | | | | |-BinaryOperator 0x1ff427f3568 <col:9, col:23> 'int' '+'
|   | | | | | |-BinaryOperator 0x1ff427f3510 <col:9, col:16> 'int' '+'
|   | | | | | | |-ImplicitCastExpr 0x1ff427f34e0 <col:9> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x1ff427f34a0 <col:9> 'int' lvalue Var 0x1ff427eca10 'ssl3' 'int'
|   | | | | | | `-ImplicitCastExpr 0x1ff427f34f8 <col:16> 'int' <LValueToRValue>
|   | | | | | |   `-DeclRefExpr 0x1ff427f34c0 <col:16> 'int' lvalue Var 0x1ff427ec968 'tls1' 'int'
|   | | | | | `-ImplicitCastExpr 0x1ff427f3550 <col:23> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x1ff427f3530 <col:23> 'int' lvalue Var 0x1ff427ec8c0 'dtls' 'int'
|   | | | | `-ImplicitCastExpr 0x1ff427f35a8 <col:30> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1ff427f3588 <col:30> 'int' lvalue Var 0x1ff427ec770 'dtls1' 'int'
|   | | | `-ImplicitCastExpr 0x1ff427f3600 <col:38> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427f35e0 <col:38> 'int' lvalue Var 0x1ff427ec818 'dtls12' 'int'
|   | | `-IntegerLiteral 0x1ff427f3638 <col:47> 'int' 1
|   | `-CompoundStmt 0x1ff427f3938 <col:50, line:1333:5>
|   |   |-CallExpr 0x1ff427f3850 <line:1330:9, line:1331:34> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427f3838 <line:1330:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427f3680 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff427f3758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff427f3740 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff427f3720 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff427f36d8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff427f36c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff427f36a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff427f36f8 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff427f3898 <.//openssl//file_jk/before\test\ssltest_old.c:1330:25, line:1331:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff427f3880 <line:1330:25, line:1331:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff427f37b8 <line:1330:25, line:1331:17> 'char [76]' lvalue "At most one of -ssl3, -tls1, -dtls, -dtls1 or -dtls12 should be requested.\n"
|   |   `-CallExpr 0x1ff427f3910 <line:1332:9, col:15> 'int'
|   |     |-ImplicitCastExpr 0x1ff427f38f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427f38b0 <col:9> 'int ()' Function 0x1ff427f0478 'EXIT' 'int ()'
|   |     `-IntegerLiteral 0x1ff427f38d0 <col:14> 'int' 1
|   |-BinaryOperator 0x1ff427f39d0 <line:1355:9, col:23> 'int' '='
|   | |-DeclRefExpr 0x1ff427f3970 <col:9> 'int' lvalue Var 0x1ff427de380 'no_protocol' 'int'
|   | `-IntegerLiteral 0x1ff427f39a8 <col:23> 'int' 0
|   |-IfStmt 0x1ff427f3cd0 <line:1362:5, line:1367:5>
|   | |-ImplicitCastExpr 0x1ff427f3a10 <line:1362:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427f39f0 <col:9> 'int' lvalue Var 0x1ff427de380 'no_protocol' 'int'
|   | `-CompoundStmt 0x1ff427f3ca8 <col:22, line:1367:5>
|   |   |-CallExpr 0x1ff427f3bb0 <line:1363:9, line:1364:36> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427f3b98 <line:1363:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427f3a28 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff427f3b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff427f3ae8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff427f3ac8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff427f3a80 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff427f3a68 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff427f3a48 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff427f3aa0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff427f3bf8 <.//openssl//file_jk/before\test\ssltest_old.c:1363:25, line:1364:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff427f3be0 <line:1363:25, line:1364:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff427f3b20 <line:1363:25, line:1364:17> 'char [64]' lvalue "Testing was requested for a disabled protocol. Skipping tests.\n"
|   |   |-BinaryOperator 0x1ff427f3c70 <line:1365:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff427f3c10 <col:9> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff427f3c48 <col:15> 'int' 0
|   |   `-GotoStmt 0x1ff427f3c90 <line:1366:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427f83f8 <line:1369:5, line:1375:5>
|   | |-BinaryOperator 0x1ff427f8090 <line:1369:9, col:82> 'int' '&&'
|   | | |-BinaryOperator 0x1ff427f8020 <col:9, col:72> 'int' '&&'
|   | | | |-BinaryOperator 0x1ff427f7fb0 <col:9, col:66> 'int' '&&'
|   | | | | |-BinaryOperator 0x1ff427f3ed8 <col:9, col:47> 'int' '&&'
|   | | | | | |-BinaryOperator 0x1ff427f3e68 <col:9, col:37> 'int' '&&'
|   | | | | | | |-BinaryOperator 0x1ff427f3df8 <col:9, col:28> 'int' '&&'
|   | | | | | | | |-BinaryOperator 0x1ff427f3d88 <col:9, col:19> 'int' '&&'
|   | | | | | | | | |-UnaryOperator 0x1ff427f3d20 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | | | | | | `-ImplicitCastExpr 0x1ff427f3d08 <col:10> 'int' <LValueToRValue>
|   | | | | | | | | |   `-DeclRefExpr 0x1ff427f3ce8 <col:10> 'int' lvalue Var 0x1ff427eca10 'ssl3' 'int'
|   | | | | | | | | `-UnaryOperator 0x1ff427f3d70 <col:18, col:19> 'int' prefix '!' cannot overflow
|   | | | | | | | |   `-ImplicitCastExpr 0x1ff427f3d58 <col:19> 'int' <LValueToRValue>
|   | | | | | | | |     `-DeclRefExpr 0x1ff427f3d38 <col:19> 'int' lvalue Var 0x1ff427ec968 'tls1' 'int'
|   | | | | | | | `-UnaryOperator 0x1ff427f3de0 <col:27, col:28> 'int' prefix '!' cannot overflow
|   | | | | | | |   `-ImplicitCastExpr 0x1ff427f3dc8 <col:28> 'int' <LValueToRValue>
|   | | | | | | |     `-DeclRefExpr 0x1ff427f3da8 <col:28> 'int' lvalue Var 0x1ff427ec8c0 'dtls' 'int'
|   | | | | | | `-UnaryOperator 0x1ff427f3e50 <col:36, col:37> 'int' prefix '!' cannot overflow
|   | | | | | |   `-ImplicitCastExpr 0x1ff427f3e38 <col:37> 'int' <LValueToRValue>
|   | | | | | |     `-DeclRefExpr 0x1ff427f3e18 <col:37> 'int' lvalue Var 0x1ff427ec770 'dtls1' 'int'
|   | | | | | `-UnaryOperator 0x1ff427f3ec0 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | | | |   `-ImplicitCastExpr 0x1ff427f3ea8 <col:47> 'int' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1ff427f3e88 <col:47> 'int' lvalue Var 0x1ff427ec818 'dtls12' 'int'
|   | | | | `-BinaryOperator 0x1ff427f7f90 <col:57, col:66> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x1ff427f7f78 <col:57> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1ff427f7f30 <col:57> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   | | | |   `-IntegerLiteral 0x1ff427f7f50 <col:66> 'int' 1
|   | | | `-UnaryOperator 0x1ff427f8008 <col:71, col:72> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x1ff427f7ff0 <col:72> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1ff427f7fd0 <col:72> 'int' lvalue Var 0x1ff427ed2a0 'reuse' 'int'
|   | | `-UnaryOperator 0x1ff427f8078 <col:81, col:82> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1ff427f8060 <col:82> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1ff427f8040 <col:82> 'int' lvalue Var 0x1ff427ec6b0 'force' 'int'
|   | `-CompoundStmt 0x1ff427f83d8 <col:89, line:1375:5>
|   |   |-CallExpr 0x1ff427f82f0 <line:1370:9, line:1373:48> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427f82d8 <line:1370:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427f80b0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff427f8188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff427f8170 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff427f8150 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff427f8108 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff427f80f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff427f80d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff427f8128 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff427f8338 <.//openssl//file_jk/before\test\ssltest_old.c:1370:25, line:1373:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff427f8320 <line:1370:25, line:1373:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff427f81e8 <line:1370:25, line:1373:17> 'char [176]' lvalue "This case cannot work.  Use -f to perform the test anyway (and\n-d to see what happens), or add one of -ssl3, -tls1, -dtls, -dtls1, -dtls12, -reuse\nto avoid protocol mismatch.\n"
|   |   `-CallExpr 0x1ff427f83b0 <line:1374:9, col:15> 'int'
|   |     |-ImplicitCastExpr 0x1ff427f8398 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427f8350 <col:9> 'int ()' Function 0x1ff427f0478 'EXIT' 'int ()'
|   |     `-IntegerLiteral 0x1ff427f8370 <col:14> 'int' 1
|   |-IfStmt 0x1ff427f8a90 <line:1386:5, line:1394:5>
|   | |-ImplicitCastExpr 0x1ff427f8430 <line:1386:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427f8410 <col:9> 'int' lvalue Var 0x1ff427eddd0 'print_time' 'int'
|   | `-CompoundStmt 0x1ff427f8a70 <col:21, line:1394:5>
|   |   |-IfStmt 0x1ff427f8730 <line:1387:9, line:1390:9>
|   |   | |-BinaryOperator 0x1ff427f84b8 <line:1387:13, col:25> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff427f84a0 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1ff427f8488 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1ff427f8448 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   | | `-DeclRefExpr 0x1ff427f8468 <col:25> 'int' EnumConstant 0x1ff427ec468 'BIO_PAIR' 'int'
|   |   | `-CompoundStmt 0x1ff427f8710 <col:35, line:1390:9>
|   |   |   |-CallExpr 0x1ff427f8638 <line:1388:13, col:59> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff427f8620 <col:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff427f84d8 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |   | |-ParenExpr 0x1ff427f85b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |   | | `-UnaryOperator 0x1ff427f8598 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   | |   `-ArraySubscriptExpr 0x1ff427f8578 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |   | |     |-CallExpr 0x1ff427f8530 <col:18, col:29> 'FILE *'
|   |   |   | |     | `-ImplicitCastExpr 0x1ff427f8518 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |   | |     |   `-DeclRefExpr 0x1ff427f84f8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |   | |     `-IntegerLiteral 0x1ff427f8550 <col:31> 'int' 2
|   |   |   | `-ImplicitCastExpr 0x1ff427f8680 <.//openssl//file_jk/before\test\ssltest_old.c:1388:29> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1ff427f8668 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1ff427f85d0 <col:29> 'char [28]' lvalue "Using BIO pair (-bio_pair)\n"
|   |   |   `-BinaryOperator 0x1ff427f86f0 <line:1389:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' '='
|   |   |     |-DeclRefExpr 0x1ff427f8698 <col:13> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   |     `-ImplicitCastExpr 0x1ff427f86d8 <col:24> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |       `-DeclRefExpr 0x1ff427f86b8 <col:24> 'int' EnumConstant 0x1ff427ec468 'BIO_PAIR' 'int'
|   |   `-IfStmt 0x1ff427f8a58 <line:1391:9, line:1393:93>
|   |     |-BinaryOperator 0x1ff427f8818 <line:1391:13, col:29> 'int' '&&'
|   |     | |-BinaryOperator 0x1ff427f87a8 <col:13, col:22> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x1ff427f8790 <col:13> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1ff427f8748 <col:13> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   |     | | `-IntegerLiteral 0x1ff427f8768 <col:22> 'int' 50
|   |     | `-UnaryOperator 0x1ff427f8800 <col:28, col:29> 'int' prefix '!' cannot overflow
|   |     |   `-ImplicitCastExpr 0x1ff427f87e8 <col:29> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1ff427f87c8 <col:29> 'int' lvalue Var 0x1ff427ec6b0 'force' 'int'
|   |     `-CallExpr 0x1ff427f89f8 <line:1392:13, line:1393:93> 'int'
|   |       |-ImplicitCastExpr 0x1ff427f89e0 <line:1392:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1ff427f8838 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |       |-ParenExpr 0x1ff427f8910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       | `-UnaryOperator 0x1ff427f88f8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       |   `-ArraySubscriptExpr 0x1ff427f88d8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       |     |-CallExpr 0x1ff427f8890 <col:18, col:29> 'FILE *'
|   |       |     | `-ImplicitCastExpr 0x1ff427f8878 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     |   `-DeclRefExpr 0x1ff427f8858 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       |     `-IntegerLiteral 0x1ff427f88b0 <col:31> 'int' 2
|   |       `-ImplicitCastExpr 0x1ff427f8a40 <.//openssl//file_jk/before\test\ssltest_old.c:1393:21> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x1ff427f8a28 <col:21> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x1ff427f8968 <col:21> 'char [70]' lvalue "Warning: For accurate timings, use more connections (e.g. -num 1000)\n"
|   |-IfStmt 0x1ff427f9930 <line:1401:5, line:1413:5>
|   | |-OpaqueValueExpr 0x1ff427f9918 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427f9900 <line:1401:21, line:1413:5>
|   |   `-IfStmt 0x1ff427f98d8 <line:1402:9, line:1412:9> has_else
|   |     |-OpaqueValueExpr 0x1ff427f98c0 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1ff427f93a0 <line:1402:45, line:1407:9>
|   |     | `-IfStmt 0x1ff427f9388 <line:1403:13, line:1406:13>
|   |     |   |-OpaqueValueExpr 0x1ff427f9370 <<invalid sloc>> '_Bool'
|   |     |   `-CompoundStmt 0x1ff427f9350 <line:1403:65, line:1406:13>
|   |     |     |-CallExpr 0x1ff427f90c8 <line:1404:17, col:69> 'int'
|   |     |     | |-ImplicitCastExpr 0x1ff427f90b0 <col:17> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x1ff427f8f60 <col:17> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |     |     | |-ParenExpr 0x1ff427f9038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     |     | | `-UnaryOperator 0x1ff427f9020 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     |     | |   `-ArraySubscriptExpr 0x1ff427f9000 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     |     | |     |-CallExpr 0x1ff427f8fb8 <col:18, col:29> 'FILE *'
|   |     |     | |     | `-ImplicitCastExpr 0x1ff427f8fa0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     |     | |     |   `-DeclRefExpr 0x1ff427f8f80 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     |     | |     `-IntegerLiteral 0x1ff427f8fd8 <col:31> 'int' 2
|   |     |     | `-ImplicitCastExpr 0x1ff427f9110 <.//openssl//file_jk/before\test\ssltest_old.c:1404:33> 'const char *' <NoOp>
|   |     |     |   `-ImplicitCastExpr 0x1ff427f90f8 <col:33> 'char *' <ArrayToPointerDecay>
|   |     |     |     `-StringLiteral 0x1ff427f9058 <col:33> 'char [34]' lvalue "Failed to add compression method\n"
|   |     |     `-CallExpr 0x1ff427f9328 <line:1405:17, col:43> 'int'
|   |     |       |-ImplicitCastExpr 0x1ff427f9310 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x1ff427f9218 <col:17> 'int ()' Function 0x1ff427f9150 'ERR_print_errors_fp' 'int ()'
|   |     |       `-ParenExpr 0x1ff427f92f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     |         `-UnaryOperator 0x1ff427f92d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     |           `-ArraySubscriptExpr 0x1ff427f92b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     |             |-CallExpr 0x1ff427f9270 <col:18, col:29> 'FILE *'
|   |     |             | `-ImplicitCastExpr 0x1ff427f9258 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     |             |   `-DeclRefExpr 0x1ff427f9238 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     |             `-IntegerLiteral 0x1ff427f9290 <col:31> 'int' 2
|   |     `-CompoundStmt 0x1ff427f98a0 <.//openssl//file_jk/before\test\ssltest_old.c:1407:16, line:1412:9>
|   |       |-CallExpr 0x1ff427f9700 <line:1408:13, line:1410:59> 'int'
|   |       | |-ImplicitCastExpr 0x1ff427f96e8 <line:1408:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1ff427f93b8 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |       | |-ParenExpr 0x1ff427f9490 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       | | `-UnaryOperator 0x1ff427f9478 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       | |   `-ArraySubscriptExpr 0x1ff427f9458 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       | |     |-CallExpr 0x1ff427f9410 <col:18, col:29> 'FILE *'
|   |       | |     | `-ImplicitCastExpr 0x1ff427f93f8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       | |     |   `-DeclRefExpr 0x1ff427f93d8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       | |     `-IntegerLiteral 0x1ff427f9430 <col:31> 'int' 2
|   |       | |-ImplicitCastExpr 0x1ff427f9750 <.//openssl//file_jk/before\test\ssltest_old.c:1409:21> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x1ff427f9738 <col:21> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x1ff427f94b0 <col:21> 'char [39]' lvalue "Warning: %s compression not supported\n"
|   |       | `-ConditionalOperator 0x1ff427f96a0 <line:1410:21, col:50> 'char *'
|   |       |   |-BinaryOperator 0x1ff427f9550 <col:21, line:116:25> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x1ff427f9538 <line:1410:21> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x1ff427f94f0 <col:21> 'int' lvalue Var 0x1ff427de088 'comp' 'int'
|   |       |   | `-IntegerLiteral 0x1ff427f9510 <line:116:25> 'int' 1
|   |       |   |-ImplicitCastExpr 0x1ff427f95b0 <line:1410:41> 'char *' <ArrayToPointerDecay>
|   |       |   | `-StringLiteral 0x1ff427f9570 <col:41> 'char [5]' lvalue "zlib"
|   |       |   `-ImplicitCastExpr 0x1ff427f95c8 <col:50> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x1ff427f9590 <col:50> 'char [8]' lvalue "unknown"
|   |       `-CallExpr 0x1ff427f9878 <line:1411:13, col:39> 'int'
|   |         |-ImplicitCastExpr 0x1ff427f9860 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x1ff427f9768 <col:13> 'int ()' Function 0x1ff427f9150 'ERR_print_errors_fp' 'int ()'
|   |         `-ParenExpr 0x1ff427f9840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |           `-UnaryOperator 0x1ff427f9828 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |             `-ArraySubscriptExpr 0x1ff427f9808 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |               |-CallExpr 0x1ff427f97c0 <col:18, col:29> 'FILE *'
|   |               | `-ImplicitCastExpr 0x1ff427f97a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |               |   `-DeclRefExpr 0x1ff427f9788 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |               `-IntegerLiteral 0x1ff427f97e0 <col:31> 'int' 2
|   |-IfStmt 0x1ff427fc3f8 <.//openssl//file_jk/before\test\ssltest_old.c:1416:5, line:1424:5>
|   | |-ImplicitCastExpr 0x1ff427f9bf8 <line:1416:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427f9bd8 <col:9> 'int' lvalue Var 0x1ff427de008 'n' 'int'
|   | `-CompoundStmt 0x1ff427fc3c8 <col:12, line:1424:5>
|   |   |-DeclStmt 0x1ff427f9c90 <line:1417:9, col:14>
|   |   | `-VarDecl 0x1ff427f9c28 <col:9, col:13> col:13 used j 'int'
|   |   |-CallExpr 0x1ff427f9d60 <line:1418:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427f9d48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427f9ca8 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1ff427f9da0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff427f9d88 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff427f9cc8 <col:16> 'char [31]' lvalue "Available compression methods:"
|   |   |-ForStmt 0x1ff427fc2c8 <line:1419:9, line:1422:9>
|   |   | |-BinaryOperator 0x1ff427f9e18 <line:1419:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1ff427f9db8 <col:14> 'int' lvalue Var 0x1ff427f9c28 'j' 'int'
|   |   | | `-IntegerLiteral 0x1ff427f9df0 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1ff427f9ea8 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1ff427f9e78 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff427f9e38 <col:21> 'int' lvalue Var 0x1ff427f9c28 'j' 'int'
|   |   | | `-ImplicitCastExpr 0x1ff427f9e90 <col:25> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff427f9e58 <col:25> 'int' lvalue Var 0x1ff427de008 'n' 'int'
|   |   | |-UnaryOperator 0x1ff427f9ee8 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1ff427f9ec8 <col:28> 'int' lvalue Var 0x1ff427f9c28 'j' 'int'
|   |   | `-CompoundStmt 0x1ff427fc2b8 <col:33, line:1422:9>
|   |   `-CallExpr 0x1ff427fc370 <line:1423:9, col:20> 'int'
|   |     |-ImplicitCastExpr 0x1ff427fc358 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427fc300 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x1ff427fc3b0 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1ff427fc398 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1ff427fc320 <col:16> 'char [2]' lvalue "\n"
|   |-IfStmt 0x1ff427fc6f8 <line:1429:5, line:1438:5> has_else
|   | |-ImplicitCastExpr 0x1ff427fc578 <line:1429:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427fc558 <col:9> 'int' lvalue Var 0x1ff427eca10 'ssl3' 'int'
|   | |-CompoundStmt 0x1ff427fc5e8 <col:15, line:1432:5>
|   | `-IfStmt 0x1ff427fc6d0 <col:12, line:1438:5> has_else
|   |   |-ImplicitCastExpr 0x1ff427fc618 <line:1432:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff427fc5f8 <col:16> 'int' lvalue Var 0x1ff427ec968 'tls1' 'int'
|   |   |-CompoundStmt 0x1ff427fc670 <col:22, line:1435:5>
|   |   `-CompoundStmt 0x1ff427fc6c0 <col:12, line:1438:5>
|   |-IfStmt 0x1ff427fcb18 <line:1441:5, line:1453:5>
|   | |-BinaryOperator 0x1ff427fc7e8 <line:1441:9, col:26> 'int' '||'
|   | | |-BinaryOperator 0x1ff427fc790 <col:9, col:17> 'int' '||'
|   | | | |-ImplicitCastExpr 0x1ff427fc760 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff427fc720 <col:9> 'int' lvalue Var 0x1ff427ec8c0 'dtls' 'int'
|   | | | `-ImplicitCastExpr 0x1ff427fc778 <col:17> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1ff427fc740 <col:17> 'int' lvalue Var 0x1ff427ec770 'dtls1' 'int'
|   | | `-ImplicitCastExpr 0x1ff427fc7d0 <col:26> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427fc7b0 <col:26> 'int' lvalue Var 0x1ff427ec818 'dtls12' 'int'
|   | `-CompoundStmt 0x1ff427fcb00 <col:34, line:1453:5>
|   |   `-IfStmt 0x1ff427fcad8 <line:1443:9, line:1452:9> has_else
|   |     |-ImplicitCastExpr 0x1ff427fc970 <line:1443:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff427fc950 <col:13> 'int' lvalue Var 0x1ff427ec770 'dtls1' 'int'
|   |     |-CompoundStmt 0x1ff427fc9c8 <col:20, line:1446:9>
|   |     `-IfStmt 0x1ff427fcab0 <col:16, line:1452:9> has_else
|   |       |-ImplicitCastExpr 0x1ff427fc9f8 <line:1446:20> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1ff427fc9d8 <col:20> 'int' lvalue Var 0x1ff427ec818 'dtls12' 'int'
|   |       |-CompoundStmt 0x1ff427fca50 <col:28, line:1449:9>
|   |       `-CompoundStmt 0x1ff427fcaa0 <col:16, line:1452:9>
|   |-IfStmt 0x1ff427fce80 <line:1459:5, line:1462:5>
|   | |-OpaqueValueExpr 0x1ff427fce68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fce50 <line:1459:65, line:1462:5>
|   |   `-GotoStmt 0x1ff427fce38 <line:1461:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fd1d8 <line:1472:5, line:1475:5>
|   | |-ImplicitCastExpr 0x1ff427fd080 <line:1472:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427fd060 <col:9> 'int' lvalue Var 0x1ff427ed450 'no_ticket' 'int'
|   | `-CompoundStmt 0x1ff427fd1c8 <col:20, line:1475:5>
|   |-IfStmt 0x1ff427fd4d0 <line:1477:5, line:1481:5>
|   | |-OpaqueValueExpr 0x1ff427fd4b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fd498 <line:1477:65, line:1481:5>
|   |   |-CallExpr 0x1ff427fd408 <line:1478:9, line:1479:27> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427fd3f0 <line:1478:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427fd348 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1ff427fd450 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff427fd438 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff427fd368 <col:16> 'char [50]' lvalue "Unable to set client min protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x1ff427fd468 <line:1479:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff427fd3b8 <col:16> 'int' lvalue Var 0x1ff427de418 'min_version' 'int'
|   |   `-GotoStmt 0x1ff427fd480 <line:1480:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fd7c8 <line:1482:5, line:1486:5>
|   | |-OpaqueValueExpr 0x1ff427fd7b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fd790 <line:1482:65, line:1486:5>
|   |   |-CallExpr 0x1ff427fd700 <line:1483:9, line:1484:27> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427fd6e8 <line:1483:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427fd640 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1ff427fd748 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff427fd730 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff427fd660 <col:16> 'char [50]' lvalue "Unable to set client max protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x1ff427fd760 <line:1484:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff427fd6b0 <col:16> 'int' lvalue Var 0x1ff427de4c0 'max_version' 'int'
|   |   `-GotoStmt 0x1ff427fd778 <line:1485:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fd9d0 <line:1487:5, line:1491:5>
|   | |-OpaqueValueExpr 0x1ff427fd9b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fd998 <line:1487:65, line:1491:5>
|   |   |-CallExpr 0x1ff427fd908 <line:1488:9, line:1489:27> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427fd8f0 <line:1488:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427fd848 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1ff427fd950 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff427fd938 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff427fd868 <col:16> 'char [50]' lvalue "Unable to set server min protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x1ff427fd968 <line:1489:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff427fd8b8 <col:16> 'int' lvalue Var 0x1ff427de418 'min_version' 'int'
|   |   `-GotoStmt 0x1ff427fd980 <line:1490:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fdbd8 <line:1492:5, line:1496:5>
|   | |-OpaqueValueExpr 0x1ff427fdbc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fdba0 <line:1492:65, line:1496:5>
|   |   |-CallExpr 0x1ff427fdb10 <line:1493:9, line:1494:27> 'int'
|   |   | |-ImplicitCastExpr 0x1ff427fdaf8 <line:1493:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff427fda50 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1ff427fdb58 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff427fdb40 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff427fda70 <col:16> 'char [50]' lvalue "Unable to set server max protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x1ff427fdb70 <line:1494:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff427fdac0 <col:16> 'int' lvalue Var 0x1ff427de4c0 'max_version' 'int'
|   |   `-GotoStmt 0x1ff427fdb88 <line:1495:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fdf30 <line:1498:5, line:1505:5>
|   | |-BinaryOperator 0x1ff427fdcc8 <line:1498:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff427fdc98 <.//openssl//file_jk/before\test\ssltest_old.c:1498:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff427fdbf0 <col:9> 'char *' lvalue Var 0x1ff427d3588 'cipher' 'char *'
|   | | `-ImplicitCastExpr 0x1ff427fdcb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff427fdc78 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff427fdc50 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff427fdc10 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff427fdf18 <.//openssl//file_jk/before\test\ssltest_old.c:1498:25, line:1505:5>
|   |   `-IfStmt 0x1ff427fdf00 <line:1499:9, line:1504:9>
|   |     |-OpaqueValueExpr 0x1ff427fdee8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff427fded0 <line:1501:58, line:1504:9>
|   |       `-GotoStmt 0x1ff427fdeb8 <line:1503:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fe0f8 <line:1508:5, line:1512:5>
|   | |-OpaqueValueExpr 0x1ff427fe0e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fe0c8 <line:1509:62, line:1512:5>
|   |   `-GotoStmt 0x1ff427fe0b0 <line:1511:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427fef70 <line:1539:5, line:1543:5>
|   | |-OpaqueValueExpr 0x1ff427fef58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427fef40 <line:1539:104, line:1543:5>
|   |   `-GotoStmt 0x1ff427fef28 <line:1542:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff427ff2e0 <line:1545:5, line:1555:5>
|   | |-UnaryOperator 0x1ff427fefc0 <line:1545:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff427fefa8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff427fef88 <col:10> 'int' lvalue Var 0x1ff427edc50 'no_dhe' 'int'
|   | `-CompoundStmt 0x1ff427ff2c8 <col:18, line:1555:5>
|   |   `-IfStmt 0x1ff427ff060 <line:1546:9, line:1548:16> has_else
|   |     |-ImplicitCastExpr 0x1ff427feff8 <line:1546:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff427fefd8 <col:13> 'int' lvalue Var 0x1ff427ed678 'dhe1024dsa' 'int'
|   |     |-CompoundStmt 0x1ff427ff010 <col:25, line:1548:9>
|   |     `-NullStmt 0x1ff427ff058 <col:16>
|   |-IfStmt 0x1ff427ff6a0 <line:1560:5, line:1569:5>
|   | |-OpaqueValueExpr 0x1ff427ff688 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427ff678 <line:1565:53, line:1569:5>
|   |-IfStmt 0x1ff427ff850 <line:1572:5, line:1576:5>
|   | |-OpaqueValueExpr 0x1ff427ff838 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff427ff828 <line:1574:54, line:1576:5>
|   |-IfStmt 0x1ff427ffcc0 <line:1579:5, line:1591:5>
|   | |-ImplicitCastExpr 0x1ff427ff888 <line:1579:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427ff868 <col:9> 'int' lvalue Var 0x1ff427ecbb0 'client_auth' 'int'
|   | `-CompoundStmt 0x1ff427ffca8 <col:22, line:1591:5>
|   |   `-CallExpr 0x1ff427ff920 <line:1580:9, col:41> 'int'
|   |     |-ImplicitCastExpr 0x1ff427ff908 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427ff8a0 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x1ff427ff960 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1ff427ff948 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1ff427ff8c0 <col:16> 'char [23]' lvalue "client authentication\n"
|   |-IfStmt 0x1ff427ffe78 <line:1592:5, line:1597:5>
|   | |-ImplicitCastExpr 0x1ff427ffcf8 <line:1592:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff427ffcd8 <col:9> 'int' lvalue Var 0x1ff427ecc70 'server_auth' 'int'
|   | `-CompoundStmt 0x1ff427ffe60 <col:22, line:1597:5>
|   |   `-CallExpr 0x1ff427ffd90 <line:1593:9, col:41> 'int'
|   |     |-ImplicitCastExpr 0x1ff427ffd78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff427ffd10 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x1ff427ffdd0 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1ff427ffdb8 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1ff427ffd30 <col:16> 'char [23]' lvalue "server authentication\n"
|   |-CompoundStmt 0x1ff428022f8 <line:1599:5, line:1608:5>
|   | |-DeclStmt 0x1ff427fff38 <line:1600:9, col:35>
|   | | `-VarDecl 0x1ff427ffea8 <col:9, col:34> col:13 used session_id_context 'int' cinit
|   | |   `-IntegerLiteral 0x1ff427fff10 <col:34> 'int' 0
|   | `-IfStmt 0x1ff428022e0 <line:1601:9, line:1607:9>
|   |   |-OpaqueValueExpr 0x1ff428022c8 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x1ff428022b0 <line:1604:74, line:1607:9>
|   |     `-GotoStmt 0x1ff42802298 <line:1606:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42802ac0 <line:1611:5, line:1636:5>
|   | |-BinaryOperator 0x1ff428023f0 <line:1611:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff428023c0 <.//openssl//file_jk/before\test\ssltest_old.c:1611:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff42802318 <col:9> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
|   | | `-ImplicitCastExpr 0x1ff428023d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff428023a0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42802378 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42802338 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff42802aa0 <.//openssl//file_jk/before\test\ssltest_old.c:1611:26, line:1636:5>
|   |   |-IfStmt 0x1ff42802500 <line:1615:9, line:1622:9>
|   |   | |-ImplicitCastExpr 0x1ff42802448 <line:1615:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ff42802410 <col:13> 'int' lvalue Var 0x1ff427edd10 'no_psk' 'int'
|   |   | `-CompoundStmt 0x1ff428024e0 <col:21, line:1622:9>
|   |   |   |-BinaryOperator 0x1ff428024a8 <line:1620:13, col:19> 'int' '='
|   |   |   | |-DeclRefExpr 0x1ff42802460 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x1ff42802480 <col:19> 'int' 0
|   |   |   `-GotoStmt 0x1ff428024c8 <line:1621:13, col:18> 'end' 0x1ff427dfa10
|   |   `-IfStmt 0x1ff42802a88 <line:1629:9, line:1634:9>
|   |     |-OpaqueValueExpr 0x1ff42802a70 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42802a58 <line:1630:81, line:1634:9>
|   |       `-GotoStmt 0x1ff42802a40 <line:1633:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42802fc8 <line:1638:5, line:1649:5>
|   | |-ImplicitCastExpr 0x1ff42802b28 <line:1638:9, col:24> 'char *' <LValueToRValue>
|   | | `-MemberExpr 0x1ff42802af8 <col:9, col:24> 'char *' lvalue .srplogin 0x1ff428bef08
|   | |   `-DeclRefExpr 0x1ff42802ad8 <col:9> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x1ff427ed748 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   | `-CompoundStmt 0x1ff42802fb0 <col:34, line:1649:5>
|   |   `-IfStmt 0x1ff42802d40 <line:1639:9, line:1642:9>
|   |     |-OpaqueValueExpr 0x1ff42802d28 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42802d10 <line:1639:72, line:1642:9>
|   |       `-GotoStmt 0x1ff42802cf8 <line:1641:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42803390 <line:1651:5, line:1658:5>
|   | |-BinaryOperator 0x1ff428030e8 <line:1651:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff428030b8 <.//openssl//file_jk/before\test\ssltest_old.c:1651:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1ff42803000 <col:9, col:24> 'char *' lvalue .expected_user 0x1ff427c5fc8
|   | | |   `-DeclRefExpr 0x1ff42802fe0 <col:9> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x1ff427ed9c8 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   | | `-ImplicitCastExpr 0x1ff428030d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff42803098 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42803070 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42803030 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff42803380 <.//openssl//file_jk/before\test\ssltest_old.c:1651:47, line:1658:5>
|   |-IfStmt 0x1ff42803588 <line:1662:5, line:1664:5>
|   | |-ImplicitCastExpr 0x1ff428033c8 <line:1662:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff428033a8 <col:9> 'int' lvalue Var 0x1ff427c70b0 'npn_client' 'int'
|   | `-CompoundStmt 0x1ff42803578 <col:21, line:1664:5>
|   |-IfStmt 0x1ff42803920 <line:1665:5, line:1673:5>
|   | |-ImplicitCastExpr 0x1ff428035c0 <line:1665:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff428035a0 <col:9> 'int' lvalue Var 0x1ff427c7170 'npn_server' 'int'
|   | `-CompoundStmt 0x1ff42803908 <col:21, line:1673:5>
|   |   `-IfStmt 0x1ff428036b0 <line:1666:9, line:1670:9>
|   |     |-ImplicitCastExpr 0x1ff428035f8 <line:1666:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff428035d8 <col:13> 'int' lvalue Var 0x1ff427c7230 'npn_server_reject' 'int'
|   |     `-CompoundStmt 0x1ff42803698 <col:32, line:1670:9>
|   |       `-GotoStmt 0x1ff42803680 <line:1669:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42803ad0 <line:1674:5, line:1679:5>
|   | |-ImplicitCastExpr 0x1ff42803958 <line:1674:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff42803938 <col:9> 'int' lvalue Var 0x1ff427c7230 'npn_server_reject' 'int'
|   | `-CompoundStmt 0x1ff42803ac0 <col:28, line:1679:5>
|   |-IfStmt 0x1ff42803f20 <line:1682:5, line:1690:5>
|   | |-ImplicitCastExpr 0x1ff42803b08 <line:1682:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff42803ae8 <col:9> 'int' lvalue Var 0x1ff427ced18 'serverinfo_sct' 'int'
|   | `-CompoundStmt 0x1ff42803f08 <col:25, line:1690:5>
|   |   `-IfStmt 0x1ff42803ef0 <line:1683:9, line:1689:9>
|   |     |-OpaqueValueExpr 0x1ff42803ed8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42803ec0 <line:1686:49, line:1689:9>
|   |       `-GotoStmt 0x1ff42803ea8 <line:1688:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff428042c8 <line:1691:5, line:1698:5>
|   | |-ImplicitCastExpr 0x1ff42803f58 <line:1691:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff42803f38 <col:9> 'int' lvalue Var 0x1ff427cedd8 'serverinfo_tack' 'int'
|   | `-CompoundStmt 0x1ff428042b0 <col:26, line:1698:5>
|   |   `-IfStmt 0x1ff42804298 <line:1692:9, line:1697:9>
|   |     |-OpaqueValueExpr 0x1ff42804280 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42804268 <line:1694:71, line:1697:9>
|   |       `-GotoStmt 0x1ff42804250 <line:1696:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42804538 <line:1699:5, line:1704:9>
|   | |-ImplicitCastExpr 0x1ff42804300 <line:1699:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff428042e0 <col:9> 'char *' lvalue Var 0x1ff427cebe0 'serverinfo_file' 'char *'
|   | `-IfStmt 0x1ff42804520 <line:1700:9, line:1704:9>
|   |   |-OpaqueValueExpr 0x1ff42804508 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x1ff428044f0 <line:1701:68, line:1704:9>
|   |     `-GotoStmt 0x1ff428044d8 <line:1703:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff42805dc8 <line:1706:5, line:1758:5>
|   | |-ImplicitCastExpr 0x1ff42804570 <line:1706:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff42804550 <col:9> 'int' lvalue Var 0x1ff427cf0d8 'custom_ext' 'int'
|   | `-CompoundStmt 0x1ff42805db0 <col:21, line:1758:5>
|   |   `-IfStmt 0x1ff42805d98 <line:1707:9, line:1757:9>
|   |     |-OpaqueValueExpr 0x1ff42805d80 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42805d68 <line:1754:73, line:1757:9>
|   |       `-GotoStmt 0x1ff42805d50 <line:1756:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280b778 <line:1765:5, line:1780:5>
|   | |-ImplicitCastExpr 0x1ff4280afb0 <line:1765:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff4280af90 <col:9> 'const char *' lvalue Var 0x1ff427c9e50 'alpn_client' 'const char *'
|   | `-CompoundStmt 0x1ff4280b740 <col:22, line:1780:5>
|   |   |-DeclStmt 0x1ff4280b040 <line:1766:9, col:24>
|   |   | `-VarDecl 0x1ff4280afd8 <col:9, col:16> col:16 used alpn_len 'size_t':'unsigned long long'
|   |   |-DeclStmt 0x1ff4280b1c8 <line:1767:9, col:72>
|   |   | `-VarDecl 0x1ff4280b070 <col:9, col:71> col:24 used alpn 'unsigned char *' cinit
|   |   |   `-CallExpr 0x1ff4280b180 <col:31, col:71> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x1ff4280b168 <col:31> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1ff4280b0d8 <col:31> 'unsigned char *(size_t *, const char *)' Function 0x1ff427dc1d0 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   |   |     |-UnaryOperator 0x1ff4280b130 <col:49, col:50> 'size_t *' prefix '&' cannot overflow
|   |   |     | `-DeclRefExpr 0x1ff4280b0f8 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1ff4280afd8 'alpn_len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1ff4280b1b0 <col:60> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ff4280b148 <col:60> 'const char *' lvalue Var 0x1ff427c9e50 'alpn_client' 'const char *'
|   |   |-IfStmt 0x1ff4280b3b8 <line:1769:9, line:1772:9>
|   |   | |-BinaryOperator 0x1ff4280b2d0 <line:1769:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1ff4280b2a0 <.//openssl//file_jk/before\test\ssltest_old.c:1769:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff4280b1e0 <col:13> 'unsigned char *' lvalue Var 0x1ff4280b070 'alpn' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x1ff4280b2b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff4280b280 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff4280b258 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff4280b218 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1ff4280b3a0 <.//openssl//file_jk/before\test\ssltest_old.c:1769:27, line:1772:9>
|   |   |   `-GotoStmt 0x1ff4280b388 <line:1771:13, col:18> 'end' 0x1ff427dfa10
|   |   |-IfStmt 0x1ff4280b690 <line:1774:9, line:1778:9>
|   |   | |-OpaqueValueExpr 0x1ff4280b678 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1ff4280b658 <line:1774:61, line:1778:9>
|   |   |   |-CallExpr 0x1ff4280b600 <line:1776:13, col:30> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff4280b5e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff4280b5a8 <col:13> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1ff4280b628 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1ff4280b5c8 <col:26> 'unsigned char *' lvalue Var 0x1ff4280b070 'alpn' 'unsigned char *'
|   |   |   `-GotoStmt 0x1ff4280b640 <line:1777:13, col:18> 'end' 0x1ff427dfa10
|   |   `-CallExpr 0x1ff4280b700 <line:1779:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1ff4280b6e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff4280b6a8 <col:9> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1ff4280b728 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff4280b6c8 <col:22> 'unsigned char *' lvalue Var 0x1ff4280b070 'alpn' 'unsigned char *'
|   |-IfStmt 0x1ff4280b990 <line:1782:5, line:1786:5>
|   | |-BinaryOperator 0x1ff4280b868 <line:1782:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff4280b838 <.//openssl//file_jk/before\test\ssltest_old.c:1782:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff4280b790 <col:9> 'const char *' lvalue Var 0x1ff427ca760 'server_sess_in' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff4280b850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff4280b818 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff4280b7f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff4280b7b0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff4280b978 <.//openssl//file_jk/before\test\ssltest_old.c:1782:33, line:1786:5>
|   |   `-IfStmt 0x1ff4280b960 <line:1784:9, line:1785:18>
|   |     |-OpaqueValueExpr 0x1ff4280b948 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1ff4280b930 <col:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280bba8 <line:1787:5, line:1791:5>
|   | |-BinaryOperator 0x1ff4280ba80 <line:1787:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff4280ba50 <.//openssl//file_jk/before\test\ssltest_old.c:1787:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff4280b9a8 <col:9> 'const char *' lvalue Var 0x1ff427ca890 'client_sess_in' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff4280ba68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff4280ba30 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff4280ba08 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff4280b9c8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff4280bb90 <.//openssl//file_jk/before\test\ssltest_old.c:1787:33, line:1791:5>
|   |   `-IfStmt 0x1ff4280bb78 <line:1789:9, line:1790:18>
|   |     |-OpaqueValueExpr 0x1ff4280bb60 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1ff4280bb48 <col:13, col:18> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280c418 <line:1793:5, line:1802:5>
|   | |-BinaryOperator 0x1ff4280bdb0 <line:1793:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | |-BinaryOperator 0x1ff4280bc98 <.//openssl//file_jk/before\test\ssltest_old.c:1793:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff4280bc68 <.//openssl//file_jk/before\test\ssltest_old.c:1793:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff4280bbc0 <col:9> 'const char *' lvalue Var 0x1ff427ca6c8 'server_sess_out' 'const char *'
|   | | | `-ImplicitCastExpr 0x1ff4280bc80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff4280bc48 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff4280bc20 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff4280bbe0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff4280bd90 <.//openssl//file_jk/before\test\ssltest_old.c:1793:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1ff4280bd60 <.//openssl//file_jk/before\test\ssltest_old.c:1793:36> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ff4280bcb8 <col:36> 'const char *' lvalue Var 0x1ff427ca760 'server_sess_in' 'const char *'
|   | |   `-ImplicitCastExpr 0x1ff4280bd78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |     `-ParenExpr 0x1ff4280bd40 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1ff4280bd18 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1ff4280bcd8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff4280c3e8 <.//openssl//file_jk/before\test\ssltest_old.c:1793:60, line:1802:5>
|   |   |-DeclStmt 0x1ff4280be50 <line:1794:9, col:19>
|   |   | `-VarDecl 0x1ff4280bde8 <col:9, col:15> col:15 used keys 'char *'
|   |   |-DeclStmt 0x1ff4280bee8 <line:1795:9, col:18>
|   |   | `-VarDecl 0x1ff4280be80 <col:9, col:14> col:14 used size 'long'
|   |   |-BinaryOperator 0x1ff4280c2d0 <line:1799:9, col:35> 'char *' '='
|   |   | |-DeclRefExpr 0x1ff4280c0f8 <col:9> 'char *' lvalue Var 0x1ff4280bde8 'keys' 'char *'
|   |   | `-ImplicitCastExpr 0x1ff4280c2b8 <col:16, col:35> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x1ff4280c278 <col:16, col:35> 'int'
|   |   |     |-ImplicitCastExpr 0x1ff4280c260 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1ff4280c220 <col:16> 'int ()' Function 0x1ff4280c158 'OPENSSL_zalloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1ff4280c2a0 <col:31> 'long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ff4280c240 <col:31> 'long' lvalue Var 0x1ff4280be80 'size' 'long'
|   |   `-CallExpr 0x1ff4280c3a8 <line:1801:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1ff4280c390 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ff4280c350 <col:9> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1ff4280c3d0 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff4280c370 <col:22> 'char *' lvalue Var 0x1ff4280bde8 'keys' 'char *'
|   |-IfStmt 0x1ff4280ca38 <line:1813:5, line:1814:14>
|   | |-OpaqueValueExpr 0x1ff4280ca20 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff4280ca08 <col:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280caa0 <line:1815:5, line:1816:14>
|   | |-OpaqueValueExpr 0x1ff4280ca88 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff4280ca70 <col:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280cb08 <line:1817:5, line:1818:14>
|   | |-OpaqueValueExpr 0x1ff4280caf0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff4280cad8 <col:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280cb70 <line:1819:5, line:1820:14>
|   | |-OpaqueValueExpr 0x1ff4280cb58 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff4280cb40 <col:9, col:14> 'end' 0x1ff427dfa10
|   |-IfStmt 0x1ff4280cdc8 <line:1822:5, line:1828:5>
|   | |-OpaqueValueExpr 0x1ff4280cdb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff4280cd98 <line:1822:22, line:1828:5>
|   |   `-IfStmt 0x1ff4280cd80 <line:1823:9, line:1827:9>
|   |     |-OpaqueValueExpr 0x1ff4280cd68 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff4280cd50 <line:1823:59, line:1827:9>
|   |       `-GotoStmt 0x1ff4280cd38 <line:1826:13, col:18> 'end' 0x1ff427dfa10
|   |-ForStmt 0x1ff4280fa60 <line:1831:5, line:1869:5>
|   | |-BinaryOperator 0x1ff4280cec0 <line:1831:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1ff4280ce78 <col:10> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   | | `-IntegerLiteral 0x1ff4280ce98 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ff4280ef70 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1ff4280cf20 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff4280cee0 <col:17> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   | | `-ImplicitCastExpr 0x1ff4280cf38 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff4280cf00 <col:21> 'int' lvalue Var 0x1ff427ed1f8 'number' 'int'
|   | |-UnaryOperator 0x1ff4280efb0 <col:29, col:30> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ff4280ef90 <col:29> 'int' lvalue Var 0x1ff427ecd18 'i' 'int'
|   | `-CompoundStmt 0x1ff4280fa30 <col:34, line:1869:5>
|   |   |-IfStmt 0x1ff4280f278 <line:1832:9, line:1837:9>
|   |   | |-UnaryOperator 0x1ff4280f000 <line:1832:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1ff4280efe8 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff4280efc8 <col:14> 'int' lvalue Var 0x1ff427ed2a0 'reuse' 'int'
|   |   | `-CompoundStmt 0x1ff4280f260 <col:21, line:1837:9>
|   |   |   `-IfStmt 0x1ff4280f248 <line:1833:13, line:1836:13>
|   |   |     |-OpaqueValueExpr 0x1ff4280f230 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1ff4280f218 <line:1833:48, line:1836:13>
|   |   |       `-GotoStmt 0x1ff4280f200 <line:1835:17, col:22> 'end' 0x1ff427dfa10
|   |   |-IfStmt 0x1ff4280f4c0 <line:1838:9, line:1844:9>
|   |   | |-BinaryOperator 0x1ff4280f368 <line:1838:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff4280f338 <.//openssl//file_jk/before\test\ssltest_old.c:1838:13> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff4280f290 <col:13> 'const char *' lvalue Var 0x1ff427ca890 'client_sess_in' 'const char *'
|   |   | | `-ImplicitCastExpr 0x1ff4280f350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff4280f318 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff4280f2f0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff4280f2b0 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1ff4280f4a8 <.//openssl//file_jk/before\test\ssltest_old.c:1838:37, line:1844:9>
|   |   |   `-IfStmt 0x1ff4280f490 <line:1839:13, line:1843:13>
|   |   |     |-OpaqueValueExpr 0x1ff4280f478 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1ff4280f460 <line:1839:59, line:1843:13>
|   |   |       `-GotoStmt 0x1ff4280f448 <line:1842:17, col:22> 'end' 0x1ff427dfa10
|   |   |-SwitchStmt 0x1ff4280f528 <line:1845:9, line:1867:9>
|   |   | |-ImplicitCastExpr 0x1ff4280f510 <line:1845:17> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1ff4280f4f8 <col:17> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff4280f4d8 <col:17> 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)' lvalue Var 0x1ff427ec5c8 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/before\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/before\test\ssltest_old.c:956:5)'
|   |   | `-CompoundStmt 0x1ff4280f988 <col:27, line:1867:9>
|   |   |   |-CaseStmt 0x1ff4280f580 <line:1846:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1ff4280f568 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x1ff4280f548 <col:14> 'int' EnumConstant 0x1ff427ec410 'BIO_MEM' 'int'
|   |   |   | `-NullStmt 0x1ff4280f5e8 <<invalid sloc>>
|   |   |   |-BreakStmt 0x1ff4280f5f0 <line:1848:13>
|   |   |   |-CaseStmt 0x1ff4280f630 <line:1849:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1ff4280f618 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x1ff4280f5f8 <col:14> 'int' EnumConstant 0x1ff427ec468 'BIO_PAIR' 'int'
|   |   |   | `-NullStmt 0x1ff4280f738 <<invalid sloc>>
|   |   |   |-BreakStmt 0x1ff4280f740 <line:1851:13>
|   |   |   |-CaseStmt 0x1ff4280f780 <line:1853:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1ff4280f768 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x1ff4280f748 <col:14> 'int' EnumConstant 0x1ff427ec4c0 'BIO_IPV4' 'int'
|   |   |   | `-NullStmt 0x1ff4280f858 <<invalid sloc>>
|   |   |   |-BreakStmt 0x1ff4280f860 <line:1856:13>
|   |   |   |-CaseStmt 0x1ff4280f8a0 <line:1857:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1ff4280f888 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x1ff4280f868 <col:14> 'int' EnumConstant 0x1ff427ec518 'BIO_IPV6' 'int'
|   |   |   | `-NullStmt 0x1ff4280f978 <<invalid sloc>>
|   |   |   `-BreakStmt 0x1ff4280f980 <line:1860:13>
|   |   `-IfStmt 0x1ff4280fa18 <line:1868:9, col:19>
|   |     |-ImplicitCastExpr 0x1ff4280f9f8 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff4280f9d8 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |     `-BreakStmt 0x1ff4280fa10 <col:19>
|   |-IfStmt 0x1ff428104e0 <line:1871:5, line:1886:5>
|   | |-BinaryOperator 0x1ff4280fe70 <line:1871:9, line:1873:52> 'int' '&&'
|   | | |-BinaryOperator 0x1ff4280fce0 <line:1871:9, line:1872:52> 'int' '&&'
|   | | | |-BinaryOperator 0x1ff4280fb50 <line:1871:9, col:36> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x1ff4280fb38 <col:9> 'const char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1ff4280fa98 <col:9> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | | | | `-BinaryOperator 0x1ff4280fb18 <col:29, col:36> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x1ff4280fb00 <col:29> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1ff4280fab8 <col:29> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   | | | |   `-IntegerLiteral 0x1ff4280fad8 <col:36> 'int' 0
|   | | | `-BinaryOperator 0x1ff4280fcc0 <line:1872:9, col:52> 'int' '!='
|   | | |   |-CallExpr 0x1ff4280fc20 <col:9, col:47> 'int'
|   | | |   | |-ImplicitCastExpr 0x1ff4280fc08 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1ff4280fb70 <col:9> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x1ff4280fc50 <col:16> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x1ff4280fb90 <col:16> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x1ff4280fc80 <col:34> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x1ff4280fc68 <col:34> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x1ff4280fbb0 <col:34> 'char [12]' lvalue "fail-server"
|   | | |   `-IntegerLiteral 0x1ff4280fc98 <col:52> 'int' 0
|   | | `-BinaryOperator 0x1ff4280fe50 <line:1873:9, col:52> 'int' '!='
|   | |   |-CallExpr 0x1ff4280fdb0 <col:9, col:47> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff4280fd98 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff4280fd00 <col:9> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1ff4280fde0 <col:16> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1ff4280fd20 <col:16> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1ff4280fe10 <col:34> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1ff4280fdf8 <col:34> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1ff4280fd40 <col:34> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x1ff4280fe28 <col:52> 'int' 0
|   | `-CompoundStmt 0x1ff428104b8 <col:55, line:1886:5>
|   |   |-DeclStmt 0x1ff4280ffa8 <line:1874:9, col:61>
|   |   | `-VarDecl 0x1ff4280fea8 <col:9, col:60> col:13 used version 'int' cinit
|   |   |   `-CallExpr 0x1ff4280ff68 <col:23, col:60> 'int'
|   |   |     |-ImplicitCastExpr 0x1ff4280ff50 <col:23> 'int (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1ff4280ff10 <col:23> 'int (const char *)' Function 0x1ff427eb2e0 'protocol_from_string' 'int (const char *)'
|   |   |     `-ImplicitCastExpr 0x1ff4280ff90 <col:44> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ff4280ff30 <col:44> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   |-IfStmt 0x1ff428101b8 <line:1875:9, line:1879:9>
|   |   | |-BinaryOperator 0x1ff42810038 <line:1875:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1ff42810020 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff4280ffc0 <col:13> 'int' lvalue Var 0x1ff4280fea8 'version' 'int'
|   |   | | `-IntegerLiteral 0x1ff4280fff8 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x1ff42810198 <col:26, line:1879:9>
|   |   |   |-BinaryOperator 0x1ff42810110 <line:1877:13, col:19> 'int' '='
|   |   |   | |-DeclRefExpr 0x1ff428100c8 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x1ff428100e8 <col:19> 'int' 1
|   |   |   `-GotoStmt 0x1ff42810180 <line:1878:13, col:18> 'err' 0x1ff42810130
|   |   `-IfStmt 0x1ff428104a0 <line:1880:9, line:1885:9>
|   |     |-OpaqueValueExpr 0x1ff42810488 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42810468 <line:1880:44, line:1885:9>
|   |       |-BinaryOperator 0x1ff42810430 <line:1883:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1ff428103e8 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |       | `-IntegerLiteral 0x1ff42810408 <col:19> 'int' 1
|   |       `-GotoStmt 0x1ff42810450 <line:1884:13, col:18> 'err' 0x1ff42810130
|   |-IfStmt 0x1ff428108d0 <line:1888:5, line:1897:5>
|   | |-BinaryOperator 0x1ff42810570 <line:1888:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff42810558 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff428104f8 <col:9> 'int' lvalue Var 0x1ff427ed378 'should_reuse' 'int'
|   | | `-UnaryOperator 0x1ff42810540 <col:25, col:26> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1ff42810518 <col:26> 'int' 1
|   | `-CompoundStmt 0x1ff428108b8 <col:29, line:1897:5>
|   |   `-IfStmt 0x1ff428108a0 <line:1889:9, line:1896:9>
|   |     |-OpaqueValueExpr 0x1ff42810888 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42810868 <line:1890:56, line:1896:9>
|   |       |-BinaryOperator 0x1ff42810830 <line:1894:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1ff428107e8 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |       | `-IntegerLiteral 0x1ff42810808 <col:19> 'int' 1
|   |       `-GotoStmt 0x1ff42810850 <line:1895:13, col:18> 'err' 0x1ff42810130
|   |-IfStmt 0x1ff42810c20 <line:1899:5, line:1904:5>
|   | |-BinaryOperator 0x1ff428109c0 <line:1899:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff42810990 <.//openssl//file_jk/before\test\ssltest_old.c:1899:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff428108e8 <col:9> 'const char *' lvalue Var 0x1ff427ca6c8 'server_sess_out' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff428109a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff42810970 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42810948 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42810908 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff42810c08 <.//openssl//file_jk/before\test\ssltest_old.c:1899:34, line:1904:5>
|   |   `-IfStmt 0x1ff42810bf0 <line:1900:9, line:1903:9>
|   |     |-OpaqueValueExpr 0x1ff42810bd8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42810bb8 <line:1900:74, line:1903:9>
|   |       |-BinaryOperator 0x1ff42810b80 <line:1901:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1ff42810b38 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |       | `-IntegerLiteral 0x1ff42810b58 <col:19> 'int' 1
|   |       `-GotoStmt 0x1ff42810ba0 <line:1902:13, col:18> 'err' 0x1ff42810130
|   |-IfStmt 0x1ff42810e80 <line:1905:5, line:1910:5>
|   | |-BinaryOperator 0x1ff42810d10 <line:1905:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff42810ce0 <.//openssl//file_jk/before\test\ssltest_old.c:1905:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff42810c38 <col:9> 'const char *' lvalue Var 0x1ff427ca7f8 'client_sess_out' 'const char *'
|   | | `-ImplicitCastExpr 0x1ff42810cf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1ff42810cc0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42810c98 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42810c58 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff42810e68 <.//openssl//file_jk/before\test\ssltest_old.c:1905:34, line:1910:5>
|   |   `-IfStmt 0x1ff42810e50 <line:1906:9, line:1909:9>
|   |     |-OpaqueValueExpr 0x1ff42810e38 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ff42810e18 <line:1906:74, line:1909:9>
|   |       |-BinaryOperator 0x1ff42810de0 <line:1907:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1ff42810d98 <col:13> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |       | `-IntegerLiteral 0x1ff42810db8 <col:19> 'int' 1
|   |       `-GotoStmt 0x1ff42810e00 <line:1908:13, col:18> 'err' 0x1ff42810130
|   |-IfStmt 0x1ff42810f10 <line:1912:5, line:1914:5>
|   | |-UnaryOperator 0x1ff42810ed0 <line:1912:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff42810eb8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff42810e98 <col:10> 'int' lvalue Var 0x1ff427d36c0 'verbose' 'int'
|   | `-CompoundStmt 0x1ff42810f00 <col:19, line:1914:5>
|   |-IfStmt 0x1ff42811208 <line:1915:5, line:1932:5>
|   | |-ImplicitCastExpr 0x1ff42810f48 <line:1915:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff42810f28 <col:9> 'int' lvalue Var 0x1ff427eddd0 'print_time' 'int'
|   | `-CompoundStmt 0x1ff428111f8 <col:21, line:1932:5>
|   |-LabelStmt 0x1ff42811338 <line:1934:2, col:5> 'err'
|   | `-NullStmt 0x1ff42811330 <col:5>
|   |-LabelStmt 0x1ff42811488 <line:1938:2, col:5> 'end'
|   | `-NullStmt 0x1ff42811480 <col:5>
|   |-IfStmt 0x1ff42811a48 <line:1953:5, line:1954:15>
|   | |-OpaqueValueExpr 0x1ff42811a30 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1ff42811a10 <col:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x1ff428119c8 <col:9> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|   |   `-IntegerLiteral 0x1ff428119e8 <col:15> 'int' 1
|   `-CallExpr 0x1ff42811ad8 <line:1957:5, col:13> 'int'
|     |-ImplicitCastExpr 0x1ff42811ac0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1ff42811a80 <col:5> 'int ()' Function 0x1ff427f0478 'EXIT' 'int ()'
|     `-ImplicitCastExpr 0x1ff42811b00 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff42811aa0 <col:10> 'int' lvalue Var 0x1ff427ecab8 'ret' 'int'
|-FunctionDecl 0x1ff42812160 <line:1961:1, line:2246:1> line:1961:5 invalid doit_localhost 'int (int *, int *, int, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x1ff42811e30 <col:20, col:25> col:25 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff42811eb0 <col:32, col:37> col:37 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff42811f30 <col:44, col:48> col:48 used family 'int'
| |-ParmVarDecl 0x1ff42811fb0 <col:56, col:61> col:61 used count 'long'
| |-ParmVarDecl 0x1ff42812028 <line:1962:20, col:29> col:29 used s_time 'clock_t *'
| |-ParmVarDecl 0x1ff428120a0 <col:37, col:46> col:46 used c_time 'clock_t *'
| `-CompoundStmt 0x1ff4281c388 <line:1963:1, line:2246:1>
|   |-DeclStmt 0x1ff42812568 <line:1964:5, col:72>
|   | |-VarDecl 0x1ff42812260 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff42812300 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff428122c8 <col:19> 'long' lvalue ParmVar 0x1ff42811fb0 'count' 'long'
|   | |-VarDecl 0x1ff42812330 <col:5, col:35> col:26 used cr_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff428123b8 <col:35> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff42812398 <col:35> 'long' lvalue ParmVar 0x1ff42811fb0 'count' 'long'
|   | |-VarDecl 0x1ff428123e8 <col:5, col:51> col:42 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff42812470 <col:51> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff42812450 <col:51> 'long' lvalue ParmVar 0x1ff42811fb0 'count' 'long'
|   | `-VarDecl 0x1ff428124a0 <col:5, col:67> col:58 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x1ff42812528 <col:67> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff42812508 <col:67> 'long' lvalue ParmVar 0x1ff42811fb0 'count' 'long'
|   |-DeclStmt 0x1ff42812930 <line:1967:5, col:22>
|   | `-VarDecl 0x1ff428128c8 <col:5, col:21> col:10 used addr_str 'char [40]'
|   |-DeclStmt 0x1ff428129f0 <line:1968:5, col:16>
|   | `-VarDecl 0x1ff42812960 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ff428129c8 <col:15> 'int' 1
|   |-DeclStmt 0x1ff42812ab0 <line:1969:5, col:26>
|   | `-VarDecl 0x1ff42812a20 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x1ff42812a88 <col:25> 'int' 0
|   |-DeclStmt 0x1ff42812b70 <line:1970:5, col:26>
|   | `-VarDecl 0x1ff42812ae0 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x1ff42812b48 <col:25> 'int' 0
|   |-IfStmt 0x1ff42812e18 <line:1973:5, line:1974:14>
|   | |-OpaqueValueExpr 0x1ff42812e00 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42812de8 <col:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff42813208 <line:1977:5, line:1978:14>
|   | |-OpaqueValueExpr 0x1ff428131f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff428131d8 <col:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff428137e0 <line:1984:5, line:1985:14>
|   | |-OpaqueValueExpr 0x1ff428137c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff428137b0 <col:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff42813988 <line:1987:5, line:1988:14>
|   | |-OpaqueValueExpr 0x1ff42813970 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42813958 <col:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff42813a40 <line:1989:5, line:1990:14>
|   | |-OpaqueValueExpr 0x1ff42813a28 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42813a10 <col:9, col:14> 'err' 0x1ff42812d98
|   |-CompoundStmt 0x1ff428142f0 <line:1992:5, line:2013:5>
|   | |-DeclStmt 0x1ff42813bc0 <line:1993:9, col:42>
|   | | |-VarDecl 0x1ff42813a70 <col:9, col:26> col:13 used st_connect 'int' cinit
|   | | | `-IntegerLiteral 0x1ff42813ad8 <col:26> 'int' 0
|   | | `-VarDecl 0x1ff42813b18 <col:9, col:41> col:29 used st_accept 'int' cinit
|   | |   `-IntegerLiteral 0x1ff42813b80 <col:41> 'int' 0
|   | `-WhileStmt 0x1ff428142d8 <line:1995:9, line:2012:9>
|   |   |-BinaryOperator 0x1ff42813ca8 <line:1995:15, col:31> 'int' '||'
|   |   | |-UnaryOperator 0x1ff42813c28 <col:15, col:16> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1ff42813c10 <col:16> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff42813bd8 <col:16> 'int' lvalue Var 0x1ff42813a70 'st_connect' 'int'
|   |   | `-UnaryOperator 0x1ff42813c90 <col:30, col:31> 'int' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x1ff42813c78 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ff42813c40 <col:31> 'int' lvalue Var 0x1ff42813b18 'st_accept' 'int'
|   |   `-CompoundStmt 0x1ff428142b8 <col:42, line:2012:9>
|   |     |-IfStmt 0x1ff42814098 <line:1996:13, line:2003:13>
|   |     | |-UnaryOperator 0x1ff42813d00 <line:1996:17, col:18> 'int' prefix '!' cannot overflow
|   |     | | `-ImplicitCastExpr 0x1ff42813ce8 <col:18> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1ff42813cc8 <col:18> 'int' lvalue Var 0x1ff42813a70 'st_connect' 'int'
|   |     | `-CompoundStmt 0x1ff42814080 <col:30, line:2003:13>
|   |     |   `-IfStmt 0x1ff42814058 <line:1997:17, line:2002:17> has_else
|   |     |     |-OpaqueValueExpr 0x1ff42814040 <<invalid sloc>> '_Bool'
|   |     |     |-CompoundStmt 0x1ff42813fa8 <line:1997:50, line:2000:17>
|   |     |     | `-IfStmt 0x1ff42813f90 <line:1998:21, line:1999:30>
|   |     |     |   |-OpaqueValueExpr 0x1ff42813f78 <<invalid sloc>> '_Bool'
|   |     |     |   `-GotoStmt 0x1ff42813f60 <col:25, col:30> 'err' 0x1ff42812d98
|   |     |     `-CompoundStmt 0x1ff42814028 <line:2000:24, line:2002:17>
|   |     |       `-BinaryOperator 0x1ff42814008 <line:2001:21, col:34> 'int' '='
|   |     |         |-DeclRefExpr 0x1ff42813fc0 <col:21> 'int' lvalue Var 0x1ff42813a70 'st_connect' 'int'
|   |     |         `-IntegerLiteral 0x1ff42813fe0 <col:34> 'int' 1
|   |     `-IfStmt 0x1ff428142a0 <line:2004:13, line:2011:13>
|   |       |-UnaryOperator 0x1ff428140e8 <line:2004:17, col:18> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x1ff428140d0 <col:18> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1ff428140b0 <col:18> 'int' lvalue Var 0x1ff42813b18 'st_accept' 'int'
|   |       `-CompoundStmt 0x1ff42814288 <col:29, line:2011:13>
|   |         `-IfStmt 0x1ff42814260 <line:2005:17, line:2010:17> has_else
|   |           |-OpaqueValueExpr 0x1ff42814248 <<invalid sloc>> '_Bool'
|   |           |-CompoundStmt 0x1ff428141b0 <line:2005:47, line:2008:17>
|   |           | `-IfStmt 0x1ff42814198 <line:2006:21, line:2007:30>
|   |           |   |-OpaqueValueExpr 0x1ff42814180 <<invalid sloc>> '_Bool'
|   |           |   `-GotoStmt 0x1ff42814168 <col:25, col:30> 'err' 0x1ff42812d98
|   |           `-CompoundStmt 0x1ff42814230 <line:2008:24, line:2010:17>
|   |             `-BinaryOperator 0x1ff42814210 <line:2009:21, col:33> 'int' '='
|   |               |-DeclRefExpr 0x1ff428141c8 <col:21> 'int' lvalue Var 0x1ff42813b18 'st_accept' 'int'
|   |               `-IntegerLiteral 0x1ff428141e8 <col:33> 'int' 1
|   |-IfStmt 0x1ff42814880 <line:2020:5, line:2021:14>
|   | |-OpaqueValueExpr 0x1ff42814868 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42814850 <col:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff42814980 <line:2024:5, line:2025:14>
|   | |-OpaqueValueExpr 0x1ff42814968 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42814950 <col:9, col:14> 'err' 0x1ff42812d98
|   |-DoStmt 0x1ff4281b028 <line:2035:5, line:2196:64>
|   | |-CompoundStmt 0x1ff4280acb0 <line:2035:8, line:2195:5>
|   | | |-CompoundStmt 0x1ff42816ef0 <line:2054:9, line:2131:9>
|   | | | |-DeclStmt 0x1ff42814f60 <line:2057:13, col:32>
|   | | | | `-VarDecl 0x1ff42814ef8 <col:13, col:31> col:18 used cbuf 'char [8192]'
|   | | | |-DeclStmt 0x1ff428150a0 <line:2058:13, col:21>
|   | | | | |-VarDecl 0x1ff42814fa0 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x1ff42815020 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x1ff428151e0 <line:2059:13, col:38>
|   | | | | `-VarDecl 0x1ff428150c8 <col:13, col:37> col:21 used c_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x1ff428151c0 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x1ff428151a8 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x1ff42815130 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x1ff42815330 <line:2061:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x1ff42815318 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1ff428151f8 <col:13> 'void *(void *, int, unsigned long long)' Function 0x1ff428609f8 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x1ff42815380 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x1ff42815368 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x1ff42815218 <col:20> 'char [8192]' lvalue Var 0x1ff42814ef8 'cbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x1ff42815250 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x1ff428152b8 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x1ff42815298 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x1ff42815278 <col:36> 'char [8192]' lvalue Var 0x1ff42814ef8 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x1ff428162a0 <line:2068:13, line:2096:13>
|   | | | | |-BinaryOperator 0x1ff428156e0 <line:2068:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff428156b0 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff42815650 <col:17> 'long' lvalue Var 0x1ff42812260 'cw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff428156c8 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff42815688 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff42816280 <col:29, line:2096:13>
|   | | | |   |-IfStmt 0x1ff42815980 <line:2071:17, line:2074:30> has_else
|   | | | |   | |-BinaryOperator 0x1ff428157d8 <line:2071:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x1ff428157c0 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x1ff42815700 <col:21> 'long' lvalue Var 0x1ff42812260 'cw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x1ff42815798 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff42815760 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff42815740 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff42815720 <col:43> 'char [8192]' lvalue Var 0x1ff42814ef8 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x1ff428158a8 <line:2072:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x1ff428157f8 <col:21> 'int' lvalue Var 0x1ff42814fa0 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x1ff42815890 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff42815870 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff42815850 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff42815830 <col:32> 'char [8192]' lvalue Var 0x1ff42814ef8 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x1ff42815960 <line:2074:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x1ff428158c8 <col:21> 'int' lvalue Var 0x1ff42814fa0 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x1ff42815938 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x1ff42815920 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x1ff428158e8 <col:30> 'long' lvalue Var 0x1ff42812260 'cw_num' 'long'
|   | | | |   `-IfStmt 0x1ff42816258 <line:2076:17, line:2095:17> has_else
|   | | | |     |-BinaryOperator 0x1ff42815aa0 <line:2076:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff42815a88 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff42815a40 <col:21> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff42815a60 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff42815d80 <col:28, line:2088:17>
|   | | | |     | `-IfStmt 0x1ff42815d68 <line:2077:21, line:2081:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff42815d50 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff42815d28 <line:2077:55, line:2081:21>
|   | | | |     |     |-CallExpr 0x1ff42815c30 <line:2078:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff42815c18 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff42815ae0 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff42815bb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff42815ba0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff42815b80 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff42815b38 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff42815b20 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff42815b00 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff42815b58 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff42815c78 <.//openssl//file_jk/before\test\ssltest_old.c:2078:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff42815c60 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff42815bd8 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x1ff42815cf0 <line:2079:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff42815c90 <col:25> 'int' lvalue Var 0x1ff42812a20 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff42815cc8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff42815d10 <line:2080:25, col:30> 'err' 0x1ff42812d98
|   | | | |     `-IfStmt 0x1ff42816230 <line:2088:24, line:2095:17> has_else
|   | | | |       |-BinaryOperator 0x1ff42815df8 <line:2088:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff42815de0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff42815d98 <col:28> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff42815db8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff42815ff0 <col:36, line:2091:17>
|   | | | |       | |-CallExpr 0x1ff42815f78 <line:2089:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff42815f60 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff42815e18 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff42815ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff42815ed8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff42815eb8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff42815e70 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff42815e58 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff42815e38 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff42815e90 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff42815fc0 <.//openssl//file_jk/before\test\ssltest_old.c:2089:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff42815fa8 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff42815f10 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff42815fd8 <line:2090:21, col:26> 'err' 0x1ff42812d98
|   | | | |       `-CompoundStmt 0x1ff42816210 <line:2091:24, line:2095:17>
|   | | | |         |-IfStmt 0x1ff42816158 <line:2092:21, line:2093:54>
|   | | | |         | |-ImplicitCastExpr 0x1ff42816030 <line:2092:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff42816010 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff428160e0 <line:2093:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff428160c8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff42816048 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff42816128 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff42816110 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff42816068 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff42816140 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff42816090 <col:53> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff428161e0 <line:2094:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff42816170 <col:21> 'long' lvalue Var 0x1ff42812260 'cw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff428161c8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff428161b0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff42816190 <col:31> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |-IfStmt 0x1ff42816d58 <line:2098:13, line:2119:13>
|   | | | | |-BinaryOperator 0x1ff42816348 <line:2098:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff42816318 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff428162b8 <col:17> 'long' lvalue Var 0x1ff42812330 'cr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff42816330 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff428162f0 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff42816d40 <col:29, line:2119:13>
|   | | | |   `-IfStmt 0x1ff42816d18 <line:2102:17, line:2118:17> has_else
|   | | | |     |-BinaryOperator 0x1ff42816578 <line:2102:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff42816560 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff42816518 <col:21> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff42816538 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff42816840 <col:28, line:2111:17>
|   | | | |     | `-IfStmt 0x1ff42816828 <line:2103:21, line:2107:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff42816810 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff428167e8 <line:2103:55, line:2107:21>
|   | | | |     |     |-CallExpr 0x1ff42816708 <line:2104:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff428166f0 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff428165b8 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff42816690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff42816678 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff42816658 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff42816610 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff428165f8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff428165d8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff42816630 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff42816750 <.//openssl//file_jk/before\test\ssltest_old.c:2104:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff42816738 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff428166b0 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x1ff428167b0 <line:2105:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff42816768 <col:25> 'int' lvalue Var 0x1ff42812a20 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff42816788 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff428167d0 <line:2106:25, col:30> 'err' 0x1ff42812d98
|   | | | |     `-IfStmt 0x1ff42816cf0 <line:2111:24, line:2118:17> has_else
|   | | | |       |-BinaryOperator 0x1ff428168b8 <line:2111:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff428168a0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff42816858 <col:28> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff42816878 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff42816ab0 <col:36, line:2114:17>
|   | | | |       | |-CallExpr 0x1ff42816a38 <line:2112:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff42816a20 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff428168d8 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff428169b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff42816998 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff42816978 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff42816930 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff42816918 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff428168f8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff42816950 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff42816a80 <.//openssl//file_jk/before\test\ssltest_old.c:2112:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff42816a68 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff428169d0 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff42816a98 <line:2113:21, col:26> 'err' 0x1ff42812d98
|   | | | |       `-CompoundStmt 0x1ff42816cd0 <line:2114:24, line:2118:17>
|   | | | |         |-IfStmt 0x1ff42816c18 <line:2115:21, line:2116:53>
|   | | | |         | |-ImplicitCastExpr 0x1ff42816af0 <line:2115:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff42816ad0 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff42816ba0 <line:2116:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff42816b88 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff42816b08 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff42816be8 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff42816bd0 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff42816b28 <col:32> 'char [16]' lvalue "client read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff42816c00 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff42816b50 <col:52> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff42816ca0 <line:2117:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff42816c30 <col:21> 'long' lvalue Var 0x1ff42812330 'cr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff42816c88 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff42816c70 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff42816c50 <col:31> 'int' lvalue Var 0x1ff42815020 'r' 'int'
|   | | | `-CompoundAssignOperator 0x1ff42816ec0 <line:2130:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x1ff42816dc0 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x1ff42816da8 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1ff42816d70 <col:14> 'clock_t *' lvalue ParmVar 0x1ff428120a0 'c_time' 'clock_t *'
|   | | |   `-ParenExpr 0x1ff42816ea0 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x1ff42816e80 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x1ff42816e10 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x1ff42816df8 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x1ff42816dd8 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x1ff42816e68 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1ff42816e30 <col:35> 'clock_t':'long' lvalue Var 0x1ff428150c8 'c_clock' 'clock_t':'long'
|   | | `-CompoundStmt 0x1ff4280ac68 <line:2133:9, line:2194:9>
|   | |   |-DeclStmt 0x1ff42809000 <line:2136:13, col:32>
|   | |   | `-VarDecl 0x1ff42808f98 <col:13, col:31> col:18 used sbuf 'char [8192]'
|   | |   |-DeclStmt 0x1ff42809130 <line:2137:13, col:21>
|   | |   | |-VarDecl 0x1ff42809030 <col:13, col:17> col:17 used i 'int'
|   | |   | `-VarDecl 0x1ff428090b0 <col:13, col:20> col:20 used r 'int'
|   | |   |-DeclStmt 0x1ff42809218 <line:2138:13, col:38>
|   | |   | `-VarDecl 0x1ff42809158 <col:13, col:37> col:21 used s_clock 'clock_t':'long' cinit
|   | |   |   `-CallExpr 0x1ff428091f8 <col:31, col:37> 'clock_t':'long'
|   | |   |     `-ImplicitCastExpr 0x1ff428091e0 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       `-DeclRefExpr 0x1ff428091c0 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | |   |-CallExpr 0x1ff42809340 <line:2140:13, col:41> 'void *'
|   | |   | |-ImplicitCastExpr 0x1ff42809328 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff42809230 <col:13> 'void *(void *, int, unsigned long long)' Function 0x1ff428609f8 'memset' 'void *(void *, int, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x1ff42809390 <col:20> 'void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x1ff42809378 <col:20> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-DeclRefExpr 0x1ff42809250 <col:20> 'char [8192]' lvalue Var 0x1ff42808f98 'sbuf' 'char [8192]'
|   | |   | |-IntegerLiteral 0x1ff42809288 <col:26> 'int' 0
|   | |   | `-UnaryExprOrTypeTraitExpr 0x1ff428092f0 <col:29, col:40> 'unsigned long long' sizeof
|   | |   |   `-ParenExpr 0x1ff428092d0 <col:35, col:40> 'char [8192]' lvalue
|   | |   |     `-DeclRefExpr 0x1ff428092b0 <col:36> 'char [8192]' lvalue Var 0x1ff42808f98 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |-IfStmt 0x1ff4280a108 <line:2147:13, line:2170:13>
|   | |   | |-BinaryOperator 0x1ff42809548 <line:2147:17, col:26> 'int' '>'
|   | |   | | |-ImplicitCastExpr 0x1ff42809518 <col:17> 'long' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x1ff428094b8 <col:17> 'long' lvalue Var 0x1ff428123e8 'sw_num' 'long'
|   | |   | | `-ImplicitCastExpr 0x1ff42809530 <col:26> 'long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x1ff428094f0 <col:26> 'int' 0
|   | |   | `-CompoundStmt 0x1ff4280a0e8 <col:29, line:2170:13>
|   | |   |   |-IfStmt 0x1ff428097e8 <line:2150:17, line:2153:30> has_else
|   | |   |   | |-BinaryOperator 0x1ff42809640 <line:2150:21, col:47> 'int' '>'
|   | |   |   | | |-ImplicitCastExpr 0x1ff42809628 <col:21> 'long' <LValueToRValue>
|   | |   |   | | | `-DeclRefExpr 0x1ff42809568 <col:21> 'long' lvalue Var 0x1ff428123e8 'sw_num' 'long'
|   | |   |   | | `-CStyleCastExpr 0x1ff42809600 <col:30, col:47> 'long' <IntegralCast>
|   | |   |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff428095c8 <col:36, col:47> 'unsigned long long' sizeof
|   | |   |   | |     `-ParenExpr 0x1ff428095a8 <col:42, col:47> 'char [8192]' lvalue
|   | |   |   | |       `-DeclRefExpr 0x1ff42809588 <col:43> 'char [8192]' lvalue Var 0x1ff42808f98 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |   | |-BinaryOperator 0x1ff42809710 <line:2151:21, col:36> 'int' '='
|   | |   |   | | |-DeclRefExpr 0x1ff42809660 <col:21> 'int' lvalue Var 0x1ff42809030 'i' 'int'
|   | |   |   | | `-ImplicitCastExpr 0x1ff428096f8 <col:25, col:36> 'int' <IntegralCast>
|   | |   |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff428096d8 <col:25, col:36> 'unsigned long long' sizeof
|   | |   |   | |     `-ParenExpr 0x1ff428096b8 <col:31, col:36> 'char [8192]' lvalue
|   | |   |   | |       `-DeclRefExpr 0x1ff42809698 <col:32> 'char [8192]' lvalue Var 0x1ff42808f98 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |   | `-BinaryOperator 0x1ff428097c8 <line:2153:21, col:30> 'int' '='
|   | |   |   |   |-DeclRefExpr 0x1ff42809730 <col:21> 'int' lvalue Var 0x1ff42809030 'i' 'int'
|   | |   |   |   `-CStyleCastExpr 0x1ff428097a0 <col:25, col:30> 'int' <IntegralCast>
|   | |   |   |     `-ImplicitCastExpr 0x1ff42809788 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | |   |   |       `-DeclRefExpr 0x1ff42809750 <col:30> 'long' lvalue Var 0x1ff428123e8 'sw_num' 'long'
|   | |   |   `-IfStmt 0x1ff4280a0c0 <line:2155:17, line:2169:17> has_else
|   | |   |     |-BinaryOperator 0x1ff42809908 <line:2155:21, col:25> 'int' '<'
|   | |   |     | |-ImplicitCastExpr 0x1ff428098f0 <col:21> 'int' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x1ff428098a8 <col:21> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |     | `-IntegerLiteral 0x1ff428098c8 <col:25> 'int' 0
|   | |   |     |-CompoundStmt 0x1ff42809be8 <col:28, line:2162:17>
|   | |   |     | `-IfStmt 0x1ff42809bd0 <line:2156:21, line:2160:21>
|   | |   |     |   |-OpaqueValueExpr 0x1ff42809bb8 <<invalid sloc>> '_Bool'
|   | |   |     |   `-CompoundStmt 0x1ff42809b90 <line:2156:55, line:2160:21>
|   | |   |     |     |-CallExpr 0x1ff42809a98 <line:2157:25, col:60> 'int'
|   | |   |     |     | |-ImplicitCastExpr 0x1ff42809a80 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |     | | `-DeclRefExpr 0x1ff42809948 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |     | |-ParenExpr 0x1ff42809a20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |     | | `-UnaryOperator 0x1ff42809a08 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |     | |   `-ArraySubscriptExpr 0x1ff428099e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |     | |     |-CallExpr 0x1ff428099a0 <col:18, col:29> 'FILE *'
|   | |   |     |     | |     | `-ImplicitCastExpr 0x1ff42809988 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |     | |     |   `-DeclRefExpr 0x1ff42809968 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |     | |     `-IntegerLiteral 0x1ff428099c0 <col:31> 'int' 2
|   | |   |     |     | `-ImplicitCastExpr 0x1ff42809ae0 <.//openssl//file_jk/before\test\ssltest_old.c:2157:41> 'const char *' <NoOp>
|   | |   |     |     |   `-ImplicitCastExpr 0x1ff42809ac8 <col:41> 'char *' <ArrayToPointerDecay>
|   | |   |     |     |     `-StringLiteral 0x1ff42809a40 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | |   |     |     |-BinaryOperator 0x1ff42809b58 <line:2158:25, col:41> 'int' '='
|   | |   |     |     | |-DeclRefExpr 0x1ff42809af8 <col:25> 'int' lvalue Var 0x1ff42812ae0 'err_in_server' 'int'
|   | |   |     |     | `-IntegerLiteral 0x1ff42809b30 <col:41> 'int' 1
|   | |   |     |     `-GotoStmt 0x1ff42809b78 <line:2159:25, col:30> 'err' 0x1ff42812d98
|   | |   |     `-IfStmt 0x1ff4280a098 <line:2162:24, line:2169:17> has_else
|   | |   |       |-BinaryOperator 0x1ff42809c60 <line:2162:28, col:33> 'int' '=='
|   | |   |       | |-ImplicitCastExpr 0x1ff42809c48 <col:28> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x1ff42809c00 <col:28> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |       | `-IntegerLiteral 0x1ff42809c20 <col:33> 'int' 0
|   | |   |       |-CompoundStmt 0x1ff42809e58 <col:36, line:2165:17>
|   | |   |       | |-CallExpr 0x1ff42809de0 <line:2163:21, col:66> 'int'
|   | |   |       | | |-ImplicitCastExpr 0x1ff42809dc8 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |       | | | `-DeclRefExpr 0x1ff42809c80 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |       | | |-ParenExpr 0x1ff42809d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |       | | | `-UnaryOperator 0x1ff42809d40 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |       | | |   `-ArraySubscriptExpr 0x1ff42809d20 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |       | | |     |-CallExpr 0x1ff42809cd8 <col:18, col:29> 'FILE *'
|   | |   |       | | |     | `-ImplicitCastExpr 0x1ff42809cc0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       | | |     |   `-DeclRefExpr 0x1ff42809ca0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |       | | |     `-IntegerLiteral 0x1ff42809cf8 <col:31> 'int' 2
|   | |   |       | | `-ImplicitCastExpr 0x1ff42809e28 <.//openssl//file_jk/before\test\ssltest_old.c:2163:37> 'const char *' <NoOp>
|   | |   |       | |   `-ImplicitCastExpr 0x1ff42809e10 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |       | |     `-StringLiteral 0x1ff42809d78 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | |   |       | `-GotoStmt 0x1ff42809e40 <line:2164:21, col:26> 'err' 0x1ff42812d98
|   | |   |       `-CompoundStmt 0x1ff4280a078 <line:2165:24, line:2169:17>
|   | |   |         |-IfStmt 0x1ff42809fc0 <line:2166:21, line:2167:54>
|   | |   |         | |-ImplicitCastExpr 0x1ff42809e98 <line:2166:25> 'int' <LValueToRValue>
|   | |   |         | | `-DeclRefExpr 0x1ff42809e78 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | |   |         | `-CallExpr 0x1ff42809f48 <line:2167:25, col:54> 'int'
|   | |   |         |   |-ImplicitCastExpr 0x1ff42809f30 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |   |         |   | `-DeclRefExpr 0x1ff42809eb0 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | |   |         |   |-ImplicitCastExpr 0x1ff42809f90 <col:32> 'const char *' <NoOp>
|   | |   |         |   | `-ImplicitCastExpr 0x1ff42809f78 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |         |   |   `-StringLiteral 0x1ff42809ed0 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   | |   |         |   `-ImplicitCastExpr 0x1ff42809fa8 <col:53> 'int' <LValueToRValue>
|   | |   |         |     `-DeclRefExpr 0x1ff42809ef8 <col:53> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |         `-CompoundAssignOperator 0x1ff4280a048 <line:2168:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |   |           |-DeclRefExpr 0x1ff42809fd8 <col:21> 'long' lvalue Var 0x1ff428123e8 'sw_num' 'long'
|   | |   |           `-ImplicitCastExpr 0x1ff4280a030 <col:31> 'long' <IntegralCast>
|   | |   |             `-ImplicitCastExpr 0x1ff4280a018 <col:31> 'int' <LValueToRValue>
|   | |   |               `-DeclRefExpr 0x1ff42809ff8 <col:31> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |-IfStmt 0x1ff4280aad0 <line:2172:13, line:2191:13>
|   | |   | |-BinaryOperator 0x1ff4280a1b0 <line:2172:17, col:26> 'int' '>'
|   | |   | | |-ImplicitCastExpr 0x1ff4280a180 <col:17> 'long' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x1ff4280a120 <col:17> 'long' lvalue Var 0x1ff428124a0 'sr_num' 'long'
|   | |   | | `-ImplicitCastExpr 0x1ff4280a198 <col:26> 'long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x1ff4280a158 <col:26> 'int' 0
|   | |   | `-CompoundStmt 0x1ff4280aab8 <col:29, line:2191:13>
|   | |   |   `-IfStmt 0x1ff4280aa90 <line:2176:17, line:2190:17> has_else
|   | |   |     |-BinaryOperator 0x1ff4280a2f0 <line:2176:21, col:25> 'int' '<'
|   | |   |     | |-ImplicitCastExpr 0x1ff4280a2d8 <col:21> 'int' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x1ff4280a290 <col:21> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |     | `-IntegerLiteral 0x1ff4280a2b0 <col:25> 'int' 0
|   | |   |     |-CompoundStmt 0x1ff4280a5b8 <col:28, line:2183:17>
|   | |   |     | `-IfStmt 0x1ff4280a5a0 <line:2177:21, line:2181:21>
|   | |   |     |   |-OpaqueValueExpr 0x1ff4280a588 <<invalid sloc>> '_Bool'
|   | |   |     |   `-CompoundStmt 0x1ff4280a560 <line:2177:55, line:2181:21>
|   | |   |     |     |-CallExpr 0x1ff4280a480 <line:2178:25, col:60> 'int'
|   | |   |     |     | |-ImplicitCastExpr 0x1ff4280a468 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |     | | `-DeclRefExpr 0x1ff4280a330 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |     | |-ParenExpr 0x1ff4280a408 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |     | | `-UnaryOperator 0x1ff4280a3f0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |     | |   `-ArraySubscriptExpr 0x1ff4280a3d0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |     | |     |-CallExpr 0x1ff4280a388 <col:18, col:29> 'FILE *'
|   | |   |     |     | |     | `-ImplicitCastExpr 0x1ff4280a370 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |     | |     |   `-DeclRefExpr 0x1ff4280a350 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |     | |     `-IntegerLiteral 0x1ff4280a3a8 <col:31> 'int' 2
|   | |   |     |     | `-ImplicitCastExpr 0x1ff4280a4c8 <.//openssl//file_jk/before\test\ssltest_old.c:2178:41> 'const char *' <NoOp>
|   | |   |     |     |   `-ImplicitCastExpr 0x1ff4280a4b0 <col:41> 'char *' <ArrayToPointerDecay>
|   | |   |     |     |     `-StringLiteral 0x1ff4280a428 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | |   |     |     |-BinaryOperator 0x1ff4280a528 <line:2179:25, col:41> 'int' '='
|   | |   |     |     | |-DeclRefExpr 0x1ff4280a4e0 <col:25> 'int' lvalue Var 0x1ff42812ae0 'err_in_server' 'int'
|   | |   |     |     | `-IntegerLiteral 0x1ff4280a500 <col:41> 'int' 1
|   | |   |     |     `-GotoStmt 0x1ff4280a548 <line:2180:25, col:30> 'err' 0x1ff42812d98
|   | |   |     `-IfStmt 0x1ff4280aa68 <line:2183:24, line:2190:17> has_else
|   | |   |       |-BinaryOperator 0x1ff4280a630 <line:2183:28, col:33> 'int' '=='
|   | |   |       | |-ImplicitCastExpr 0x1ff4280a618 <col:28> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x1ff4280a5d0 <col:28> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |       | `-IntegerLiteral 0x1ff4280a5f0 <col:33> 'int' 0
|   | |   |       |-CompoundStmt 0x1ff4280a828 <col:36, line:2186:17>
|   | |   |       | |-CallExpr 0x1ff4280a7b0 <line:2184:21, col:66> 'int'
|   | |   |       | | |-ImplicitCastExpr 0x1ff4280a798 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |       | | | `-DeclRefExpr 0x1ff4280a650 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |       | | |-ParenExpr 0x1ff4280a728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |       | | | `-UnaryOperator 0x1ff4280a710 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |       | | |   `-ArraySubscriptExpr 0x1ff4280a6f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |       | | |     |-CallExpr 0x1ff4280a6a8 <col:18, col:29> 'FILE *'
|   | |   |       | | |     | `-ImplicitCastExpr 0x1ff4280a690 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       | | |     |   `-DeclRefExpr 0x1ff4280a670 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |       | | |     `-IntegerLiteral 0x1ff4280a6c8 <col:31> 'int' 2
|   | |   |       | | `-ImplicitCastExpr 0x1ff4280a7f8 <.//openssl//file_jk/before\test\ssltest_old.c:2184:37> 'const char *' <NoOp>
|   | |   |       | |   `-ImplicitCastExpr 0x1ff4280a7e0 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |       | |     `-StringLiteral 0x1ff4280a748 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | |   |       | `-GotoStmt 0x1ff4280a810 <line:2185:21, col:26> 'err' 0x1ff42812d98
|   | |   |       `-CompoundStmt 0x1ff4280aa48 <line:2186:24, line:2190:17>
|   | |   |         |-IfStmt 0x1ff4280a990 <line:2187:21, line:2188:53>
|   | |   |         | |-ImplicitCastExpr 0x1ff4280a868 <line:2187:25> 'int' <LValueToRValue>
|   | |   |         | | `-DeclRefExpr 0x1ff4280a848 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | |   |         | `-CallExpr 0x1ff4280a918 <line:2188:25, col:53> 'int'
|   | |   |         |   |-ImplicitCastExpr 0x1ff4280a900 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |   |         |   | `-DeclRefExpr 0x1ff4280a880 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | |   |         |   |-ImplicitCastExpr 0x1ff4280a960 <col:32> 'const char *' <NoOp>
|   | |   |         |   | `-ImplicitCastExpr 0x1ff4280a948 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |         |   |   `-StringLiteral 0x1ff4280a8a0 <col:32> 'char [16]' lvalue "server read %d\n"
|   | |   |         |   `-ImplicitCastExpr 0x1ff4280a978 <col:52> 'int' <LValueToRValue>
|   | |   |         |     `-DeclRefExpr 0x1ff4280a8c8 <col:52> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   |         `-CompoundAssignOperator 0x1ff4280aa18 <line:2189:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |   |           |-DeclRefExpr 0x1ff4280a9a8 <col:21> 'long' lvalue Var 0x1ff428124a0 'sr_num' 'long'
|   | |   |           `-ImplicitCastExpr 0x1ff4280aa00 <col:31> 'long' <IntegralCast>
|   | |   |             `-ImplicitCastExpr 0x1ff4280a9e8 <col:31> 'int' <LValueToRValue>
|   | |   |               `-DeclRefExpr 0x1ff4280a9c8 <col:31> 'int' lvalue Var 0x1ff428090b0 'r' 'int'
|   | |   `-CompoundAssignOperator 0x1ff4280ac38 <line:2193:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |     |-UnaryOperator 0x1ff4280ab38 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | |     | `-ImplicitCastExpr 0x1ff4280ab20 <col:14> 'clock_t *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1ff4280aae8 <col:14> 'clock_t *' lvalue ParmVar 0x1ff42812028 's_time' 'clock_t *'
|   | |     `-ParenExpr 0x1ff4280ac18 <col:24, col:42> 'long'
|   | |       `-BinaryOperator 0x1ff4280abf8 <col:25, col:35> 'long' '-'
|   | |         |-CallExpr 0x1ff4280ab88 <col:25, col:31> 'clock_t':'long'
|   | |         | `-ImplicitCastExpr 0x1ff4280ab70 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         |   `-DeclRefExpr 0x1ff4280ab50 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | |         `-ImplicitCastExpr 0x1ff4280abe0 <col:35> 'clock_t':'long' <LValueToRValue>
|   | |           `-DeclRefExpr 0x1ff4280aba8 <col:35> 'clock_t':'long' lvalue Var 0x1ff42809158 's_clock' 'clock_t':'long'
|   | `-BinaryOperator 0x1ff4281b008 <line:2196:12, col:63> 'int' '||'
|   |   |-BinaryOperator 0x1ff4280aeb8 <col:12, col:49> 'int' '||'
|   |   | |-BinaryOperator 0x1ff4280ae00 <col:12, col:35> 'int' '||'
|   |   | | |-BinaryOperator 0x1ff4280ad48 <col:12, col:21> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x1ff4280ad18 <col:12> 'long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1ff4280acd0 <col:12> 'long' lvalue Var 0x1ff42812260 'cw_num' 'long'
|   |   | | | `-ImplicitCastExpr 0x1ff4280ad30 <col:21> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1ff4280acf0 <col:21> 'int' 0
|   |   | | `-BinaryOperator 0x1ff4280ade0 <col:26, col:35> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x1ff4280adb0 <col:26> 'long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1ff4280ad68 <col:26> 'long' lvalue Var 0x1ff42812330 'cr_num' 'long'
|   |   | |   `-ImplicitCastExpr 0x1ff4280adc8 <col:35> 'long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x1ff4280ad88 <col:35> 'int' 0
|   |   | `-BinaryOperator 0x1ff4280ae98 <col:40, col:49> 'int' '>'
|   |   |   |-ImplicitCastExpr 0x1ff4280ae68 <col:40> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ff4280ae20 <col:40> 'long' lvalue Var 0x1ff428123e8 'sw_num' 'long'
|   |   |   `-ImplicitCastExpr 0x1ff4280ae80 <col:49> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1ff4280ae40 <col:49> 'int' 0
|   |   `-BinaryOperator 0x1ff4281afe8 <col:54, col:63> 'int' '>'
|   |     |-ImplicitCastExpr 0x1ff4280af20 <col:54> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff4280aed8 <col:54> 'long' lvalue Var 0x1ff428124a0 'sr_num' 'long'
|   |     `-ImplicitCastExpr 0x1ff4281afd0 <col:63> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff4280aef8 <col:63> 'int' 0
|   |-IfStmt 0x1ff4281b1f8 <line:2201:5, line:2204:5>
|   | |-OpaqueValueExpr 0x1ff4281b1e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff4281b1c0 <line:2201:39, line:2204:5>
|   |   |-BinaryOperator 0x1ff4281b138 <line:2202:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4281b0d8 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4281b110 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4281b1a8 <line:2203:9, col:14> 'end' 0x1ff4281b158
|   |-IfStmt 0x1ff4281b518 <line:2206:5, line:2210:5>
|   | |-BinaryOperator 0x1ff4281b290 <line:2206:9, col:31> 'int' '<'
|   | | |-CallExpr 0x1ff4281b248 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x1ff4281b230 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x1ff4281b210 <col:9> 'int ()' Function 0x1ff427cf998 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x1ff4281b268 <col:31> 'int' 0
|   | `-CompoundStmt 0x1ff4281b4f0 <col:34, line:2210:5>
|   |   |-CallExpr 0x1ff4281b410 <line:2207:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4281b3f8 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4281b2b0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff4281b388 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff4281b370 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff4281b350 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff4281b308 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff4281b2f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff4281b2d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff4281b328 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff4281b458 <.//openssl//file_jk/before\test\ssltest_old.c:2207:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff4281b440 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff4281b3a8 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x1ff4281b4b8 <line:2208:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4281b470 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4281b490 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4281b4d8 <line:2209:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff4281b610 <line:2211:5, line:2214:5>
|   | |-OpaqueValueExpr 0x1ff4281b5f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff4281b5d8 <line:2211:40, line:2214:5>
|   |   |-BinaryOperator 0x1ff4281b5a0 <line:2212:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4281b558 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4281b578 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4281b5c0 <line:2213:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff4281b708 <line:2215:5, line:2218:5>
|   | |-OpaqueValueExpr 0x1ff4281b6f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff4281b6d0 <line:2215:46, line:2218:5>
|   |   |-BinaryOperator 0x1ff4281b698 <line:2216:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4281b650 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4281b670 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4281b6b8 <line:2217:9, col:14> 'err' 0x1ff42812d98
|   |-IfStmt 0x1ff4281b9b8 <line:2220:5, line:2224:5>
|   | |-ImplicitCastExpr 0x1ff4281b740 <line:2220:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff4281b720 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x1ff4281b990 <col:27, line:2224:5>
|   |   |-CallExpr 0x1ff4281b8b0 <line:2221:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4281b898 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4281b758 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff4281b830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff4281b818 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff4281b7f8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff4281b7b0 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff4281b798 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff4281b778 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff4281b7d0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff4281b8f8 <.//openssl//file_jk/before\test\ssltest_old.c:2221:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff4281b8e0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff4281b850 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x1ff4281b958 <line:2222:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4281b910 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4281b930 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4281b978 <line:2223:9, col:14> 'err' 0x1ff42812d98
|   |-LabelStmt 0x1ff4281ba38 <line:2227:2, line:2229:11> 'end'
|   | `-BinaryOperator 0x1ff4281ba18 <col:5, col:11> 'int' '='
|   |   |-DeclRefExpr 0x1ff4281b9d0 <col:5> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |   `-IntegerLiteral 0x1ff4281b9f0 <col:11> 'int' 0
|   |-LabelStmt 0x1ff4281ba78 <line:2231:2, col:5> 'err'
|   | `-NullStmt 0x1ff4281ba70 <col:5>
|   |-IfStmt 0x1ff4281c318 <line:2240:5, line:2243:42> has_else
|   | |-BinaryOperator 0x1ff4281bd98 <line:2240:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x1ff4281bc08 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff4281bbd8 <.//openssl//file_jk/before\test\ssltest_old.c:2240:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff4281bb30 <col:9> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x1ff4281bbf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff4281bbb8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff4281bb90 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff4281bb50 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff4281bd78 <.//openssl//file_jk/before\test\ssltest_old.c:2240:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x1ff4281bcd8 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff4281bcc0 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff4281bc28 <col:37> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1ff4281bd08 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1ff4281bc48 <col:44> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1ff4281bd38 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1ff4281bd20 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1ff4281bc68 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x1ff4281bd50 <col:80> 'int' 0
|   | |-BinaryOperator 0x1ff4281bef8 <line:2241:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x1ff4281bdb8 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   | | `-ConditionalOperator 0x1ff4281bec8 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x1ff4281be58 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x1ff4281be38 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x1ff4281be20 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1ff4281bdd8 <col:16> 'int' lvalue Var 0x1ff42812a20 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x1ff4281bdf8 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x1ff4281be78 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x1ff4281bea0 <col:42> 'int' 1
|   | `-IfStmt 0x1ff4281c300 <line:2242:10, line:2243:42>
|   |   |-BinaryOperator 0x1ff4281c180 <line:2242:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x1ff4281bff0 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff4281bfc0 <.//openssl//file_jk/before\test\ssltest_old.c:2242:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff4281bf18 <col:14> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x1ff4281bfd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff4281bfa0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff4281bf78 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff4281bf38 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x1ff4281c160 <.//openssl//file_jk/before\test\ssltest_old.c:2242:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x1ff4281c0c0 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff4281c0a8 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff4281c010 <col:42> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x1ff4281c0f0 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1ff4281c030 <col:49> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1ff4281c120 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1ff4281c108 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1ff4281c050 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x1ff4281c138 <col:85> 'int' 0
|   |   `-BinaryOperator 0x1ff4281c2e0 <line:2243:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x1ff4281c1a0 <col:9> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|   |     `-ConditionalOperator 0x1ff4281c2b0 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x1ff4281c240 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x1ff4281c220 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x1ff4281c208 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ff4281c1c0 <col:16> 'int' lvalue Var 0x1ff42812ae0 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x1ff4281c1e0 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x1ff4281c260 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x1ff4281c288 <col:42> 'int' 1
|   `-ReturnStmt 0x1ff4281c378 <line:2245:5, col:12>
|     `-ImplicitCastExpr 0x1ff4281c360 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff4281c340 <col:12> 'int' lvalue Var 0x1ff42812960 'ret' 'int'
|-FunctionDecl 0x1ff4281c710 <line:2249:1, line:2630:1> line:2249:5 invalid doit_biopair 'int (int *, int *, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x1ff4281c468 <col:18, col:23> col:23 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff4281c4e8 <col:30, col:35> col:35 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff4281c568 <col:42, col:47> col:47 used count 'long'
| |-ParmVarDecl 0x1ff4281c5e0 <line:2250:18, col:27> col:27 used s_time 'clock_t *'
| |-ParmVarDecl 0x1ff4281c658 <col:35, col:44> col:44 used c_time 'clock_t *'
| `-CompoundStmt 0x1ff42824630 <line:2251:1, line:2630:1>
|   |-DeclStmt 0x1ff4281cb10 <line:2252:5, col:72>
|   | |-VarDecl 0x1ff4281c808 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff4281c8a8 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff4281c870 <col:19> 'long' lvalue ParmVar 0x1ff4281c568 'count' 'long'
|   | |-VarDecl 0x1ff4281c8d8 <col:5, col:35> col:26 used cr_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff4281c960 <col:35> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff4281c940 <col:35> 'long' lvalue ParmVar 0x1ff4281c568 'count' 'long'
|   | |-VarDecl 0x1ff4281c990 <col:5, col:51> col:42 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff4281ca18 <col:51> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff4281c9f8 <col:51> 'long' lvalue ParmVar 0x1ff4281c568 'count' 'long'
|   | `-VarDecl 0x1ff4281ca48 <col:5, col:67> col:58 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x1ff4281cad0 <col:67> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff4281cab0 <col:67> 'long' lvalue ParmVar 0x1ff4281c568 'count' 'long'
|   |-DeclStmt 0x1ff4281cf00 <line:2255:5, col:16>
|   | `-VarDecl 0x1ff4281ce70 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ff4281ced8 <col:15> 'int' 1
|   |-DeclStmt 0x1ff42818fc0 <line:2256:5, col:26>
|   | `-VarDecl 0x1ff4281cf30 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x1ff4281cf98 <col:25> 'int' 0
|   |-DeclStmt 0x1ff42819080 <line:2257:5, col:26>
|   | `-VarDecl 0x1ff42818ff0 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x1ff42819058 <col:25> 'int' 0
|   |-DeclStmt 0x1ff42819150 <line:2259:5, col:24>
|   | `-VarDecl 0x1ff428190a8 <col:5, col:21> col:12 used bufsiz 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1ff42819138 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff42819110 <col:21> 'int' 256
|   |-IfStmt 0x1ff42819350 <line:2261:5, line:2262:14>
|   | |-OpaqueValueExpr 0x1ff42819338 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff42819320 <col:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff428193f8 <line:2263:5, line:2264:14>
|   | |-OpaqueValueExpr 0x1ff428193e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff428193c8 <col:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff428194f8 <line:2267:5, line:2268:14>
|   | |-OpaqueValueExpr 0x1ff428194e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff428194c8 <col:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff428195f8 <line:2271:5, line:2272:14>
|   | |-OpaqueValueExpr 0x1ff428195e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ff428195c8 <col:9, col:14> 'err' 0x1ff428192d0
|   |-DoStmt 0x1ff428232b0 <line:2282:5, line:2579:64>
|   | |-CompoundStmt 0x1ff4282aff0 <line:2282:8, line:2578:5>
|   | | |-CompoundStmt 0x1ff4280d3b8 <line:2325:9, line:2402:9>
|   | | | |-DeclStmt 0x1ff428197e0 <line:2328:13, col:32>
|   | | | | `-VarDecl 0x1ff42819778 <col:13, col:31> col:18 used cbuf 'char [8192]'
|   | | | |-DeclStmt 0x1ff42819910 <line:2329:13, col:21>
|   | | | | |-VarDecl 0x1ff42819810 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x1ff42819890 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x1ff428199f8 <line:2330:13, col:38>
|   | | | | `-VarDecl 0x1ff42819938 <col:13, col:37> col:21 used c_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x1ff428199d8 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x1ff428199c0 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x1ff428199a0 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x1ff42819b20 <line:2332:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x1ff42819b08 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1ff42819a10 <col:13> 'void *(void *, int, unsigned long long)' Function 0x1ff428609f8 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x1ff42819b70 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x1ff42819b58 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x1ff42819a30 <col:20> 'char [8192]' lvalue Var 0x1ff42819778 'cbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x1ff42819a68 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x1ff42819ad0 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x1ff42819ab0 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x1ff42819a90 <col:36> 'char [8192]' lvalue Var 0x1ff42819778 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x1ff4281a8b0 <line:2339:13, line:2367:13>
|   | | | | |-BinaryOperator 0x1ff42819cf0 <line:2339:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff42819cc0 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff42819c60 <col:17> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff42819cd8 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff42819c98 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff4281a890 <col:29, line:2367:13>
|   | | | |   |-IfStmt 0x1ff42819f90 <line:2342:17, line:2345:30> has_else
|   | | | |   | |-BinaryOperator 0x1ff42819de8 <line:2342:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x1ff42819dd0 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x1ff42819d10 <col:21> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x1ff42819da8 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff42819d70 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff42819d50 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff42819d30 <col:43> 'char [8192]' lvalue Var 0x1ff42819778 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x1ff42819eb8 <line:2343:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x1ff42819e08 <col:21> 'int' lvalue Var 0x1ff42819810 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x1ff42819ea0 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff42819e80 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff42819e60 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff42819e40 <col:32> 'char [8192]' lvalue Var 0x1ff42819778 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x1ff42819f70 <line:2345:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x1ff42819ed8 <col:21> 'int' lvalue Var 0x1ff42819810 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x1ff42819f48 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x1ff42819f30 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x1ff42819ef8 <col:30> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   | | | |   `-IfStmt 0x1ff4281a868 <line:2347:17, line:2366:17> has_else
|   | | | |     |-BinaryOperator 0x1ff4281a0b0 <line:2347:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff4281a098 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff4281a050 <col:21> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff4281a070 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff4281a390 <col:28, line:2359:17>
|   | | | |     | `-IfStmt 0x1ff4281a378 <line:2348:21, line:2352:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff4281a360 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff4281a338 <line:2348:55, line:2352:21>
|   | | | |     |     |-CallExpr 0x1ff4281a240 <line:2349:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff4281a228 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff4281a0f0 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff4281a1c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff4281a1b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff4281a190 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff4281a148 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff4281a130 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff4281a110 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff4281a168 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff4281a288 <.//openssl//file_jk/before\test\ssltest_old.c:2349:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff4281a270 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff4281a1e8 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x1ff4281a300 <line:2350:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff4281a2a0 <col:25> 'int' lvalue Var 0x1ff4281cf30 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff4281a2d8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff4281a320 <line:2351:25, col:30> 'err' 0x1ff428192d0
|   | | | |     `-IfStmt 0x1ff4281a840 <line:2359:24, line:2366:17> has_else
|   | | | |       |-BinaryOperator 0x1ff4281a408 <line:2359:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff4281a3f0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff4281a3a8 <col:28> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff4281a3c8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff4281a600 <col:36, line:2362:17>
|   | | | |       | |-CallExpr 0x1ff4281a588 <line:2360:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff4281a570 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff4281a428 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff4281a500 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff4281a4e8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff4281a4c8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff4281a480 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff4281a468 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff4281a448 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff4281a4a0 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff4281a5d0 <.//openssl//file_jk/before\test\ssltest_old.c:2360:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff4281a5b8 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff4281a520 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff4281a5e8 <line:2361:21, col:26> 'err' 0x1ff428192d0
|   | | | |       `-CompoundStmt 0x1ff4281a820 <line:2362:24, line:2366:17>
|   | | | |         |-IfStmt 0x1ff4281a768 <line:2363:21, line:2364:54>
|   | | | |         | |-ImplicitCastExpr 0x1ff4281a640 <line:2363:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff4281a620 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff4281a6f0 <line:2364:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4281a6d8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff4281a658 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4281a738 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff4281a720 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff4281a678 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff4281a750 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff4281a6a0 <col:53> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff4281a7f0 <line:2365:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff4281a780 <col:21> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff4281a7d8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff4281a7c0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff4281a7a0 <col:31> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |-IfStmt 0x1ff4280d220 <line:2369:13, line:2390:13>
|   | | | | |-BinaryOperator 0x1ff4281a958 <line:2369:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff4281a928 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff4281a8c8 <col:17> 'long' lvalue Var 0x1ff4281c8d8 'cr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff4281a940 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff4281a900 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff4280d208 <col:29, line:2390:13>
|   | | | |   `-IfStmt 0x1ff4280d1e0 <line:2373:17, line:2389:17> has_else
|   | | | |     |-BinaryOperator 0x1ff4281aa98 <line:2373:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff4281aa80 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff4281aa38 <col:21> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff4281aa58 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff4281ad60 <col:28, line:2382:17>
|   | | | |     | `-IfStmt 0x1ff4281ad48 <line:2374:21, line:2378:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff4281ad30 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff4281ad08 <line:2374:55, line:2378:21>
|   | | | |     |     |-CallExpr 0x1ff4281ac28 <line:2375:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff4281ac10 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff4281aad8 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff4281abb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff4281ab98 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff4281ab78 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff4281ab30 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff4281ab18 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff4281aaf8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff4281ab50 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff4281ac70 <.//openssl//file_jk/before\test\ssltest_old.c:2375:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff4281ac58 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff4281abd0 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x1ff4281acd0 <line:2376:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff4281ac88 <col:25> 'int' lvalue Var 0x1ff4281cf30 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff4281aca8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff4281acf0 <line:2377:25, col:30> 'err' 0x1ff428192d0
|   | | | |     `-IfStmt 0x1ff4280d1b8 <line:2382:24, line:2389:17> has_else
|   | | | |       |-BinaryOperator 0x1ff4281add8 <line:2382:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff4281adc0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff4281ad78 <col:28> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff4281ad98 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff4280cf78 <col:36, line:2385:17>
|   | | | |       | |-CallExpr 0x1ff4281af58 <line:2383:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff4281af40 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff4281adf8 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff4281aed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff4281aeb8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff4281ae98 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff4281ae50 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff4281ae38 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff4281ae18 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff4281ae70 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff4281afa0 <.//openssl//file_jk/before\test\ssltest_old.c:2383:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff4281af88 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff4281aef0 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff4280cf60 <line:2384:21, col:26> 'err' 0x1ff428192d0
|   | | | |       `-CompoundStmt 0x1ff4280d198 <line:2385:24, line:2389:17>
|   | | | |         |-IfStmt 0x1ff4280d0e0 <line:2386:21, line:2387:53>
|   | | | |         | |-ImplicitCastExpr 0x1ff4280cfb8 <line:2386:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff4280cf98 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff4280d068 <line:2387:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280d050 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff4280cfd0 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280d0b0 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff4280d098 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff4280cff0 <col:32> 'char [16]' lvalue "client read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff4280d0c8 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff4280d018 <col:52> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff4280d168 <line:2388:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff4280d0f8 <col:21> 'long' lvalue Var 0x1ff4281c8d8 'cr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff4280d150 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff4280d138 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff4280d118 <col:31> 'int' lvalue Var 0x1ff42819890 'r' 'int'
|   | | | `-CompoundAssignOperator 0x1ff4280d388 <line:2401:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x1ff4280d288 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x1ff4280d270 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1ff4280d238 <col:14> 'clock_t *' lvalue ParmVar 0x1ff4281c658 'c_time' 'clock_t *'
|   | | |   `-ParenExpr 0x1ff4280d368 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x1ff4280d348 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x1ff4280d2d8 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x1ff4280d2c0 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x1ff4280d2a0 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x1ff4280d330 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1ff4280d2f8 <col:35> 'clock_t':'long' lvalue Var 0x1ff42819938 'c_clock' 'clock_t':'long'
|   | | |-CompoundStmt 0x1ff428171b0 <line:2404:9, line:2465:9>
|   | | | |-DeclStmt 0x1ff4280d510 <line:2407:13, col:32>
|   | | | | `-VarDecl 0x1ff4280d4a8 <col:13, col:31> col:18 used sbuf 'char [8192]'
|   | | | |-DeclStmt 0x1ff4280d640 <line:2408:13, col:21>
|   | | | | |-VarDecl 0x1ff4280d540 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x1ff4280d5c0 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x1ff4280d728 <line:2409:13, col:38>
|   | | | | `-VarDecl 0x1ff4280d668 <col:13, col:37> col:21 used s_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x1ff4280d708 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x1ff4280d6f0 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x1ff4280d6d0 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x1ff4280d850 <line:2411:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x1ff4280d838 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x1ff4280d740 <col:13> 'void *(void *, int, unsigned long long)' Function 0x1ff428609f8 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x1ff4280d8a0 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x1ff4280d888 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x1ff4280d760 <col:20> 'char [8192]' lvalue Var 0x1ff4280d4a8 'sbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x1ff4280d798 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x1ff4280d800 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x1ff4280d7e0 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x1ff4280d7c0 <col:36> 'char [8192]' lvalue Var 0x1ff4280d4a8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x1ff4280e5e0 <line:2418:13, line:2441:13>
|   | | | | |-BinaryOperator 0x1ff4280da20 <line:2418:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff4280d9f0 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff4280d990 <col:17> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff4280da08 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff4280d9c8 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff4280e5c0 <col:29, line:2441:13>
|   | | | |   |-IfStmt 0x1ff4280dcc0 <line:2421:17, line:2424:30> has_else
|   | | | |   | |-BinaryOperator 0x1ff4280db18 <line:2421:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x1ff4280db00 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x1ff4280da40 <col:21> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x1ff4280dad8 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff4280daa0 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff4280da80 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff4280da60 <col:43> 'char [8192]' lvalue Var 0x1ff4280d4a8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x1ff4280dbe8 <line:2422:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x1ff4280db38 <col:21> 'int' lvalue Var 0x1ff4280d540 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x1ff4280dbd0 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x1ff4280dbb0 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x1ff4280db90 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x1ff4280db70 <col:32> 'char [8192]' lvalue Var 0x1ff4280d4a8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x1ff4280dca0 <line:2424:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x1ff4280dc08 <col:21> 'int' lvalue Var 0x1ff4280d540 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x1ff4280dc78 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x1ff4280dc60 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x1ff4280dc28 <col:30> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   | | | |   `-IfStmt 0x1ff4280e598 <line:2426:17, line:2440:17> has_else
|   | | | |     |-BinaryOperator 0x1ff4280dde0 <line:2426:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff4280ddc8 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff4280dd80 <col:21> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff4280dda0 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff4280e0c0 <col:28, line:2433:17>
|   | | | |     | `-IfStmt 0x1ff4280e0a8 <line:2427:21, line:2431:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff4280e090 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff4280e068 <line:2427:55, line:2431:21>
|   | | | |     |     |-CallExpr 0x1ff4280df70 <line:2428:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff4280df58 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff4280de20 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff4280def8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff4280dee0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff4280dec0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff4280de78 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff4280de60 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff4280de40 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff4280de98 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff4280dfb8 <.//openssl//file_jk/before\test\ssltest_old.c:2428:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff4280dfa0 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff4280df18 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | | | |     |     |-BinaryOperator 0x1ff4280e030 <line:2429:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff4280dfd0 <col:25> 'int' lvalue Var 0x1ff42818ff0 'err_in_server' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff4280e008 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff4280e050 <line:2430:25, col:30> 'err' 0x1ff428192d0
|   | | | |     `-IfStmt 0x1ff4280e570 <line:2433:24, line:2440:17> has_else
|   | | | |       |-BinaryOperator 0x1ff4280e138 <line:2433:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff4280e120 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff4280e0d8 <col:28> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff4280e0f8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff4280e330 <col:36, line:2436:17>
|   | | | |       | |-CallExpr 0x1ff4280e2b8 <line:2434:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff4280e2a0 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff4280e158 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff4280e230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff4280e218 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff4280e1f8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff4280e1b0 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff4280e198 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff4280e178 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff4280e1d0 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff4280e300 <.//openssl//file_jk/before\test\ssltest_old.c:2434:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff4280e2e8 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff4280e250 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff4280e318 <line:2435:21, col:26> 'err' 0x1ff428192d0
|   | | | |       `-CompoundStmt 0x1ff4280e550 <line:2436:24, line:2440:17>
|   | | | |         |-IfStmt 0x1ff4280e498 <line:2437:21, line:2438:54>
|   | | | |         | |-ImplicitCastExpr 0x1ff4280e370 <line:2437:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff4280e350 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff4280e420 <line:2438:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280e408 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff4280e388 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280e468 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff4280e450 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff4280e3a8 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff4280e480 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff4280e3d0 <col:53> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff4280e520 <line:2439:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff4280e4b0 <col:21> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff4280e508 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff4280e4f0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff4280e4d0 <col:31> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |-IfStmt 0x1ff42817018 <line:2443:13, line:2462:13>
|   | | | | |-BinaryOperator 0x1ff4280e688 <line:2443:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x1ff4280e658 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1ff4280e5f8 <col:17> 'long' lvalue Var 0x1ff4281ca48 'sr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x1ff4280e670 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x1ff4280e630 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x1ff42817000 <col:29, line:2462:13>
|   | | | |   `-IfStmt 0x1ff42816fd8 <line:2447:17, line:2461:17> has_else
|   | | | |     |-BinaryOperator 0x1ff4280e7c8 <line:2447:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x1ff4280e7b0 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x1ff4280e768 <col:21> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x1ff4280e788 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x1ff4280ea90 <col:28, line:2454:17>
|   | | | |     | `-IfStmt 0x1ff4280ea78 <line:2448:21, line:2452:21>
|   | | | |     |   |-OpaqueValueExpr 0x1ff4280ea60 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x1ff4280ea38 <line:2448:55, line:2452:21>
|   | | | |     |     |-CallExpr 0x1ff4280e958 <line:2449:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x1ff4280e940 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x1ff4280e808 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x1ff4280e8e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x1ff4280e8c8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x1ff4280e8a8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x1ff4280e860 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x1ff4280e848 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x1ff4280e828 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x1ff4280e880 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x1ff4280e9a0 <.//openssl//file_jk/before\test\ssltest_old.c:2449:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x1ff4280e988 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x1ff4280e900 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | | | |     |     |-BinaryOperator 0x1ff4280ea00 <line:2450:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x1ff4280e9b8 <col:25> 'int' lvalue Var 0x1ff42818ff0 'err_in_server' 'int'
|   | | | |     |     | `-IntegerLiteral 0x1ff4280e9d8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x1ff4280ea20 <line:2451:25, col:30> 'err' 0x1ff428192d0
|   | | | |     `-IfStmt 0x1ff42816fb0 <line:2454:24, line:2461:17> has_else
|   | | | |       |-BinaryOperator 0x1ff4280eb08 <line:2454:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x1ff4280eaf0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x1ff4280eaa8 <col:28> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x1ff4280eac8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x1ff4280ed00 <col:36, line:2457:17>
|   | | | |       | |-CallExpr 0x1ff4280ec88 <line:2455:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x1ff4280ec70 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x1ff4280eb28 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x1ff4280ec00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x1ff4280ebe8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x1ff4280ebc8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x1ff4280eb80 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x1ff4280eb68 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x1ff4280eb48 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x1ff4280eba0 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x1ff4280ecd0 <.//openssl//file_jk/before\test\ssltest_old.c:2455:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x1ff4280ecb8 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x1ff4280ec20 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x1ff4280ece8 <line:2456:21, col:26> 'err' 0x1ff428192d0
|   | | | |       `-CompoundStmt 0x1ff4280ef20 <line:2457:24, line:2461:17>
|   | | | |         |-IfStmt 0x1ff4280ee68 <line:2458:21, line:2459:53>
|   | | | |         | |-ImplicitCastExpr 0x1ff4280ed40 <line:2458:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x1ff4280ed20 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | | | |         | `-CallExpr 0x1ff4280edf0 <line:2459:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280edd8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x1ff4280ed58 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x1ff4280ee38 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x1ff4280ee20 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x1ff4280ed78 <col:32> 'char [16]' lvalue "server read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x1ff4280ee50 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x1ff4280eda0 <col:52> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x1ff4280eef0 <line:2460:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x1ff4280ee80 <col:21> 'long' lvalue Var 0x1ff4281ca48 'sr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x1ff4280eed8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x1ff4280eec0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x1ff4280eea0 <col:31> 'int' lvalue Var 0x1ff4280d5c0 'r' 'int'
|   | | | `-CompoundAssignOperator 0x1ff42817180 <line:2464:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x1ff42817080 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x1ff42817068 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1ff42817030 <col:14> 'clock_t *' lvalue ParmVar 0x1ff4281c5e0 's_time' 'clock_t *'
|   | | |   `-ParenExpr 0x1ff42817160 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x1ff42817140 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x1ff428170d0 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x1ff428170b8 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x1ff42817098 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x1ff428af748 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x1ff42817128 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1ff428170f0 <col:35> 'clock_t':'long' lvalue Var 0x1ff4280d668 's_clock' 'clock_t':'long'
|   | | `-CompoundStmt 0x1ff4282afa8 <line:2467:9, line:2577:9>
|   | |   |-DeclStmt 0x1ff42817300 <line:2470:13, col:26>
|   | |   | |-VarDecl 0x1ff42817208 <col:13, col:20> col:20 used r1 'size_t':'unsigned long long'
|   | |   | `-VarDecl 0x1ff42817280 <col:13, col:24> col:24 used r2 'size_t':'unsigned long long'
|   | |   |-DeclStmt 0x1ff428173c0 <line:2477:13, col:41>
|   | |   | `-VarDecl 0x1ff42817330 <col:13, col:40> col:24 used prev_progress 'int' static cinit
|   | |   |   `-IntegerLiteral 0x1ff42817398 <col:40> 'int' 1
|   | |   |-DeclStmt 0x1ff42817480 <line:2478:13, col:29>
|   | |   | `-VarDecl 0x1ff428173f0 <col:13, col:28> col:17 used progress 'int' cinit
|   | |   |   `-IntegerLiteral 0x1ff42817458 <col:28> 'int' 0
|   | |   |-DoStmt 0x1ff42818e08 <line:2481:13, line:2518:28>
|   | |   | |-CompoundStmt 0x1ff42818d40 <line:2481:16, line:2517:13>
|   | |   | | |-DeclStmt 0x1ff42817510 <line:2482:17, col:27>
|   | |   | | | `-VarDecl 0x1ff428174a8 <col:17, col:24> col:24 used num 'size_t':'unsigned long long'
|   | |   | | |-DeclStmt 0x1ff428175a8 <line:2483:17, col:22>
|   | |   | | | `-VarDecl 0x1ff42817540 <col:17, col:21> col:21 used r 'int'
|   | |   | | |-BinaryOperator 0x1ff428178c0 <line:2488:17, col:23> 'size_t':'unsigned long long' '='
|   | |   | | | |-DeclRefExpr 0x1ff42817850 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | | | `-ImplicitCastExpr 0x1ff428178a8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x1ff42817888 <col:23> 'size_t':'unsigned long long' lvalue Var 0x1ff42817208 'r1' 'size_t':'unsigned long long'
|   | |   | | |-IfStmt 0x1ff428179e8 <line:2489:17, line:2490:27>
|   | |   | | | |-BinaryOperator 0x1ff42817950 <line:2489:21, col:26> 'int' '<'
|   | |   | | | | |-ImplicitCastExpr 0x1ff42817920 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | | | `-DeclRefExpr 0x1ff428178e0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff42817280 'r2' 'size_t':'unsigned long long'
|   | |   | | | | `-ImplicitCastExpr 0x1ff42817938 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | |   `-DeclRefExpr 0x1ff42817900 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | | | `-BinaryOperator 0x1ff428179c8 <line:2490:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | | |   |-DeclRefExpr 0x1ff42817970 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | | |   `-ImplicitCastExpr 0x1ff428179b0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |     `-DeclRefExpr 0x1ff42817990 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1ff42817280 'r2' 'size_t':'unsigned long long'
|   | |   | | `-IfStmt 0x1ff42818d28 <line:2491:17, line:2516:17>
|   | |   | |   |-ImplicitCastExpr 0x1ff42817a20 <line:2491:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |   | `-DeclRefExpr 0x1ff42817a00 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |   `-CompoundStmt 0x1ff42818ce0 <col:26, line:2516:17>
|   | |   | |     |-DeclStmt 0x1ff42817ab8 <line:2492:21, col:34>
|   | |   | |     | `-VarDecl 0x1ff42817a50 <col:21, col:27> col:27 used dataptr 'char *'
|   | |   | |     |-IfStmt 0x1ff42817be8 <line:2494:21, <built-in>:30:21>
|   | |   | |     | |-BinaryOperator 0x1ff42817b48 <col:21, .//openssl//file_jk/before\test\ssltest_old.c:2494:35> 'int' '<'
|   | |   | |     | | |-ImplicitCastExpr 0x1ff42817b30 <<built-in>:30:21> 'unsigned long long' <IntegralCast>
|   | |   | |     | | | `-IntegerLiteral 0x1ff42817ad0 <col:21> 'int' 2147483647
|   | |   | |     | | `-ImplicitCastExpr 0x1ff42817b18 <.//openssl//file_jk/before\test\ssltest_old.c:2494:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |     | |   `-DeclRefExpr 0x1ff42817af8 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-BinaryOperator 0x1ff42817bc8 <line:2495:25, <built-in>:30:21> 'size_t':'unsigned long long' '='
|   | |   | |     |   |-DeclRefExpr 0x1ff42817b68 <.//openssl//file_jk/before\test\ssltest_old.c:2495:25> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |     |   `-ImplicitCastExpr 0x1ff42817bb0 <<built-in>:30:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   | |     |     `-IntegerLiteral 0x1ff42817b88 <col:21> 'int' 2147483647
|   | |   | |     |-CStyleCastExpr 0x1ff42818258 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | |   | |     | `-ParenExpr 0x1ff42818238 <col:35, col:128> 'int'
|   | |   | |     |   `-BinaryOperator 0x1ff428181e8 <col:37, col:126> 'int' '||'
|   | |   | |     |     |-ParenExpr 0x1ff42817ee0 <col:37, col:53> 'int'
|   | |   | |     |     | `-UnaryOperator 0x1ff42817ec8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |   `-UnaryOperator 0x1ff42817eb0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |     `-ParenExpr 0x1ff42817e90 <col:40, col:52> 'int'
|   | |   | |     |     |       `-BinaryOperator 0x1ff42817e70 <.//openssl//file_jk/before\test\ssltest_old.c:2498:28, col:32> 'int' '>'
|   | |   | |     |     |         |-ImplicitCastExpr 0x1ff42817e58 <col:28> 'int' <LValueToRValue>
|   | |   | |     |     |         | `-DeclRefExpr 0x1ff42817e10 <col:28> 'int' lvalue Var 0x1ff42817540 'r' 'int'
|   | |   | |     |     |         `-IntegerLiteral 0x1ff42817e30 <col:32> 'int' 0
|   | |   | |     |     `-ParenExpr 0x1ff428181c8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   | |     |       `-BinaryOperator 0x1ff428181a8 <col:59, col:125> 'int' ','
|   | |   | |     |         |-CallExpr 0x1ff428180d0 <col:59, col:122> 'void'
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff428180b8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |         | | `-DeclRefExpr 0x1ff42817f00 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1ff426ce490 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff42818120 <<scratch space>:175:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x1ff42818108 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x1ff42817f58 <col:1> 'unsigned short [6]' lvalue L"r > 0"
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff42818150 <line:177:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x1ff42818138 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x1ff42817fb8 <col:1> 'unsigned short [46]' lvalue L".//openssl//file_jk/before\\test\\ssltest_old.c"
|   | |   | |     |         | `-ImplicitCastExpr 0x1ff42818168 <line:178:1> 'unsigned int' <IntegralCast>
|   | |   | |     |         |   `-IntegerLiteral 0x1ff42818030 <col:1> 'int' 2498
|   | |   | |     |         `-IntegerLiteral 0x1ff42818180 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   | |     |-CStyleCastExpr 0x1ff42818690 <col:29, col:128> 'void' <ToVoid>
|   | |   | |     | `-ParenExpr 0x1ff42818670 <col:35, col:128> 'int'
|   | |   | |     |   `-BinaryOperator 0x1ff42818620 <col:37, col:126> 'int' '||'
|   | |   | |     |     |-ParenExpr 0x1ff428183a0 <col:37, col:53> 'int'
|   | |   | |     |     | `-UnaryOperator 0x1ff42818388 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |   `-UnaryOperator 0x1ff42818370 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |     `-ParenExpr 0x1ff42818350 <col:40, col:52> 'int'
|   | |   | |     |     |       `-BinaryOperator 0x1ff42818330 <.//openssl//file_jk/before\test\ssltest_old.c:2499:28, col:38> 'int' '<='
|   | |   | |     |     |         |-ImplicitCastExpr 0x1ff42818318 <col:28> 'int' <LValueToRValue>
|   | |   | |     |     |         | `-DeclRefExpr 0x1ff42818280 <col:28> 'int' lvalue Var 0x1ff42817540 'r' 'int'
|   | |   | |     |     |         `-CStyleCastExpr 0x1ff428182f0 <col:33, col:38> 'int' <IntegralCast>
|   | |   | |     |     |           `-ImplicitCastExpr 0x1ff428182d8 <col:38> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   | |     |     |             `-DeclRefExpr 0x1ff428182a0 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |     |     `-ParenExpr 0x1ff42818600 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   | |     |       `-BinaryOperator 0x1ff428185e0 <col:59, col:125> 'int' ','
|   | |   | |     |         |-CallExpr 0x1ff42818508 <col:59, col:122> 'void'
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff428184f0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |         | | `-DeclRefExpr 0x1ff428183c0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1ff426ce490 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff42818558 <<scratch space>:180:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x1ff42818540 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x1ff42818418 <col:1> 'unsigned short [14]' lvalue L"r <= (int)num"
|   | |   | |     |         | |-ImplicitCastExpr 0x1ff42818588 <line:182:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x1ff42818570 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x1ff42818450 <col:1> 'unsigned short [46]' lvalue L".//openssl//file_jk/before\\test\\ssltest_old.c"
|   | |   | |     |         | `-ImplicitCastExpr 0x1ff428185a0 <line:183:1> 'unsigned int' <IntegralCast>
|   | |   | |     |         |   `-IntegerLiteral 0x1ff428184c8 <col:1> 'int' 2499
|   | |   | |     |         `-IntegerLiteral 0x1ff428185b8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   | |     |-BinaryOperator 0x1ff42818728 <.//openssl//file_jk/before\test\ssltest_old.c:2503:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | |     | |-DeclRefExpr 0x1ff428186b8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-ImplicitCastExpr 0x1ff42818710 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | |   | |     |   `-ImplicitCastExpr 0x1ff428186f8 <col:27> 'int' <LValueToRValue>
|   | |   | |     |     `-DeclRefExpr 0x1ff428186d8 <col:27> 'int' lvalue Var 0x1ff42817540 'r' 'int'
|   | |   | |     |-IfStmt 0x1ff42818b18 <line:2505:21, line:2509:21>
|   | |   | |     | |-BinaryOperator 0x1ff428188d0 <line:2505:25, col:35> 'int' '!='
|   | |   | |     | | |-ImplicitCastExpr 0x1ff428188b8 <col:25> 'int' <LValueToRValue>
|   | |   | |     | | | `-DeclRefExpr 0x1ff42818820 <col:25> 'int' lvalue Var 0x1ff42817540 'r' 'int'
|   | |   | |     | | `-CStyleCastExpr 0x1ff42818890 <col:30, col:35> 'int' <IntegralCast>
|   | |   | |     | |   `-ImplicitCastExpr 0x1ff42818878 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   | |     | |     `-DeclRefExpr 0x1ff42818840 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ff428174a8 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-CompoundStmt 0x1ff42818af8 <col:40, line:2509:21>
|   | |   | |     |   |-CallExpr 0x1ff42818a80 <line:2506:25, line:2507:71> 'int'
|   | |   | |     |   | |-ImplicitCastExpr 0x1ff42818a68 <line:2506:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   | |     |   | | `-DeclRefExpr 0x1ff428188f0 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   | |     |   | |-ParenExpr 0x1ff428189c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   | |     |   | | `-UnaryOperator 0x1ff428189b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   | |     |   | |   `-ArraySubscriptExpr 0x1ff42818990 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   | |     |   | |     |-CallExpr 0x1ff42818948 <col:18, col:29> 'FILE *'
|   | |   | |     |   | |     | `-ImplicitCastExpr 0x1ff42818930 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |   | |     |   `-DeclRefExpr 0x1ff42818910 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   | |     |   | |     `-IntegerLiteral 0x1ff42818968 <col:31> 'int' 2
|   | |   | |     |   | `-ImplicitCastExpr 0x1ff42818ac8 <.//openssl//file_jk/before\test\ssltest_old.c:2506:41, line:2507:33> 'const char *' <NoOp>
|   | |   | |     |   |   `-ImplicitCastExpr 0x1ff42818ab0 <line:2506:41, line:2507:33> 'char *' <ArrayToPointerDecay>
|   | |   | |     |   |     `-StringLiteral 0x1ff428189e8 <line:2506:41, line:2507:33> 'char [70]' lvalue "ERROR: BIO_write could not write BIO_ctrl_get_write_guarantee() bytes"
|   | |   | |     |   `-GotoStmt 0x1ff42818ae0 <line:2508:25, col:30> 'err' 0x1ff428192d0
|   | |   | |     `-BinaryOperator 0x1ff42818b90 <line:2510:21, col:32> 'int' '='
|   | |   | |       |-DeclRefExpr 0x1ff42818b30 <col:21> 'int' lvalue Var 0x1ff428173f0 'progress' 'int'
|   | |   | |       `-IntegerLiteral 0x1ff42818b68 <col:32> 'int' 1
|   | |   | `-BinaryOperator 0x1ff42818de8 <line:2518:20, col:26> 'int' '&&'
|   | |   |   |-ImplicitCastExpr 0x1ff42818db8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1ff42818d78 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1ff42817208 'r1' 'size_t':'unsigned long long'
|   | |   |   `-ImplicitCastExpr 0x1ff42818dd0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1ff42818d98 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1ff42817280 'r2' 'size_t':'unsigned long long'
|   | |   |-CompoundStmt 0x1ff4282a790 <line:2521:13, line:2567:13>
|   | |   | |-DeclStmt 0x1ff42818ea0 <line:2522:17, col:27>
|   | |   | | `-VarDecl 0x1ff42818e38 <col:17, col:24> col:24 used num 'size_t':'unsigned long long'
|   | |   | |-DeclStmt 0x1ff42818f38 <line:2523:17, col:22>
|   | |   | | `-VarDecl 0x1ff42818ed0 <col:17, col:21> col:21 used r 'int'
|   | |   | |-BinaryOperator 0x1ff428291c0 <line:2532:17, col:23> 'size_t':'unsigned long long' '='
|   | |   | | |-DeclRefExpr 0x1ff42829150 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   | | `-ImplicitCastExpr 0x1ff428291a8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1ff42829188 <col:23> 'size_t':'unsigned long long' lvalue Var 0x1ff42817208 'r1' 'size_t':'unsigned long long'
|   | |   | |-IfStmt 0x1ff428292e8 <line:2533:17, line:2534:27>
|   | |   | | |-BinaryOperator 0x1ff42829250 <line:2533:21, col:26> 'int' '<'
|   | |   | | | |-ImplicitCastExpr 0x1ff42829220 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | | `-DeclRefExpr 0x1ff428291e0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff42817280 'r2' 'size_t':'unsigned long long'
|   | |   | | | `-ImplicitCastExpr 0x1ff42829238 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x1ff42829200 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   | | `-BinaryOperator 0x1ff428292c8 <line:2534:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | |   |-DeclRefExpr 0x1ff42829270 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   | |   `-ImplicitCastExpr 0x1ff428292b0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x1ff42829290 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1ff42817280 'r2' 'size_t':'unsigned long long'
|   | |   | `-IfStmt 0x1ff4282a778 <line:2535:17, line:2566:17>
|   | |   |   |-ImplicitCastExpr 0x1ff42829320 <line:2535:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1ff42829300 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |   `-CompoundStmt 0x1ff4282a728 <col:26, line:2566:17>
|   | |   |     |-DeclStmt 0x1ff428293b8 <line:2536:21, col:34>
|   | |   |     | `-VarDecl 0x1ff42829350 <col:21, col:27> col:27 used dataptr 'char *'
|   | |   |     |-IfStmt 0x1ff428294e8 <line:2538:21, <built-in>:30:21>
|   | |   |     | |-BinaryOperator 0x1ff42829448 <col:21, .//openssl//file_jk/before\test\ssltest_old.c:2538:35> 'int' '<'
|   | |   |     | | |-ImplicitCastExpr 0x1ff42829430 <<built-in>:30:21> 'unsigned long long' <IntegralCast>
|   | |   |     | | | `-IntegerLiteral 0x1ff428293d0 <col:21> 'int' 2147483647
|   | |   |     | | `-ImplicitCastExpr 0x1ff42829418 <.//openssl//file_jk/before\test\ssltest_old.c:2538:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | |   `-DeclRefExpr 0x1ff428293f8 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x1ff428294c8 <line:2539:25, <built-in>:30:21> 'size_t':'unsigned long long' '='
|   | |   |     |   |-DeclRefExpr 0x1ff42829468 <.//openssl//file_jk/before\test\ssltest_old.c:2539:25> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     |   `-ImplicitCastExpr 0x1ff428294b0 <<built-in>:30:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   |     |     `-IntegerLiteral 0x1ff42829488 <col:21> 'int' 2147483647
|   | |   |     |-IfStmt 0x1ff428295d0 <.//openssl//file_jk/before\test\ssltest_old.c:2541:21, line:2542:27>
|   | |   |     | |-BinaryOperator 0x1ff42829578 <line:2541:25, col:31> 'int' '>'
|   | |   |     | | |-ImplicitCastExpr 0x1ff42829548 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x1ff42829500 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     | | `-ImplicitCastExpr 0x1ff42829560 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |     | |   `-IntegerLiteral 0x1ff42829520 <col:31> 'int' 1
|   | |   |     | `-UnaryOperator 0x1ff428295b8 <line:2542:25, col:27> 'size_t':'unsigned long long' prefix '--'
|   | |   |     |   `-DeclRefExpr 0x1ff42829598 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     |-CStyleCastExpr 0x1ff42829af8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | |   |     | `-ParenExpr 0x1ff42829ad8 <col:35, col:128> 'int'
|   | |   |     |   `-BinaryOperator 0x1ff42829a88 <col:37, col:126> 'int' '||'
|   | |   |     |     |-ParenExpr 0x1ff42829850 <col:37, col:53> 'int'
|   | |   |     |     | `-UnaryOperator 0x1ff42829838 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   |     |     |   `-UnaryOperator 0x1ff42829820 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   |     |     |     `-ParenExpr 0x1ff42829800 <col:40, col:52> 'int'
|   | |   |     |     |       `-BinaryOperator 0x1ff428297e0 <.//openssl//file_jk/before\test\ssltest_old.c:2545:28, col:32> 'int' '>'
|   | |   |     |     |         |-ImplicitCastExpr 0x1ff428297c8 <col:28> 'int' <LValueToRValue>
|   | |   |     |     |         | `-DeclRefExpr 0x1ff42829780 <col:28> 'int' lvalue Var 0x1ff42818ed0 'r' 'int'
|   | |   |     |     |         `-IntegerLiteral 0x1ff428297a0 <col:32> 'int' 0
|   | |   |     |     `-ParenExpr 0x1ff42829a68 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   |     |       `-BinaryOperator 0x1ff42829a48 <col:59, col:125> 'int' ','
|   | |   |     |         |-CallExpr 0x1ff42829970 <col:59, col:122> 'void'
|   | |   |     |         | |-ImplicitCastExpr 0x1ff42829958 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |         | | `-DeclRefExpr 0x1ff42829870 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1ff426ce490 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   |     |         | |-ImplicitCastExpr 0x1ff428299c0 <<scratch space>:185:1> 'const wchar_t *' <NoOp>
|   | |   |     |         | | `-ImplicitCastExpr 0x1ff428299a8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   |     |         | |   `-StringLiteral 0x1ff42829890 <col:1> 'unsigned short [6]' lvalue L"r > 0"
|   | |   |     |         | |-ImplicitCastExpr 0x1ff428299f0 <line:187:1> 'const wchar_t *' <NoOp>
|   | |   |     |         | | `-ImplicitCastExpr 0x1ff428299d8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   |     |         | |   `-StringLiteral 0x1ff428298b8 <col:1> 'unsigned short [46]' lvalue L".//openssl//file_jk/before\\test\\ssltest_old.c"
|   | |   |     |         | `-ImplicitCastExpr 0x1ff42829a08 <line:188:1> 'unsigned int' <IntegralCast>
|   | |   |     |         |   `-IntegerLiteral 0x1ff42829930 <col:1> 'int' 2545
|   | |   |     |         `-IntegerLiteral 0x1ff42829a20 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   |     |-IfStmt 0x1ff42829c80 <.//openssl//file_jk/before\test\ssltest_old.c:2546:21, line:2547:31>
|   | |   |     | |-BinaryOperator 0x1ff42829bd0 <line:2546:25, col:34> 'int' '<'
|   | |   |     | | |-ImplicitCastExpr 0x1ff42829bb8 <col:25> 'int' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x1ff42829b20 <col:25> 'int' lvalue Var 0x1ff42818ed0 'r' 'int'
|   | |   |     | | `-CStyleCastExpr 0x1ff42829b90 <col:29, col:34> 'int' <IntegralCast>
|   | |   |     | |   `-ImplicitCastExpr 0x1ff42829b78 <col:34> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |     | |     `-DeclRefExpr 0x1ff42829b40 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x1ff42829c60 <line:2547:25, col:31> 'size_t':'unsigned long long' '='
|   | |   |     |   |-DeclRefExpr 0x1ff42829bf0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     |   `-ImplicitCastExpr 0x1ff42829c48 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|   | |   |     |     `-ImplicitCastExpr 0x1ff42829c30 <col:31> 'int' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x1ff42829c10 <col:31> 'int' lvalue Var 0x1ff42818ed0 'r' 'int'
|   | |   |     |-IfStmt 0x1ff4282a098 <line:2549:21, line:2553:21>
|   | |   |     | |-BinaryOperator 0x1ff42829e20 <line:2549:25, col:35> 'int' '!='
|   | |   |     | | |-ImplicitCastExpr 0x1ff42829e08 <col:25> 'int' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x1ff42829d70 <col:25> 'int' lvalue Var 0x1ff42818ed0 'r' 'int'
|   | |   |     | | `-CStyleCastExpr 0x1ff42829de0 <col:30, col:35> 'int' <IntegralCast>
|   | |   |     | |   `-ImplicitCastExpr 0x1ff42829dc8 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |     | |     `-DeclRefExpr 0x1ff42829d90 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |     | `-CompoundStmt 0x1ff4282a078 <col:40, line:2553:21>
|   | |   |     |   |-CallExpr 0x1ff4282a000 <line:2550:25, line:2551:59> 'int'
|   | |   |     |   | |-ImplicitCastExpr 0x1ff42829fe8 <line:2550:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |   | | `-DeclRefExpr 0x1ff42829e40 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |   | |-ParenExpr 0x1ff42829f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |   | | `-UnaryOperator 0x1ff42829f00 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |   | |   `-ArraySubscriptExpr 0x1ff42829ee0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |   | |     |-CallExpr 0x1ff42829e98 <col:18, col:29> 'FILE *'
|   | |   |     |   | |     | `-ImplicitCastExpr 0x1ff42829e80 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |   | |     |   `-DeclRefExpr 0x1ff42829e60 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |   | |     `-IntegerLiteral 0x1ff42829eb8 <col:31> 'int' 2
|   | |   |     |   | `-ImplicitCastExpr 0x1ff4282a048 <.//openssl//file_jk/before\test\ssltest_old.c:2550:41, line:2551:33> 'const char *' <NoOp>
|   | |   |     |   |   `-ImplicitCastExpr 0x1ff4282a030 <line:2550:41, line:2551:33> 'char *' <ArrayToPointerDecay>
|   | |   |     |   |     `-StringLiteral 0x1ff42829f78 <line:2550:41, line:2551:33> 'char [56]' lvalue "ERROR: BIO_read could not read BIO_ctrl_pending() bytes"
|   | |   |     |   `-GotoStmt 0x1ff4282a060 <line:2552:25, col:30> 'err' 0x1ff428192d0
|   | |   |     |-BinaryOperator 0x1ff4282a0f8 <line:2554:21, col:32> 'int' '='
|   | |   |     | |-DeclRefExpr 0x1ff4282a0b0 <col:21> 'int' lvalue Var 0x1ff428173f0 'progress' 'int'
|   | |   |     | `-IntegerLiteral 0x1ff4282a0d0 <col:32> 'int' 1
|   | |   |     `-IfStmt 0x1ff4282a5e0 <line:2556:21, line:2560:21>
|   | |   |       |-BinaryOperator 0x1ff4282a3a8 <line:2556:25, col:35> 'int' '!='
|   | |   |       | |-ImplicitCastExpr 0x1ff4282a390 <col:25> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x1ff4282a2f8 <col:25> 'int' lvalue Var 0x1ff42818ed0 'r' 'int'
|   | |   |       | `-CStyleCastExpr 0x1ff4282a368 <col:30, col:35> 'int' <IntegralCast>
|   | |   |       |   `-ImplicitCastExpr 0x1ff4282a350 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |       |     `-DeclRefExpr 0x1ff4282a318 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1ff42818e38 'num' 'size_t':'unsigned long long'
|   | |   |       `-CompoundStmt 0x1ff4282a5c0 <col:40, line:2560:21>
|   | |   |         |-CallExpr 0x1ff4282a548 <line:2557:25, line:2558:54> 'int'
|   | |   |         | |-ImplicitCastExpr 0x1ff4282a530 <line:2557:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |         | | `-DeclRefExpr 0x1ff4282a3c8 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |         | |-ParenExpr 0x1ff4282a4a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |         | | `-UnaryOperator 0x1ff4282a488 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |         | |   `-ArraySubscriptExpr 0x1ff4282a468 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |         | |     |-CallExpr 0x1ff4282a420 <col:18, col:29> 'FILE *'
|   | |   |         | |     | `-ImplicitCastExpr 0x1ff4282a408 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |         | |     |   `-DeclRefExpr 0x1ff4282a3e8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |         | |     `-IntegerLiteral 0x1ff4282a440 <col:31> 'int' 2
|   | |   |         | `-ImplicitCastExpr 0x1ff4282a590 <.//openssl//file_jk/before\test\ssltest_old.c:2557:41, line:2558:33> 'const char *' <NoOp>
|   | |   |         |   `-ImplicitCastExpr 0x1ff4282a578 <line:2557:41, line:2558:33> 'char *' <ArrayToPointerDecay>
|   | |   |         |     `-StringLiteral 0x1ff4282a4c0 <line:2557:41, line:2558:33> 'char [55]' lvalue "ERROR: BIO_nwrite() did not accept BIO_nwrite0() bytes"
|   | |   |         `-GotoStmt 0x1ff4282a5a8 <line:2559:25, col:30> 'err' 0x1ff428192d0
|   | |   |-IfStmt 0x1ff4282af18 <line:2570:13, line:2575:17>
|   | |   | |-BinaryOperator 0x1ff4282a880 <line:2570:17, col:31> 'int' '&&'
|   | |   | | |-UnaryOperator 0x1ff4282a800 <col:17, col:18> 'int' prefix '!' cannot overflow
|   | |   | | | `-ImplicitCastExpr 0x1ff4282a7e8 <col:18> 'int' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x1ff4282a7c8 <col:18> 'int' lvalue Var 0x1ff428173f0 'progress' 'int'
|   | |   | | `-UnaryOperator 0x1ff4282a868 <col:30, col:31> 'int' prefix '!' cannot overflow
|   | |   | |   `-ImplicitCastExpr 0x1ff4282a850 <col:31> 'int' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x1ff4282a818 <col:31> 'int' lvalue Var 0x1ff42817330 'prev_progress' 'int'
|   | |   | `-IfStmt 0x1ff4282af00 <line:2571:17, line:2575:17>
|   | |   |   |-BinaryOperator 0x1ff4282ab40 <line:2571:21, col:72> 'int' '||'
|   | |   |   | |-BinaryOperator 0x1ff4282aa88 <col:21, col:58> 'int' '||'
|   | |   |   | | |-BinaryOperator 0x1ff4282a9d0 <col:21, col:44> 'int' '||'
|   | |   |   | | | |-BinaryOperator 0x1ff4282a918 <col:21, col:30> 'int' '>'
|   | |   |   | | | | |-ImplicitCastExpr 0x1ff4282a8e8 <col:21> 'long' <LValueToRValue>
|   | |   |   | | | | | `-DeclRefExpr 0x1ff4282a8a0 <col:21> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   | |   |   | | | | `-ImplicitCastExpr 0x1ff4282a900 <col:30> 'long' <IntegralCast>
|   | |   |   | | | |   `-IntegerLiteral 0x1ff4282a8c0 <col:30> 'int' 0
|   | |   |   | | | `-BinaryOperator 0x1ff4282a9b0 <col:35, col:44> 'int' '>'
|   | |   |   | | |   |-ImplicitCastExpr 0x1ff4282a980 <col:35> 'long' <LValueToRValue>
|   | |   |   | | |   | `-DeclRefExpr 0x1ff4282a938 <col:35> 'long' lvalue Var 0x1ff4281c8d8 'cr_num' 'long'
|   | |   |   | | |   `-ImplicitCastExpr 0x1ff4282a998 <col:44> 'long' <IntegralCast>
|   | |   |   | | |     `-IntegerLiteral 0x1ff4282a958 <col:44> 'int' 0
|   | |   |   | | `-BinaryOperator 0x1ff4282aa68 <col:49, col:58> 'int' '>'
|   | |   |   | |   |-ImplicitCastExpr 0x1ff4282aa38 <col:49> 'long' <LValueToRValue>
|   | |   |   | |   | `-DeclRefExpr 0x1ff4282a9f0 <col:49> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   | |   |   | |   `-ImplicitCastExpr 0x1ff4282aa50 <col:58> 'long' <IntegralCast>
|   | |   |   | |     `-IntegerLiteral 0x1ff4282aa10 <col:58> 'int' 0
|   | |   |   | `-BinaryOperator 0x1ff4282ab20 <col:63, col:72> 'int' '>'
|   | |   |   |   |-ImplicitCastExpr 0x1ff4282aaf0 <col:63> 'long' <LValueToRValue>
|   | |   |   |   | `-DeclRefExpr 0x1ff4282aaa8 <col:63> 'long' lvalue Var 0x1ff4281ca48 'sr_num' 'long'
|   | |   |   |   `-ImplicitCastExpr 0x1ff4282ab08 <col:72> 'long' <IntegralCast>
|   | |   |   |     `-IntegerLiteral 0x1ff4282aac8 <col:72> 'int' 0
|   | |   |   `-CompoundStmt 0x1ff4282aed8 <col:75, line:2575:17>
|   | |   |     |-CallExpr 0x1ff4282acb8 <line:2572:21, col:57> 'int'
|   | |   |     | |-ImplicitCastExpr 0x1ff4282aca0 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     | | `-DeclRefExpr 0x1ff4282ab60 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     | |-ParenExpr 0x1ff4282ac38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     | | `-UnaryOperator 0x1ff4282ac20 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     | |   `-ArraySubscriptExpr 0x1ff4282ac00 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     | |     |-CallExpr 0x1ff4282abb8 <col:18, col:29> 'FILE *'
|   | |   |     | |     | `-ImplicitCastExpr 0x1ff4282aba0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     | |     |   `-DeclRefExpr 0x1ff4282ab80 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     | |     `-IntegerLiteral 0x1ff4282abd8 <col:31> 'int' 2
|   | |   |     | `-ImplicitCastExpr 0x1ff4282ad00 <.//openssl//file_jk/before\test\ssltest_old.c:2572:37> 'const char *' <NoOp>
|   | |   |     |   `-ImplicitCastExpr 0x1ff4282ace8 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |     |     `-StringLiteral 0x1ff4282ac58 <col:37> 'char [18]' lvalue "ERROR: got stuck\n"
|   | |   |     |-CallExpr 0x1ff4282ae60 <line:2573:21, col:48> 'int'
|   | |   |     | |-ImplicitCastExpr 0x1ff4282ae48 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     | | `-DeclRefExpr 0x1ff4282ad18 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     | |-ParenExpr 0x1ff4282adf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     | | `-UnaryOperator 0x1ff4282add8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     | |   `-ArraySubscriptExpr 0x1ff4282adb8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     | |     |-CallExpr 0x1ff4282ad70 <col:18, col:29> 'FILE *'
|   | |   |     | |     | `-ImplicitCastExpr 0x1ff4282ad58 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     | |     |   `-DeclRefExpr 0x1ff4282ad38 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     | |     `-IntegerLiteral 0x1ff4282ad90 <col:31> 'int' 2
|   | |   |     | `-ImplicitCastExpr 0x1ff4282aea8 <.//openssl//file_jk/before\test\ssltest_old.c:2573:37> 'const char *' <NoOp>
|   | |   |     |   `-ImplicitCastExpr 0x1ff4282ae90 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |     |     `-StringLiteral 0x1ff4282ae10 <col:37> 'char [9]' lvalue " ERROR.\n"
|   | |   |     `-GotoStmt 0x1ff4282aec0 <line:2574:21, col:26> 'err' 0x1ff428192d0
|   | |   `-BinaryOperator 0x1ff4282af88 <line:2576:13, col:29> 'int' '='
|   | |     |-DeclRefExpr 0x1ff4282af30 <col:13> 'int' lvalue Var 0x1ff42817330 'prev_progress' 'int'
|   | |     `-ImplicitCastExpr 0x1ff4282af70 <col:29> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1ff4282af50 <col:29> 'int' lvalue Var 0x1ff428173f0 'progress' 'int'
|   | `-BinaryOperator 0x1ff42823290 <line:2579:12, col:63> 'int' '||'
|   |   |-BinaryOperator 0x1ff428231d8 <col:12, col:49> 'int' '||'
|   |   | |-BinaryOperator 0x1ff42823120 <col:12, col:35> 'int' '||'
|   |   | | |-BinaryOperator 0x1ff42823068 <col:12, col:21> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x1ff42823038 <col:12> 'long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1ff4282b018 <col:12> 'long' lvalue Var 0x1ff4281c808 'cw_num' 'long'
|   |   | | | `-ImplicitCastExpr 0x1ff42823050 <col:21> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1ff42823010 <col:21> 'int' 0
|   |   | | `-BinaryOperator 0x1ff42823100 <col:26, col:35> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x1ff428230d0 <col:26> 'long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1ff42823088 <col:26> 'long' lvalue Var 0x1ff4281c8d8 'cr_num' 'long'
|   |   | |   `-ImplicitCastExpr 0x1ff428230e8 <col:35> 'long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x1ff428230a8 <col:35> 'int' 0
|   |   | `-BinaryOperator 0x1ff428231b8 <col:40, col:49> 'int' '>'
|   |   |   |-ImplicitCastExpr 0x1ff42823188 <col:40> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ff42823140 <col:40> 'long' lvalue Var 0x1ff4281c990 'sw_num' 'long'
|   |   |   `-ImplicitCastExpr 0x1ff428231a0 <col:49> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1ff42823160 <col:49> 'int' 0
|   |   `-BinaryOperator 0x1ff42823270 <col:54, col:63> 'int' '>'
|   |     |-ImplicitCastExpr 0x1ff42823240 <col:54> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff428231f8 <col:54> 'long' lvalue Var 0x1ff4281ca48 'sr_num' 'long'
|   |     `-ImplicitCastExpr 0x1ff42823258 <col:63> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff42823218 <col:63> 'int' 0
|   |-IfStmt 0x1ff42823480 <line:2584:5, line:2587:5>
|   | |-OpaqueValueExpr 0x1ff42823468 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42823448 <line:2584:39, line:2587:5>
|   |   |-BinaryOperator 0x1ff428233c0 <line:2585:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff42823360 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff42823398 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff42823430 <line:2586:9, col:14> 'end' 0x1ff428233e0
|   |-IfStmt 0x1ff428237a0 <line:2589:5, line:2593:5>
|   | |-BinaryOperator 0x1ff42823518 <line:2589:9, col:31> 'int' '<'
|   | | |-CallExpr 0x1ff428234d0 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x1ff428234b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x1ff42823498 <col:9> 'int ()' Function 0x1ff427cf998 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x1ff428234f0 <col:31> 'int' 0
|   | `-CompoundStmt 0x1ff42823778 <col:34, line:2593:5>
|   |   |-CallExpr 0x1ff42823698 <line:2590:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x1ff42823680 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff42823538 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff42823610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff428235f8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff428235d8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff42823590 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff42823578 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff42823558 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff428235b0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff428236e0 <.//openssl//file_jk/before\test\ssltest_old.c:2590:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff428236c8 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff42823630 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x1ff42823740 <line:2591:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff428236f8 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff42823718 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff42823760 <line:2592:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff42823898 <line:2594:5, line:2597:5>
|   | |-OpaqueValueExpr 0x1ff42823880 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42823860 <line:2594:40, line:2597:5>
|   |   |-BinaryOperator 0x1ff42823828 <line:2595:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff428237e0 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff42823800 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff42823848 <line:2596:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff42823990 <line:2598:5, line:2601:5>
|   | |-OpaqueValueExpr 0x1ff42823978 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42823958 <line:2598:46, line:2601:5>
|   |   |-BinaryOperator 0x1ff42823920 <line:2599:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff428238d8 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff428238f8 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff42823940 <line:2600:9, col:14> 'err' 0x1ff428192d0
|   |-IfStmt 0x1ff42823c40 <line:2603:5, line:2607:5>
|   | |-ImplicitCastExpr 0x1ff428239c8 <line:2603:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff428239a8 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x1ff42823c18 <col:27, line:2607:5>
|   |   |-CallExpr 0x1ff42823b38 <line:2604:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x1ff42823b20 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff428239e0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff42823ab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff42823aa0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff42823a80 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff42823a38 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff42823a20 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff42823a00 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff42823a58 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff42823b80 <.//openssl//file_jk/before\test\ssltest_old.c:2604:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff42823b68 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff42823ad8 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x1ff42823be0 <line:2605:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff42823b98 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff42823bb8 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff42823c00 <line:2606:9, col:14> 'err' 0x1ff428192d0
|   |-LabelStmt 0x1ff42823cc0 <line:2610:2, line:2612:11> 'end'
|   | `-BinaryOperator 0x1ff42823ca0 <col:5, col:11> 'int' '='
|   |   |-DeclRefExpr 0x1ff42823c58 <col:5> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |   `-IntegerLiteral 0x1ff42823c78 <col:11> 'int' 0
|   |-LabelStmt 0x1ff42823d00 <line:2614:2, col:5> 'err'
|   | `-NullStmt 0x1ff42823cf8 <col:5>
|   |-IfStmt 0x1ff428245c0 <line:2624:5, line:2627:42> has_else
|   | |-BinaryOperator 0x1ff42824040 <line:2624:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x1ff42823eb0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff42823e80 <.//openssl//file_jk/before\test\ssltest_old.c:2624:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff42823dd8 <col:9> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x1ff42823e98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff42823e60 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff42823e38 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff42823df8 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff42824020 <.//openssl//file_jk/before\test\ssltest_old.c:2624:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x1ff42823f80 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff42823f68 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff42823ed0 <col:37> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1ff42823fb0 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1ff42823ef0 <col:44> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1ff42823fe0 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1ff42823fc8 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1ff42823f10 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x1ff42823ff8 <col:80> 'int' 0
|   | |-BinaryOperator 0x1ff428241a0 <line:2625:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x1ff42824060 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   | | `-ConditionalOperator 0x1ff42824170 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x1ff42824100 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x1ff428240e0 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x1ff428240c8 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1ff42824080 <col:16> 'int' lvalue Var 0x1ff4281cf30 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x1ff428240a0 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x1ff42824120 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x1ff42824148 <col:42> 'int' 1
|   | `-IfStmt 0x1ff428245a8 <line:2626:10, line:2627:42>
|   |   |-BinaryOperator 0x1ff42824428 <line:2626:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x1ff42824298 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff42824268 <.//openssl//file_jk/before\test\ssltest_old.c:2626:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff428241c0 <col:14> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x1ff42824280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff42824248 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff42824220 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff428241e0 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x1ff42824408 <.//openssl//file_jk/before\test\ssltest_old.c:2626:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x1ff42824368 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff42824350 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff428242b8 <col:42> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x1ff42824398 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1ff428242d8 <col:49> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1ff428243c8 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1ff428243b0 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1ff428242f8 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x1ff428243e0 <col:85> 'int' 0
|   |   `-BinaryOperator 0x1ff42824588 <line:2627:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x1ff42824448 <col:9> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|   |     `-ConditionalOperator 0x1ff42824558 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x1ff428244e8 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x1ff428244c8 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x1ff428244b0 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ff42824468 <col:16> 'int' lvalue Var 0x1ff42818ff0 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x1ff42824488 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x1ff42824508 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x1ff42824530 <col:42> 'int' 1
|   `-ReturnStmt 0x1ff42824620 <line:2629:5, col:12>
|     `-ImplicitCastExpr 0x1ff42824608 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff428245e8 <col:12> 'int' lvalue Var 0x1ff4281ce70 'ret' 'int'
|-FunctionDecl 0x1ff42824898 <line:2637:1, line:2931:1> line:2637:5 invalid doit 'int (int *, int *, long)'
| |-ParmVarDecl 0x1ff428246f0 <col:10, col:15> col:15 invalid s_ssl 'int *'
| |-ParmVarDecl 0x1ff42824770 <col:22, col:27> col:27 invalid c_ssl 'int *'
| |-ParmVarDecl 0x1ff428247f0 <col:34, col:39> col:39 used count 'long'
| `-CompoundStmt 0x1ff42827848 <line:2638:1, line:2931:1>
|   |-DeclStmt 0x1ff42824bc0 <line:2639:5, col:36>
|   | |-VarDecl 0x1ff42824980 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:2639:11 used cbuf 'char *' cinit
|   | | `-ImplicitCastExpr 0x1ff42824a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1ff42824a50 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42824a28 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff428249e8 <col:26> 'int' 0
|   | `-VarDecl 0x1ff42824aa0 <.//openssl//file_jk/before\test\ssltest_old.c:2639:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:2639:25 used sbuf 'char *' cinit
|   |   `-ImplicitCastExpr 0x1ff42824b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1ff42824b70 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ff42824b48 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ff42824b08 <col:26> 'int' 0
|   |-DeclStmt 0x1ff42824c58 <.//openssl//file_jk/before\test\ssltest_old.c:2640:5, col:16>
|   | `-VarDecl 0x1ff42824bf0 <col:5, col:10> col:10 used bufsiz 'long'
|   |-DeclStmt 0x1ff42824e10 <line:2641:5, col:40>
|   | |-VarDecl 0x1ff42824c88 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff42824d28 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff42824cf0 <col:19> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   | `-VarDecl 0x1ff42824d58 <col:5, col:35> col:26 used cr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x1ff42824de0 <col:35> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff42824dc0 <col:35> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   |-DeclStmt 0x1ff42824fb0 <line:2642:5, col:40>
|   | |-VarDecl 0x1ff42824e40 <col:5, col:19> col:10 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x1ff42824ec8 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff42824ea8 <col:19> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   | `-VarDecl 0x1ff42824ef8 <col:5, col:35> col:26 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x1ff42824f80 <col:35> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff42824f60 <col:35> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   |-DeclStmt 0x1ff42821090 <line:2643:5, col:16>
|   | `-VarDecl 0x1ff42821000 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ff42821068 <col:15> 'int' 1
|   |-DeclStmt 0x1ff428214f0 <line:2648:5, col:27>
|   | |-VarDecl 0x1ff428212e0 <col:5, col:9> col:9 used c_r 'int'
|   | |-VarDecl 0x1ff42821360 <col:5, col:14> col:14 used c_w 'int'
|   | |-VarDecl 0x1ff428213e0 <col:5, col:19> col:19 used s_r 'int'
|   | `-VarDecl 0x1ff42821460 <col:5, col:24> col:24 used s_w 'int'
|   |-DeclStmt 0x1ff42821620 <line:2649:5, col:13>
|   | |-VarDecl 0x1ff42821520 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1ff428215a0 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x1ff428216e0 <line:2650:5, col:17>
|   | `-VarDecl 0x1ff42821650 <col:5, col:16> col:9 used done 'int' cinit
|   |   `-IntegerLiteral 0x1ff428216b8 <col:16> 'int' 0
|   |-DeclStmt 0x1ff42821810 <line:2651:5, col:25>
|   | |-VarDecl 0x1ff42821710 <col:5, col:9> col:9 used c_write 'int'
|   | `-VarDecl 0x1ff42821790 <col:5, col:18> col:18 used s_write 'int'
|   |-DeclStmt 0x1ff42821990 <line:2652:5, col:37>
|   | |-VarDecl 0x1ff42821840 <col:5, col:21> col:9 used do_server 'int' cinit
|   | | `-IntegerLiteral 0x1ff428218a8 <col:21> 'int' 0
|   | `-VarDecl 0x1ff428218e8 <col:5, col:36> col:24 used do_client 'int' cinit
|   |   `-IntegerLiteral 0x1ff42821950 <col:36> 'int' 0
|   |-DeclStmt 0x1ff42821a98 <line:2653:5, col:28>
|   | `-VarDecl 0x1ff428219c0 <col:5, col:24> col:9 used max_frag 'int' cinit
|   |   `-BinaryOperator 0x1ff42821a78 <col:20, col:24> 'int' '*'
|   |     |-IntegerLiteral 0x1ff42821a28 <col:20> 'int' 5
|   |     `-IntegerLiteral 0x1ff42821a50 <col:24> 'int' 1024
|   |-DeclStmt 0x1ff42821b58 <line:2654:5, col:26>
|   | `-VarDecl 0x1ff42821ac8 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x1ff42821b30 <col:25> 'int' 0
|   |-DeclStmt 0x1ff42821c18 <line:2655:5, col:26>
|   | `-VarDecl 0x1ff42821b88 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x1ff42821bf0 <col:25> 'int' 0
|   |-BinaryOperator 0x1ff42821e38 <line:2657:5, col:46> 'long' '='
|   | |-DeclRefExpr 0x1ff42821c30 <col:5> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   | `-ConditionalOperator 0x1ff42821e08 <col:14, col:46> 'long'
|   |   |-BinaryOperator 0x1ff42821d28 <col:14, col:27> 'int' '>'
|   |   | |-ImplicitCastExpr 0x1ff42821cf8 <col:14> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ff42821c68 <col:14> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   |   | `-ImplicitCastExpr 0x1ff42821d10 <col:22, col:27> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1ff42821cd8 <col:22, col:27> 'int' '*'
|   |   |     |-IntegerLiteral 0x1ff42821c88 <col:22> 'int' 40
|   |   |     `-IntegerLiteral 0x1ff42821cb0 <col:27> 'int' 1024
|   |   |-ImplicitCastExpr 0x1ff42821df0 <col:34, col:39> 'long' <IntegralCast>
|   |   | `-BinaryOperator 0x1ff42821d98 <col:34, col:39> 'int' '*'
|   |   |   |-IntegerLiteral 0x1ff42821d48 <col:34> 'int' 40
|   |   |   `-IntegerLiteral 0x1ff42821d70 <col:39> 'int' 1024
|   |   `-ImplicitCastExpr 0x1ff42821dd8 <col:46> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff42821db8 <col:46> 'long' lvalue ParmVar 0x1ff428247f0 'count' 'long'
|   |-IfStmt 0x1ff428220a8 <line:2659:5, line:2660:14>
|   | |-BinaryOperator 0x1ff42822020 <line:2659:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1ff42821f60 <.//openssl//file_jk/before\test\ssltest_old.c:2659:9, col:39> 'char *'
|   | | | `-BinaryOperator 0x1ff42821f40 <col:10, col:38> 'char *' '='
|   | | |   |-DeclRefExpr 0x1ff42821e58 <col:10> 'char *' lvalue Var 0x1ff42824980 'cbuf' 'char *'
|   | | |   `-ImplicitCastExpr 0x1ff42821f28 <col:17, col:38> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1ff42821ee8 <col:17, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x1ff42821ed0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1ff42821e90 <col:17> 'int ()' Function 0x1ff4280c158 'OPENSSL_zalloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1ff42821f10 <col:32> 'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1ff42821eb0 <col:32> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   | | `-ImplicitCastExpr 0x1ff42822008 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff42821fe8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42821fc0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42821f80 <col:26> 'int' 0
|   | `-GotoStmt 0x1ff42822090 <.//openssl//file_jk/before\test\ssltest_old.c:2660:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff428222c0 <line:2661:5, line:2662:14>
|   | |-BinaryOperator 0x1ff42822288 <line:2661:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1ff428221c8 <.//openssl//file_jk/before\test\ssltest_old.c:2661:9, col:39> 'char *'
|   | | | `-BinaryOperator 0x1ff428221a8 <col:10, col:38> 'char *' '='
|   | | |   |-DeclRefExpr 0x1ff428220c0 <col:10> 'char *' lvalue Var 0x1ff42824aa0 'sbuf' 'char *'
|   | | |   `-ImplicitCastExpr 0x1ff42822190 <col:17, col:38> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1ff42822150 <col:17, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x1ff42822138 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1ff428220f8 <col:17> 'int ()' Function 0x1ff4280c158 'OPENSSL_zalloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1ff42822178 <col:32> 'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1ff42822118 <col:32> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   | | `-ImplicitCastExpr 0x1ff42822270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff42822250 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42822228 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff428221e8 <col:26> 'int' 0
|   | `-GotoStmt 0x1ff428222a8 <.//openssl//file_jk/before\test\ssltest_old.c:2662:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff428226b0 <line:2666:5, line:2669:5>
|   | |-OpaqueValueExpr 0x1ff42822698 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42822680 <line:2666:47, line:2669:5>
|   |   `-GotoStmt 0x1ff42822668 <line:2668:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff428229b0 <line:2673:5, line:2676:5>
|   | |-OpaqueValueExpr 0x1ff42822998 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42822980 <line:2673:45, line:2676:5>
|   |   `-GotoStmt 0x1ff42822968 <line:2675:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff42822dd8 <line:2687:5, line:2692:5>
|   | |-OpaqueValueExpr 0x1ff42822dc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42822da8 <line:2687:30, line:2692:5>
|   |   `-GotoStmt 0x1ff42822d90 <line:2691:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff42822ee0 <line:2693:5, line:2697:5>
|   | |-OpaqueValueExpr 0x1ff42822ec8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42822eb0 <line:2693:30, line:2697:5>
|   |   `-GotoStmt 0x1ff42822e98 <line:2696:9, col:14> 'err' 0x1ff42822040
|   |-BinaryOperator 0x1ff42825128 <line:2709:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ff428250c8 <col:5> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   | `-IntegerLiteral 0x1ff42825100 <col:11> 'int' 0
|   |-BinaryOperator 0x1ff428251a8 <line:2710:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ff42825148 <col:5> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   | `-IntegerLiteral 0x1ff42825180 <col:11> 'int' 1
|   |-BinaryOperator 0x1ff42825228 <line:2711:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ff428251c8 <col:5> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   | `-IntegerLiteral 0x1ff42825200 <col:11> 'int' 1
|   |-BinaryOperator 0x1ff428252a8 <line:2712:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ff42825248 <col:5> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   | `-IntegerLiteral 0x1ff42825280 <col:11> 'int' 0
|   |-BinaryOperator 0x1ff428253c8 <line:2713:5, col:28> 'int' ','
|   | |-BinaryOperator 0x1ff42825328 <col:5, col:15> 'int' '='
|   | | |-DeclRefExpr 0x1ff428252c8 <col:5> 'int' lvalue Var 0x1ff42821710 'c_write' 'int'
|   | | `-IntegerLiteral 0x1ff42825300 <col:15> 'int' 1
|   | `-BinaryOperator 0x1ff428253a8 <col:18, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1ff42825348 <col:18> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   `-IntegerLiteral 0x1ff42825380 <col:28> 'int' 0
|   |-ForStmt 0x1ff4282c630 <line:2716:5, line:2896:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1ff4282c5d0 <line:2716:14, line:2896:5>
|   |   |-BinaryOperator 0x1ff42825448 <line:2717:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x1ff428253e8 <col:9> 'int' lvalue Var 0x1ff42821840 'do_server' 'int'
|   |   | `-IntegerLiteral 0x1ff42825420 <col:21> 'int' 0
|   |   |-BinaryOperator 0x1ff428254c8 <line:2718:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x1ff42825468 <col:9> 'int' lvalue Var 0x1ff428218e8 'do_client' 'int'
|   |   | `-IntegerLiteral 0x1ff428254a0 <col:21> 'int' 0
|   |   |-IfStmt 0x1ff428257a0 <line:2721:9, line:2722:25>
|   |   | |-BinaryOperator 0x1ff42825718 <line:2721:13, col:27> 'int' '||'
|   |   | | |-ParenExpr 0x1ff428256c0 <col:13, col:22> 'int'
|   |   | | | `-BinaryOperator 0x1ff428256a0 <col:14, col:19> 'int' '&&'
|   |   | | |   |-ImplicitCastExpr 0x1ff42825670 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1ff42825630 <col:14> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   | | |   `-ImplicitCastExpr 0x1ff42825688 <col:19> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ff42825650 <col:19> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   | | `-ImplicitCastExpr 0x1ff42825700 <col:27> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff428256e0 <col:27> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   | `-BinaryOperator 0x1ff42825780 <line:2722:13, col:25> 'int' '='
|   |   |   |-DeclRefExpr 0x1ff42825738 <col:13> 'int' lvalue Var 0x1ff42821840 'do_server' 'int'
|   |   |   `-IntegerLiteral 0x1ff42825758 <col:25> 'int' 1
|   |   |-IfStmt 0x1ff42825968 <line:2725:9, line:2726:25>
|   |   | |-BinaryOperator 0x1ff428258e0 <line:2725:13, col:27> 'int' '||'
|   |   | | |-ParenExpr 0x1ff42825888 <col:13, col:22> 'int'
|   |   | | | `-BinaryOperator 0x1ff42825868 <col:14, col:19> 'int' '&&'
|   |   | | |   |-ImplicitCastExpr 0x1ff42825838 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1ff428257f8 <col:14> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   | | |   `-ImplicitCastExpr 0x1ff42825850 <col:19> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1ff42825818 <col:19> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   | | `-ImplicitCastExpr 0x1ff428258c8 <col:27> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff428258a8 <col:27> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   | `-BinaryOperator 0x1ff42825948 <line:2726:13, col:25> 'int' '='
|   |   |   |-DeclRefExpr 0x1ff42825900 <col:13> 'int' lvalue Var 0x1ff428218e8 'do_client' 'int'
|   |   |   `-IntegerLiteral 0x1ff42825920 <col:25> 'int' 1
|   |   |-IfStmt 0x1ff42825ac0 <line:2728:9, line:2737:9>
|   |   | |-BinaryOperator 0x1ff428259f0 <line:2728:13, col:26> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x1ff428259c0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff42825980 <col:13> 'int' lvalue Var 0x1ff42821840 'do_server' 'int'
|   |   | | `-ImplicitCastExpr 0x1ff428259d8 <col:26> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff428259a0 <col:26> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   | `-CompoundStmt 0x1ff42825ab0 <col:33, line:2737:9>
|   |   |-IfStmt 0x1ff42825c18 <line:2739:9, line:2748:9>
|   |   | |-BinaryOperator 0x1ff42825b48 <line:2739:13, col:26> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x1ff42825b18 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff42825ad8 <col:13> 'int' lvalue Var 0x1ff428218e8 'do_client' 'int'
|   |   | | `-ImplicitCastExpr 0x1ff42825b30 <col:26> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1ff42825af8 <col:26> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   | `-CompoundStmt 0x1ff42825c08 <col:33, line:2748:9>
|   |   |-IfStmt 0x1ff42825f00 <line:2750:9, line:2754:9>
|   |   | |-BinaryOperator 0x1ff42825cd0 <line:2750:13, col:28> 'int' '&&'
|   |   | | |-UnaryOperator 0x1ff42825c68 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x1ff42825c50 <col:14> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1ff42825c30 <col:14> 'int' lvalue Var 0x1ff428218e8 'do_client' 'int'
|   |   | | `-UnaryOperator 0x1ff42825cb8 <col:27, col:28> 'int' prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x1ff42825ca0 <col:28> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1ff42825c80 <col:28> 'int' lvalue Var 0x1ff42821840 'do_server' 'int'
|   |   | `-CompoundStmt 0x1ff42825ee0 <col:39, line:2754:9>
|   |   |   |-CallExpr 0x1ff42825e48 <line:2751:13, col:49> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff42825e30 <col:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff42825cf0 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |   | |-ParenExpr 0x1ff42825dc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
|   |   |   | | `-UnaryOperator 0x1ff42825db0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   | |   `-ArraySubscriptExpr 0x1ff42825d90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |   | |     |-CallExpr 0x1ff42825d48 <col:18, col:29> 'FILE *'
|   |   |   | |     | `-ImplicitCastExpr 0x1ff42825d30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |   | |     |   `-DeclRefExpr 0x1ff42825d10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |   | |     `-IntegerLiteral 0x1ff42825d68 <col:31> 'int' 1
|   |   |   | `-ImplicitCastExpr 0x1ff42825e90 <.//openssl//file_jk/before\test\ssltest_old.c:2751:29> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1ff42825e78 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1ff42825de8 <col:29> 'char [18]' lvalue "ERROR IN STARTUP\n"
|   |   |   `-GotoStmt 0x1ff42825ec8 <line:2753:13, col:18> 'err' 0x1ff42822040
|   |   |-IfStmt 0x1ff428201c8 <line:2755:9, line:2820:9>
|   |   | |-BinaryOperator 0x1ff42826020 <line:2755:13, col:41> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x1ff42826008 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff42825f18 <col:13> 'int' lvalue Var 0x1ff428218e8 'do_client' 'int'
|   |   | | `-UnaryOperator 0x1ff42825ff0 <col:26, col:41> 'int' prefix '!' cannot overflow
|   |   | |   `-ParenExpr 0x1ff42825fd0 <col:27, col:41> 'int'
|   |   | |     `-BinaryOperator 0x1ff42825fb0 <col:28, line:2634:17> 'int' '&'
|   |   | |       |-ImplicitCastExpr 0x1ff42825f98 <line:2755:28> 'int' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x1ff42825f38 <col:28> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |   | |       `-IntegerLiteral 0x1ff42825f70 <line:2634:17> 'int' 1
|   |   | `-CompoundStmt 0x1ff428201b0 <line:2755:44, line:2820:9>
|   |   |   `-IfStmt 0x1ff42820188 <line:2756:13, line:2819:13> has_else
|   |   |     |-ImplicitCastExpr 0x1ff42826060 <line:2756:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1ff42826040 <col:17> 'int' lvalue Var 0x1ff42821710 'c_write' 'int'
|   |   |     |-CompoundStmt 0x1ff4281f1d0 <col:26, line:2786:13>
|   |   |     | |-BinaryOperator 0x1ff42826298 <line:2757:17, col:60> 'int' '='
|   |   |     | | |-DeclRefExpr 0x1ff42826078 <col:17> 'int' lvalue Var 0x1ff428215a0 'j' 'int'
|   |   |     | | `-ConditionalOperator 0x1ff42826268 <col:21, col:60> 'int'
|   |   |     | |   |-ParenExpr 0x1ff42826158 <col:21, col:37> 'int'
|   |   |     | |   | `-BinaryOperator 0x1ff42826138 <col:22, col:31> 'int' '>'
|   |   |     | |   |   |-ImplicitCastExpr 0x1ff42826108 <col:22> 'long' <LValueToRValue>
|   |   |     | |   |   | `-DeclRefExpr 0x1ff428260b0 <col:22> 'long' lvalue Var 0x1ff42824c88 'cw_num' 'long'
|   |   |     | |   |   `-ImplicitCastExpr 0x1ff42826120 <col:31> 'long' <LValueToRValue>
|   |   |     | |   |     `-DeclRefExpr 0x1ff428260e8 <col:31> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   |   |     | |   |-CStyleCastExpr 0x1ff428261c8 <col:41, col:46> 'int' <IntegralCast>
|   |   |     | |   | `-ImplicitCastExpr 0x1ff428261b0 <col:46> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |   `-DeclRefExpr 0x1ff42826178 <col:46> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   |   |     | |   `-CStyleCastExpr 0x1ff42826240 <col:55, col:60> 'int' <IntegralCast>
|   |   |     | |     `-ImplicitCastExpr 0x1ff42826228 <col:60> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     | |       `-DeclRefExpr 0x1ff428261f0 <col:60> 'long' lvalue Var 0x1ff42824c88 'cw_num' 'long'
|   |   |     | `-IfStmt 0x1ff4281f1a8 <line:2759:17, line:2785:17> has_else
|   |   |     |   |-BinaryOperator 0x1ff42826398 <line:2759:21, col:25> 'int' '<'
|   |   |     |   | |-ImplicitCastExpr 0x1ff42826380 <col:21> 'int' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x1ff42826338 <col:21> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |   | `-IntegerLiteral 0x1ff42826358 <col:25> 'int' 0
|   |   |     |   |-CompoundStmt 0x1ff42826ae8 <col:28, line:2773:17>
|   |   |     |   | |-BinaryOperator 0x1ff42826400 <line:2760:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x1ff428263b8 <col:21> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   |     |   | | `-IntegerLiteral 0x1ff428263d8 <col:27> 'int' 0
|   |   |     |   | |-BinaryOperator 0x1ff42826468 <line:2761:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x1ff42826420 <col:21> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   |     |   | | `-IntegerLiteral 0x1ff42826440 <col:27> 'int' 0
|   |   |     |   | `-IfStmt 0x1ff42826ac0 <line:2762:21, line:2772:21> has_else
|   |   |     |   |   |-OpaqueValueExpr 0x1ff42826aa8 <<invalid sloc>> '_Bool'
|   |   |     |   |   |-CompoundStmt 0x1ff428267f8 <line:2762:50, line:2767:21>
|   |   |     |   |   | |-IfStmt 0x1ff42826638 <line:2763:25, line:2764:35>
|   |   |     |   |   | | |-OpaqueValueExpr 0x1ff42826620 <<invalid sloc>> '_Bool'
|   |   |     |   |   | | `-BinaryOperator 0x1ff42826600 <col:29, col:35> 'int' '='
|   |   |     |   |   | |   |-DeclRefExpr 0x1ff428265b8 <col:29> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   |     |   |   | |   `-IntegerLiteral 0x1ff428265d8 <col:35> 'int' 1
|   |   |     |   |   | `-IfStmt 0x1ff428267e0 <line:2765:25, line:2766:35>
|   |   |     |   |   |   |-OpaqueValueExpr 0x1ff428267c8 <<invalid sloc>> '_Bool'
|   |   |     |   |   |   `-BinaryOperator 0x1ff428267a8 <col:29, col:35> 'int' '='
|   |   |     |   |   |     |-DeclRefExpr 0x1ff42826760 <col:29> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   |     |   |   |     `-IntegerLiteral 0x1ff42826780 <col:35> 'int' 1
|   |   |     |   |   `-CompoundStmt 0x1ff42826a80 <line:2767:28, line:2772:21>
|   |   |     |   |     |-CallExpr 0x1ff42826968 <line:2768:25, col:60> 'int'
|   |   |     |   |     | |-ImplicitCastExpr 0x1ff42826950 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   |     | | `-DeclRefExpr 0x1ff42826818 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |   |     | |-ParenExpr 0x1ff428268f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |   |     | | `-UnaryOperator 0x1ff428268d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |   |     | |   `-ArraySubscriptExpr 0x1ff428268b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |   |     | |     |-CallExpr 0x1ff42826870 <col:18, col:29> 'FILE *'
|   |   |     |   |     | |     | `-ImplicitCastExpr 0x1ff42826858 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   |     | |     |   `-DeclRefExpr 0x1ff42826838 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |   |     | |     `-IntegerLiteral 0x1ff42826890 <col:31> 'int' 2
|   |   |     |   |     | `-ImplicitCastExpr 0x1ff428269b0 <.//openssl//file_jk/before\test\ssltest_old.c:2768:41> 'const char *' <NoOp>
|   |   |     |   |     |   `-ImplicitCastExpr 0x1ff42826998 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     |     `-StringLiteral 0x1ff42826910 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   |   |     |   |     |-BinaryOperator 0x1ff42826a28 <line:2769:25, col:41> 'int' '='
|   |   |     |   |     | |-DeclRefExpr 0x1ff428269c8 <col:25> 'int' lvalue Var 0x1ff42821ac8 'err_in_client' 'int'
|   |   |     |   |     | `-IntegerLiteral 0x1ff42826a00 <col:41> 'int' 1
|   |   |     |   |     `-GotoStmt 0x1ff42826a68 <line:2771:25, col:30> 'err' 0x1ff42822040
|   |   |     |   `-IfStmt 0x1ff4281f180 <line:2773:24, line:2785:17> has_else
|   |   |     |     |-BinaryOperator 0x1ff42826b70 <line:2773:28, col:33> 'int' '=='
|   |   |     |     | |-ImplicitCastExpr 0x1ff42826b58 <col:28> 'int' <LValueToRValue>
|   |   |     |     | | `-DeclRefExpr 0x1ff42826b10 <col:28> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |     | `-IntegerLiteral 0x1ff42826b30 <col:33> 'int' 0
|   |   |     |     |-CompoundStmt 0x1ff42826d68 <col:36, line:2776:17>
|   |   |     |     | |-CallExpr 0x1ff42826cf0 <line:2774:21, col:66> 'int'
|   |   |     |     | | |-ImplicitCastExpr 0x1ff42826cd8 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |     | | | `-DeclRefExpr 0x1ff42826b90 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |     | | |-ParenExpr 0x1ff42826c68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |     | | | `-UnaryOperator 0x1ff42826c50 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |     | | |   `-ArraySubscriptExpr 0x1ff42826c30 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |     | | |     |-CallExpr 0x1ff42826be8 <col:18, col:29> 'FILE *'
|   |   |     |     | | |     | `-ImplicitCastExpr 0x1ff42826bd0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |     | | |     |   `-DeclRefExpr 0x1ff42826bb0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |     | | |     `-IntegerLiteral 0x1ff42826c08 <col:31> 'int' 2
|   |   |     |     | | `-ImplicitCastExpr 0x1ff42826d38 <.//openssl//file_jk/before\test\ssltest_old.c:2774:37> 'const char *' <NoOp>
|   |   |     |     | |   `-ImplicitCastExpr 0x1ff42826d20 <col:37> 'char *' <ArrayToPointerDecay>
|   |   |     |     | |     `-StringLiteral 0x1ff42826c88 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   |   |     |     | `-GotoStmt 0x1ff42826d50 <line:2775:21, col:26> 'err' 0x1ff42822040
|   |   |     |     `-CompoundStmt 0x1ff4281f150 <line:2776:24, line:2785:17>
|   |   |     |       |-IfStmt 0x1ff42826ed0 <line:2777:21, line:2778:54>
|   |   |     |       | |-ImplicitCastExpr 0x1ff42826da8 <line:2777:25> 'int' <LValueToRValue>
|   |   |     |       | | `-DeclRefExpr 0x1ff42826d88 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   |     |       | `-CallExpr 0x1ff42826e58 <line:2778:25, col:54> 'int'
|   |   |     |       |   |-ImplicitCastExpr 0x1ff42826e40 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |       |   | `-DeclRefExpr 0x1ff42826dc0 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   |     |       |   |-ImplicitCastExpr 0x1ff42826ea0 <col:32> 'const char *' <NoOp>
|   |   |     |       |   | `-ImplicitCastExpr 0x1ff42826e88 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     |       |   |   `-StringLiteral 0x1ff42826de0 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   |   |     |       |   `-ImplicitCastExpr 0x1ff42826eb8 <col:53> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x1ff42826e08 <col:53> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |       |-BinaryOperator 0x1ff42826f30 <line:2780:21, col:27> 'int' '='
|   |   |     |       | |-DeclRefExpr 0x1ff42826ee8 <col:21> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   |     |       | `-IntegerLiteral 0x1ff42826f08 <col:27> 'int' 1
|   |   |     |       |-BinaryOperator 0x1ff42826f98 <line:2781:21, col:31> 'int' '='
|   |   |     |       | |-DeclRefExpr 0x1ff42826f50 <col:21> 'int' lvalue Var 0x1ff42821710 'c_write' 'int'
|   |   |     |       | `-IntegerLiteral 0x1ff42826f70 <col:31> 'int' 0
|   |   |     |       `-CompoundAssignOperator 0x1ff4281f008 <line:2782:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |     |         |-DeclRefExpr 0x1ff42826fb8 <col:21> 'long' lvalue Var 0x1ff42824c88 'cw_num' 'long'
|   |   |     |         `-ImplicitCastExpr 0x1ff4281eff0 <col:31> 'long' <IntegralCast>
|   |   |     |           `-ImplicitCastExpr 0x1ff42826ff8 <col:31> 'int' <LValueToRValue>
|   |   |     |             `-DeclRefExpr 0x1ff42826fd8 <col:31> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     `-CompoundStmt 0x1ff42820170 <line:2786:20, line:2819:13>
|   |   |       `-IfStmt 0x1ff42820148 <line:2788:17, line:2818:17> has_else
|   |   |         |-BinaryOperator 0x1ff4281f2d0 <line:2788:21, col:25> 'int' '<'
|   |   |         | |-ImplicitCastExpr 0x1ff4281f2b8 <col:21> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x1ff4281f270 <col:21> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |         | `-IntegerLiteral 0x1ff4281f290 <col:25> 'int' 0
|   |   |         |-CompoundStmt 0x1ff4281f828 <col:28, line:2802:17>
|   |   |         | |-BinaryOperator 0x1ff4281f338 <line:2789:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x1ff4281f2f0 <col:21> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   |         | | `-IntegerLiteral 0x1ff4281f310 <col:27> 'int' 0
|   |   |         | |-BinaryOperator 0x1ff4281f3a0 <line:2790:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x1ff4281f358 <col:21> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   |         | | `-IntegerLiteral 0x1ff4281f378 <col:27> 'int' 0
|   |   |         | `-IfStmt 0x1ff4281f800 <line:2791:21, line:2801:21> has_else
|   |   |         |   |-OpaqueValueExpr 0x1ff4281f7e8 <<invalid sloc>> '_Bool'
|   |   |         |   |-CompoundStmt 0x1ff4281f550 <line:2791:50, line:2796:21>
|   |   |         |   | |-IfStmt 0x1ff4281f480 <line:2792:25, line:2793:35>
|   |   |         |   | | |-OpaqueValueExpr 0x1ff4281f468 <<invalid sloc>> '_Bool'
|   |   |         |   | | `-BinaryOperator 0x1ff4281f448 <col:29, col:35> 'int' '='
|   |   |         |   | |   |-DeclRefExpr 0x1ff4281f400 <col:29> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   |         |   | |   `-IntegerLiteral 0x1ff4281f420 <col:35> 'int' 1
|   |   |         |   | `-IfStmt 0x1ff4281f538 <line:2794:25, line:2795:35>
|   |   |         |   |   |-OpaqueValueExpr 0x1ff4281f520 <<invalid sloc>> '_Bool'
|   |   |         |   |   `-BinaryOperator 0x1ff4281f500 <col:29, col:35> 'int' '='
|   |   |         |   |     |-DeclRefExpr 0x1ff4281f4b8 <col:29> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   |         |   |     `-IntegerLiteral 0x1ff4281f4d8 <col:35> 'int' 1
|   |   |         |   `-CompoundStmt 0x1ff4281f7c0 <line:2796:28, line:2801:21>
|   |   |         |     |-CallExpr 0x1ff4281f6c0 <line:2797:25, col:60> 'int'
|   |   |         |     | |-ImplicitCastExpr 0x1ff4281f6a8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |         |     | | `-DeclRefExpr 0x1ff4281f570 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |         |     | |-ParenExpr 0x1ff4281f648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |         |     | | `-UnaryOperator 0x1ff4281f630 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |         |     | |   `-ArraySubscriptExpr 0x1ff4281f610 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |         |     | |     |-CallExpr 0x1ff4281f5c8 <col:18, col:29> 'FILE *'
|   |   |         |     | |     | `-ImplicitCastExpr 0x1ff4281f5b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         |     | |     |   `-DeclRefExpr 0x1ff4281f590 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |         |     | |     `-IntegerLiteral 0x1ff4281f5e8 <col:31> 'int' 2
|   |   |         |     | `-ImplicitCastExpr 0x1ff4281f708 <.//openssl//file_jk/before\test\ssltest_old.c:2797:41> 'const char *' <NoOp>
|   |   |         |     |   `-ImplicitCastExpr 0x1ff4281f6f0 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |         |     |     `-StringLiteral 0x1ff4281f668 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   |   |         |     |-BinaryOperator 0x1ff4281f768 <line:2798:25, col:41> 'int' '='
|   |   |         |     | |-DeclRefExpr 0x1ff4281f720 <col:25> 'int' lvalue Var 0x1ff42821ac8 'err_in_client' 'int'
|   |   |         |     | `-IntegerLiteral 0x1ff4281f740 <col:41> 'int' 1
|   |   |         |     `-GotoStmt 0x1ff4281f7a8 <line:2800:25, col:30> 'err' 0x1ff42822040
|   |   |         `-IfStmt 0x1ff42820120 <line:2802:24, line:2818:17> has_else
|   |   |           |-BinaryOperator 0x1ff4281f8b0 <line:2802:28, col:33> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x1ff4281f898 <col:28> 'int' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x1ff4281f850 <col:28> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |           | `-IntegerLiteral 0x1ff4281f870 <col:33> 'int' 0
|   |   |           |-CompoundStmt 0x1ff4281faa8 <col:36, line:2805:17>
|   |   |           | |-CallExpr 0x1ff4281fa30 <line:2803:21, col:66> 'int'
|   |   |           | | |-ImplicitCastExpr 0x1ff4281fa18 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x1ff4281f8d0 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |           | | |-ParenExpr 0x1ff4281f9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |           | | | `-UnaryOperator 0x1ff4281f990 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |           | | |   `-ArraySubscriptExpr 0x1ff4281f970 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |           | | |     |-CallExpr 0x1ff4281f928 <col:18, col:29> 'FILE *'
|   |   |           | | |     | `-ImplicitCastExpr 0x1ff4281f910 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           | | |     |   `-DeclRefExpr 0x1ff4281f8f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |           | | |     `-IntegerLiteral 0x1ff4281f948 <col:31> 'int' 2
|   |   |           | | `-ImplicitCastExpr 0x1ff4281fa78 <.//openssl//file_jk/before\test\ssltest_old.c:2803:37> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x1ff4281fa60 <col:37> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x1ff4281f9c8 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   |   |           | `-GotoStmt 0x1ff4281fa90 <line:2804:21, col:26> 'err' 0x1ff42822040
|   |   |           `-CompoundStmt 0x1ff428200f0 <line:2805:24, line:2818:17>
|   |   |             |-IfStmt 0x1ff4281fc10 <line:2806:21, line:2807:53>
|   |   |             | |-ImplicitCastExpr 0x1ff4281fae8 <line:2806:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x1ff4281fac8 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   |             | `-CallExpr 0x1ff4281fb98 <line:2807:25, col:53> 'int'
|   |   |             |   |-ImplicitCastExpr 0x1ff4281fb80 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x1ff4281fb00 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   |             |   |-ImplicitCastExpr 0x1ff4281fbe0 <col:32> 'const char *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1ff4281fbc8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             |   |   `-StringLiteral 0x1ff4281fb20 <col:32> 'char [16]' lvalue "client read %d\n"
|   |   |             |   `-ImplicitCastExpr 0x1ff4281fbf8 <col:52> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x1ff4281fb48 <col:52> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |             |-CompoundAssignOperator 0x1ff4281fcb0 <line:2808:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |             | |-DeclRefExpr 0x1ff4281fc28 <col:21> 'long' lvalue Var 0x1ff42824d58 'cr_num' 'long'
|   |   |             | `-ImplicitCastExpr 0x1ff4281fc98 <col:31> 'long' <IntegralCast>
|   |   |             |   `-ImplicitCastExpr 0x1ff4281fc80 <col:31> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x1ff4281fc60 <col:31> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |             |-IfStmt 0x1ff4281fe80 <line:2809:21, line:2812:21>
|   |   |             | |-BinaryOperator 0x1ff4281fd70 <line:2809:25, col:34> 'int' '>'
|   |   |             | | |-ImplicitCastExpr 0x1ff4281fd40 <col:25> 'long' <LValueToRValue>
|   |   |             | | | `-DeclRefExpr 0x1ff4281fce0 <col:25> 'long' lvalue Var 0x1ff42824e40 'sw_num' 'long'
|   |   |             | | `-ImplicitCastExpr 0x1ff4281fd58 <col:34> 'long' <IntegralCast>
|   |   |             | |   `-IntegerLiteral 0x1ff4281fd18 <col:34> 'int' 0
|   |   |             | `-CompoundStmt 0x1ff4281fe60 <col:37, line:2812:21>
|   |   |             |   |-BinaryOperator 0x1ff4281fdd8 <line:2810:25, col:35> 'int' '='
|   |   |             |   | |-DeclRefExpr 0x1ff4281fd90 <col:25> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   |             |   | `-IntegerLiteral 0x1ff4281fdb0 <col:35> 'int' 1
|   |   |             |   `-BinaryOperator 0x1ff4281fe40 <line:2811:25, col:31> 'int' '='
|   |   |             |     |-DeclRefExpr 0x1ff4281fdf8 <col:25> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |             |     `-IntegerLiteral 0x1ff4281fe18 <col:31> 'int' 1
|   |   |             `-IfStmt 0x1ff428200d8 <line:2813:21, line:2817:21>
|   |   |               |-BinaryOperator 0x1ff4281ff10 <line:2813:25, col:35> 'int' '<='
|   |   |               | |-ImplicitCastExpr 0x1ff4281fee0 <col:25> 'long' <LValueToRValue>
|   |   |               | | `-DeclRefExpr 0x1ff4281fe98 <col:25> 'long' lvalue Var 0x1ff42824d58 'cr_num' 'long'
|   |   |               | `-ImplicitCastExpr 0x1ff4281fef8 <col:35> 'long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x1ff4281feb8 <col:35> 'int' 0
|   |   |               `-CompoundStmt 0x1ff428200b0 <col:38, line:2817:21>
|   |   |                 |-BinaryOperator 0x1ff4281ff78 <line:2814:25, col:35> 'int' '='
|   |   |                 | |-DeclRefExpr 0x1ff4281ff30 <col:25> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   |                 | `-IntegerLiteral 0x1ff4281ff50 <col:35> 'int' 1
|   |   |                 |-BinaryOperator 0x1ff4281ffe0 <line:2815:25, col:31> 'int' '='
|   |   |                 | |-DeclRefExpr 0x1ff4281ff98 <col:25> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |                 | `-IntegerLiteral 0x1ff4281ffb8 <col:31> 'int' 1
|   |   |                 `-BinaryOperator 0x1ff42820090 <line:2816:25, line:2634:17> 'int' '='
|   |   |                   |-DeclRefExpr 0x1ff42820000 <line:2816:25> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |   |                   `-BinaryOperator 0x1ff42820070 <line:2635:17, line:2634:17> 'int' '|'
|   |   |                     |-IntegerLiteral 0x1ff42820020 <line:2635:17> 'int' 2
|   |   |                     `-IntegerLiteral 0x1ff42820048 <line:2634:17> 'int' 1
|   |   |-IfStmt 0x1ff4282c438 <line:2822:9, line:2892:9>
|   |   | |-BinaryOperator 0x1ff428202d0 <line:2822:13, col:41> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x1ff428202b8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff428201e0 <col:13> 'int' lvalue Var 0x1ff42821840 'do_server' 'int'
|   |   | | `-UnaryOperator 0x1ff428202a0 <col:26, col:41> 'int' prefix '!' cannot overflow
|   |   | |   `-ParenExpr 0x1ff42820280 <col:27, col:41> 'int'
|   |   | |     `-BinaryOperator 0x1ff42820260 <col:28, line:2635:17> 'int' '&'
|   |   | |       |-ImplicitCastExpr 0x1ff42820248 <line:2822:28> 'int' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x1ff42820200 <col:28> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |   | |       `-IntegerLiteral 0x1ff42820220 <line:2635:17> 'int' 2
|   |   | `-CompoundStmt 0x1ff4282c420 <line:2822:44, line:2892:9>
|   |   |   `-IfStmt 0x1ff4282c3f8 <line:2823:13, line:2891:13> has_else
|   |   |     |-UnaryOperator 0x1ff42820328 <line:2823:17, col:18> 'int' prefix '!' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x1ff42820310 <col:18> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1ff428202f0 <col:18> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   |     |-CompoundStmt 0x1ff4282b318 <col:27, line:2858:13>
|   |   |     | `-IfStmt 0x1ff4282b2f0 <line:2825:17, line:2857:17> has_else
|   |   |     |   |-BinaryOperator 0x1ff42820420 <line:2825:21, col:25> 'int' '<'
|   |   |     |   | |-ImplicitCastExpr 0x1ff42820408 <col:21> 'int' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x1ff428203c0 <col:21> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |   | `-IntegerLiteral 0x1ff428203e0 <col:25> 'int' 0
|   |   |     |   |-CompoundStmt 0x1ff42820990 <col:28, line:2839:17>
|   |   |     |   | |-BinaryOperator 0x1ff42820488 <line:2826:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x1ff42820440 <col:21> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   |     |   | | `-IntegerLiteral 0x1ff42820460 <col:27> 'int' 0
|   |   |     |   | |-BinaryOperator 0x1ff428204f0 <line:2827:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x1ff428204a8 <col:21> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |     |   | | `-IntegerLiteral 0x1ff428204c8 <col:27> 'int' 0
|   |   |     |   | `-IfStmt 0x1ff42820968 <line:2828:21, line:2838:21> has_else
|   |   |     |   |   |-OpaqueValueExpr 0x1ff42820950 <<invalid sloc>> '_Bool'
|   |   |     |   |   |-CompoundStmt 0x1ff428206a0 <line:2828:50, line:2833:21>
|   |   |     |   |   | |-IfStmt 0x1ff428205d0 <line:2829:25, line:2830:35>
|   |   |     |   |   | | |-OpaqueValueExpr 0x1ff428205b8 <<invalid sloc>> '_Bool'
|   |   |     |   |   | | `-BinaryOperator 0x1ff42820598 <col:29, col:35> 'int' '='
|   |   |     |   |   | |   |-DeclRefExpr 0x1ff42820550 <col:29> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   |     |   |   | |   `-IntegerLiteral 0x1ff42820570 <col:35> 'int' 1
|   |   |     |   |   | `-IfStmt 0x1ff42820688 <line:2831:25, line:2832:35>
|   |   |     |   |   |   |-OpaqueValueExpr 0x1ff42820670 <<invalid sloc>> '_Bool'
|   |   |     |   |   |   `-BinaryOperator 0x1ff42820650 <col:29, col:35> 'int' '='
|   |   |     |   |   |     |-DeclRefExpr 0x1ff42820608 <col:29> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |     |   |   |     `-IntegerLiteral 0x1ff42820628 <col:35> 'int' 1
|   |   |     |   |   `-CompoundStmt 0x1ff42820928 <line:2833:28, line:2838:21>
|   |   |     |   |     |-CallExpr 0x1ff42820810 <line:2834:25, col:60> 'int'
|   |   |     |   |     | |-ImplicitCastExpr 0x1ff428207f8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   |     | | `-DeclRefExpr 0x1ff428206c0 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |   |     | |-ParenExpr 0x1ff42820798 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |   |     | | `-UnaryOperator 0x1ff42820780 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |   |     | |   `-ArraySubscriptExpr 0x1ff42820760 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |   |     | |     |-CallExpr 0x1ff42820718 <col:18, col:29> 'FILE *'
|   |   |     |   |     | |     | `-ImplicitCastExpr 0x1ff42820700 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   |     | |     |   `-DeclRefExpr 0x1ff428206e0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |   |     | |     `-IntegerLiteral 0x1ff42820738 <col:31> 'int' 2
|   |   |     |   |     | `-ImplicitCastExpr 0x1ff42820858 <.//openssl//file_jk/before\test\ssltest_old.c:2834:41> 'const char *' <NoOp>
|   |   |     |   |     |   `-ImplicitCastExpr 0x1ff42820840 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     |     `-StringLiteral 0x1ff428207b8 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   |   |     |   |     |-BinaryOperator 0x1ff428208d0 <line:2835:25, col:41> 'int' '='
|   |   |     |   |     | |-DeclRefExpr 0x1ff42820870 <col:25> 'int' lvalue Var 0x1ff42821b88 'err_in_server' 'int'
|   |   |     |   |     | `-IntegerLiteral 0x1ff428208a8 <col:41> 'int' 1
|   |   |     |   |     `-GotoStmt 0x1ff42820910 <line:2837:25, col:30> 'err' 0x1ff42822040
|   |   |     |   `-IfStmt 0x1ff4282b2c8 <line:2839:24, line:2857:17> has_else
|   |   |     |     |-BinaryOperator 0x1ff42820a18 <line:2839:28, col:33> 'int' '=='
|   |   |     |     | |-ImplicitCastExpr 0x1ff42820a00 <col:28> 'int' <LValueToRValue>
|   |   |     |     | | `-DeclRefExpr 0x1ff428209b8 <col:28> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |     | `-IntegerLiteral 0x1ff428209d8 <col:33> 'int' 0
|   |   |     |     |-CompoundStmt 0x1ff42820c38 <col:36, line:2844:17>
|   |   |     |     | |-CallExpr 0x1ff42820bc0 <line:2841:21, line:2842:70> 'int'
|   |   |     |     | | |-ImplicitCastExpr 0x1ff42820ba8 <line:2841:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |     | | | `-DeclRefExpr 0x1ff42820a58 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |     | | |-ParenExpr 0x1ff42820b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |     | | | `-UnaryOperator 0x1ff42820b18 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |     | | |   `-ArraySubscriptExpr 0x1ff42820af8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |     | | |     |-CallExpr 0x1ff42820ab0 <col:18, col:29> 'FILE *'
|   |   |     |     | | |     | `-ImplicitCastExpr 0x1ff42820a98 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |     | | |     |   `-DeclRefExpr 0x1ff42820a78 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |     | | |     `-IntegerLiteral 0x1ff42820ad0 <col:31> 'int' 2
|   |   |     |     | | `-ImplicitCastExpr 0x1ff42820c08 <.//openssl//file_jk/before\test\ssltest_old.c:2842:29> 'const char *' <NoOp>
|   |   |     |     | |   `-ImplicitCastExpr 0x1ff42820bf0 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |     |     | |     `-StringLiteral 0x1ff42820b50 <col:29> 'char [39]' lvalue "SSL SERVER STARTUP FAILED in SSL_read\n"
|   |   |     |     | `-GotoStmt 0x1ff42820c20 <line:2843:21, col:26> 'err' 0x1ff42822040
|   |   |     |     `-CompoundStmt 0x1ff4282b298 <line:2844:24, line:2857:17>
|   |   |     |       |-IfStmt 0x1ff42820da0 <line:2845:21, line:2846:53>
|   |   |     |       | |-ImplicitCastExpr 0x1ff42820c78 <line:2845:25> 'int' <LValueToRValue>
|   |   |     |       | | `-DeclRefExpr 0x1ff42820c58 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   |     |       | `-CallExpr 0x1ff42820d28 <line:2846:25, col:53> 'int'
|   |   |     |       |   |-ImplicitCastExpr 0x1ff42820d10 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |       |   | `-DeclRefExpr 0x1ff42820c90 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   |     |       |   |-ImplicitCastExpr 0x1ff42820d70 <col:32> 'const char *' <NoOp>
|   |   |     |       |   | `-ImplicitCastExpr 0x1ff42820d58 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     |       |   |   `-StringLiteral 0x1ff42820cb0 <col:32> 'char [16]' lvalue "server read %d\n"
|   |   |     |       |   `-ImplicitCastExpr 0x1ff42820d88 <col:52> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x1ff42820cd8 <col:52> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |       |-CompoundAssignOperator 0x1ff42820e40 <line:2847:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |     |       | |-DeclRefExpr 0x1ff42820db8 <col:21> 'long' lvalue Var 0x1ff42824ef8 'sr_num' 'long'
|   |   |     |       | `-ImplicitCastExpr 0x1ff42820e28 <col:31> 'long' <IntegralCast>
|   |   |     |       |   `-ImplicitCastExpr 0x1ff42820e10 <col:31> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x1ff42820df0 <col:31> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |     |       |-IfStmt 0x1ff4282b070 <line:2848:21, line:2851:21>
|   |   |     |       | |-BinaryOperator 0x1ff42820ee8 <line:2848:25, col:34> 'int' '>'
|   |   |     |       | | |-ImplicitCastExpr 0x1ff42820eb8 <col:25> 'long' <LValueToRValue>
|   |   |     |       | | | `-DeclRefExpr 0x1ff42820e70 <col:25> 'long' lvalue Var 0x1ff42824c88 'cw_num' 'long'
|   |   |     |       | | `-ImplicitCastExpr 0x1ff42820ed0 <col:34> 'long' <IntegralCast>
|   |   |     |       | |   `-IntegerLiteral 0x1ff42820e90 <col:34> 'int' 0
|   |   |     |       | `-CompoundStmt 0x1ff4282b050 <col:37, line:2851:21>
|   |   |     |       |   |-BinaryOperator 0x1ff42820f50 <line:2849:25, col:35> 'int' '='
|   |   |     |       |   | |-DeclRefExpr 0x1ff42820f08 <col:25> 'int' lvalue Var 0x1ff42821710 'c_write' 'int'
|   |   |     |       |   | `-IntegerLiteral 0x1ff42820f28 <col:35> 'int' 1
|   |   |     |       |   `-BinaryOperator 0x1ff42820fb8 <line:2850:25, col:31> 'int' '='
|   |   |     |       |     |-DeclRefExpr 0x1ff42820f70 <col:25> 'int' lvalue Var 0x1ff42821360 'c_w' 'int'
|   |   |     |       |     `-IntegerLiteral 0x1ff42820f90 <col:31> 'int' 1
|   |   |     |       `-IfStmt 0x1ff4282b280 <line:2852:21, line:2856:21>
|   |   |     |         |-BinaryOperator 0x1ff4282b100 <line:2852:25, col:35> 'int' '<='
|   |   |     |         | |-ImplicitCastExpr 0x1ff4282b0d0 <col:25> 'long' <LValueToRValue>
|   |   |     |         | | `-DeclRefExpr 0x1ff4282b088 <col:25> 'long' lvalue Var 0x1ff42824ef8 'sr_num' 'long'
|   |   |     |         | `-ImplicitCastExpr 0x1ff4282b0e8 <col:35> 'long' <IntegralCast>
|   |   |     |         |   `-IntegerLiteral 0x1ff4282b0a8 <col:35> 'int' 0
|   |   |     |         `-CompoundStmt 0x1ff4282b258 <col:38, line:2856:21>
|   |   |     |           |-BinaryOperator 0x1ff4282b168 <line:2853:25, col:35> 'int' '='
|   |   |     |           | |-DeclRefExpr 0x1ff4282b120 <col:25> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   |     |           | `-IntegerLiteral 0x1ff4282b140 <col:35> 'int' 1
|   |   |     |           |-BinaryOperator 0x1ff4282b1d0 <line:2854:25, col:31> 'int' '='
|   |   |     |           | |-DeclRefExpr 0x1ff4282b188 <col:25> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |     |           | `-IntegerLiteral 0x1ff4282b1a8 <col:31> 'int' 1
|   |   |     |           `-BinaryOperator 0x1ff4282b238 <line:2855:25, col:35> 'int' '='
|   |   |     |             |-DeclRefExpr 0x1ff4282b1f0 <col:25> 'int' lvalue Var 0x1ff42821710 'c_write' 'int'
|   |   |     |             `-IntegerLiteral 0x1ff4282b210 <col:35> 'int' 0
|   |   |     `-CompoundStmt 0x1ff4282c3d8 <line:2858:20, line:2891:13>
|   |   |       |-BinaryOperator 0x1ff4282b520 <line:2859:17, col:60> 'int' '='
|   |   |       | |-DeclRefExpr 0x1ff4282b330 <col:17> 'int' lvalue Var 0x1ff428215a0 'j' 'int'
|   |   |       | `-ConditionalOperator 0x1ff4282b4f0 <col:21, col:60> 'int'
|   |   |       |   |-ParenExpr 0x1ff4282b3e0 <col:21, col:37> 'int'
|   |   |       |   | `-BinaryOperator 0x1ff4282b3c0 <col:22, col:31> 'int' '>'
|   |   |       |   |   |-ImplicitCastExpr 0x1ff4282b390 <col:22> 'long' <LValueToRValue>
|   |   |       |   |   | `-DeclRefExpr 0x1ff4282b350 <col:22> 'long' lvalue Var 0x1ff42824e40 'sw_num' 'long'
|   |   |       |   |   `-ImplicitCastExpr 0x1ff4282b3a8 <col:31> 'long' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x1ff4282b370 <col:31> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   |   |       |   |-CStyleCastExpr 0x1ff4282b450 <col:41, col:46> 'int' <IntegralCast>
|   |   |       |   | `-ImplicitCastExpr 0x1ff4282b438 <col:46> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       |   |   `-DeclRefExpr 0x1ff4282b400 <col:46> 'long' lvalue Var 0x1ff42824bf0 'bufsiz' 'long'
|   |   |       |   `-CStyleCastExpr 0x1ff4282b4c8 <col:55, col:60> 'int' <IntegralCast>
|   |   |       |     `-ImplicitCastExpr 0x1ff4282b4b0 <col:60> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       |       `-DeclRefExpr 0x1ff4282b478 <col:60> 'long' lvalue Var 0x1ff42824e40 'sw_num' 'long'
|   |   |       `-IfStmt 0x1ff4282c3b0 <line:2861:17, line:2890:17> has_else
|   |   |         |-BinaryOperator 0x1ff4282b620 <line:2861:21, col:25> 'int' '<'
|   |   |         | |-ImplicitCastExpr 0x1ff4282b608 <col:21> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x1ff4282b5c0 <col:21> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |         | `-IntegerLiteral 0x1ff4282b5e0 <col:25> 'int' 0
|   |   |         |-CompoundStmt 0x1ff4282bb78 <col:28, line:2875:17>
|   |   |         | |-BinaryOperator 0x1ff4282b688 <line:2862:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x1ff4282b640 <col:21> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   |         | | `-IntegerLiteral 0x1ff4282b660 <col:27> 'int' 0
|   |   |         | |-BinaryOperator 0x1ff4282b6f0 <line:2863:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x1ff4282b6a8 <col:21> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |         | | `-IntegerLiteral 0x1ff4282b6c8 <col:27> 'int' 0
|   |   |         | `-IfStmt 0x1ff4282bb50 <line:2864:21, line:2874:21> has_else
|   |   |         |   |-OpaqueValueExpr 0x1ff4282bb38 <<invalid sloc>> '_Bool'
|   |   |         |   |-CompoundStmt 0x1ff4282b8a0 <line:2864:50, line:2869:21>
|   |   |         |   | |-IfStmt 0x1ff4282b7d0 <line:2865:25, line:2866:35>
|   |   |         |   | | |-OpaqueValueExpr 0x1ff4282b7b8 <<invalid sloc>> '_Bool'
|   |   |         |   | | `-BinaryOperator 0x1ff4282b798 <col:29, col:35> 'int' '='
|   |   |         |   | |   |-DeclRefExpr 0x1ff4282b750 <col:29> 'int' lvalue Var 0x1ff428213e0 's_r' 'int'
|   |   |         |   | |   `-IntegerLiteral 0x1ff4282b770 <col:35> 'int' 1
|   |   |         |   | `-IfStmt 0x1ff4282b888 <line:2867:25, line:2868:35>
|   |   |         |   |   |-OpaqueValueExpr 0x1ff4282b870 <<invalid sloc>> '_Bool'
|   |   |         |   |   `-BinaryOperator 0x1ff4282b850 <col:29, col:35> 'int' '='
|   |   |         |   |     |-DeclRefExpr 0x1ff4282b808 <col:29> 'int' lvalue Var 0x1ff42821460 's_w' 'int'
|   |   |         |   |     `-IntegerLiteral 0x1ff4282b828 <col:35> 'int' 1
|   |   |         |   `-CompoundStmt 0x1ff4282bb10 <line:2869:28, line:2874:21>
|   |   |         |     |-CallExpr 0x1ff4282ba10 <line:2870:25, col:60> 'int'
|   |   |         |     | |-ImplicitCastExpr 0x1ff4282b9f8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |         |     | | `-DeclRefExpr 0x1ff4282b8c0 <col:25> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |         |     | |-ParenExpr 0x1ff4282b998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |         |     | | `-UnaryOperator 0x1ff4282b980 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |         |     | |   `-ArraySubscriptExpr 0x1ff4282b960 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |         |     | |     |-CallExpr 0x1ff4282b918 <col:18, col:29> 'FILE *'
|   |   |         |     | |     | `-ImplicitCastExpr 0x1ff4282b900 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         |     | |     |   `-DeclRefExpr 0x1ff4282b8e0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |         |     | |     `-IntegerLiteral 0x1ff4282b938 <col:31> 'int' 2
|   |   |         |     | `-ImplicitCastExpr 0x1ff4282ba58 <.//openssl//file_jk/before\test\ssltest_old.c:2870:41> 'const char *' <NoOp>
|   |   |         |     |   `-ImplicitCastExpr 0x1ff4282ba40 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |         |     |     `-StringLiteral 0x1ff4282b9b8 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   |   |         |     |-BinaryOperator 0x1ff4282bab8 <line:2871:25, col:41> 'int' '='
|   |   |         |     | |-DeclRefExpr 0x1ff4282ba70 <col:25> 'int' lvalue Var 0x1ff42821b88 'err_in_server' 'int'
|   |   |         |     | `-IntegerLiteral 0x1ff4282ba90 <col:41> 'int' 1
|   |   |         |     `-GotoStmt 0x1ff4282baf8 <line:2873:25, col:30> 'err' 0x1ff42822040
|   |   |         `-IfStmt 0x1ff4282c388 <line:2875:24, line:2890:17> has_else
|   |   |           |-BinaryOperator 0x1ff4282bc00 <line:2875:28, col:33> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x1ff4282bbe8 <col:28> 'int' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x1ff4282bba0 <col:28> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |           | `-IntegerLiteral 0x1ff4282bbc0 <col:33> 'int' 0
|   |   |           |-CompoundStmt 0x1ff4282be20 <col:36, line:2880:17>
|   |   |           | |-CallExpr 0x1ff4282bda8 <line:2877:21, line:2878:71> 'int'
|   |   |           | | |-ImplicitCastExpr 0x1ff4282bd90 <line:2877:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x1ff4282bc40 <col:21> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |           | | |-ParenExpr 0x1ff4282bd18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |           | | | `-UnaryOperator 0x1ff4282bd00 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |           | | |   `-ArraySubscriptExpr 0x1ff4282bce0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |           | | |     |-CallExpr 0x1ff4282bc98 <col:18, col:29> 'FILE *'
|   |   |           | | |     | `-ImplicitCastExpr 0x1ff4282bc80 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           | | |     |   `-DeclRefExpr 0x1ff4282bc60 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |           | | |     `-IntegerLiteral 0x1ff4282bcb8 <col:31> 'int' 2
|   |   |           | | `-ImplicitCastExpr 0x1ff4282bdf0 <.//openssl//file_jk/before\test\ssltest_old.c:2878:29> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x1ff4282bdd8 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x1ff4282bd38 <col:29> 'char [40]' lvalue "SSL SERVER STARTUP FAILED in SSL_write\n"
|   |   |           | `-GotoStmt 0x1ff4282be08 <line:2879:21, col:26> 'err' 0x1ff42822040
|   |   |           `-CompoundStmt 0x1ff4282c350 <line:2880:24, line:2890:17>
|   |   |             |-IfStmt 0x1ff4282bf88 <line:2881:21, line:2882:54>
|   |   |             | |-ImplicitCastExpr 0x1ff4282be60 <line:2881:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x1ff4282be40 <col:25> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   |   |             | `-CallExpr 0x1ff4282bf10 <line:2882:25, col:54> 'int'
|   |   |             |   |-ImplicitCastExpr 0x1ff4282bef8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x1ff4282be78 <col:25> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   |             |   |-ImplicitCastExpr 0x1ff4282bf58 <col:32> 'const char *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x1ff4282bf40 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             |   |   `-StringLiteral 0x1ff4282be98 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   |   |             |   `-ImplicitCastExpr 0x1ff4282bf70 <col:53> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x1ff4282bec0 <col:53> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |             |-CompoundAssignOperator 0x1ff4282c010 <line:2883:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |             | |-DeclRefExpr 0x1ff4282bfa0 <col:21> 'long' lvalue Var 0x1ff42824e40 'sw_num' 'long'
|   |   |             | `-ImplicitCastExpr 0x1ff4282bff8 <col:31> 'long' <IntegralCast>
|   |   |             |   `-ImplicitCastExpr 0x1ff4282bfe0 <col:31> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x1ff4282bfc0 <col:31> 'int' lvalue Var 0x1ff42821520 'i' 'int'
|   |   |             |-BinaryOperator 0x1ff4282c088 <line:2884:21, col:31> 'int' '='
|   |   |             | |-DeclRefExpr 0x1ff4282c040 <col:21> 'int' lvalue Var 0x1ff42821790 's_write' 'int'
|   |   |             | `-IntegerLiteral 0x1ff4282c060 <col:31> 'int' 0
|   |   |             |-BinaryOperator 0x1ff4282c0f0 <line:2885:21, col:27> 'int' '='
|   |   |             | |-DeclRefExpr 0x1ff4282c0a8 <col:21> 'int' lvalue Var 0x1ff428212e0 'c_r' 'int'
|   |   |             | `-IntegerLiteral 0x1ff4282c0c8 <col:27> 'int' 1
|   |   |             `-IfStmt 0x1ff4282c220 <line:2886:21, line:2635:17>
|   |   |               |-BinaryOperator 0x1ff4282c188 <line:2886:25, col:35> 'int' '<='
|   |   |               | |-ImplicitCastExpr 0x1ff4282c158 <col:25> 'long' <LValueToRValue>
|   |   |               | | `-DeclRefExpr 0x1ff4282c110 <col:25> 'long' lvalue Var 0x1ff42824e40 'sw_num' 'long'
|   |   |               | `-ImplicitCastExpr 0x1ff4282c170 <col:35> 'long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x1ff4282c130 <col:35> 'int' 0
|   |   |               `-CompoundAssignOperator 0x1ff4282c1f0 <line:2887:25, line:2635:17> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |                 |-DeclRefExpr 0x1ff4282c1a8 <line:2887:25> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |   |                 `-IntegerLiteral 0x1ff4282c1c8 <line:2635:17> 'int' 2
|   |   `-IfStmt 0x1ff4282c5b8 <line:2894:9, line:2895:13>
|   |     |-BinaryOperator 0x1ff4282c590 <line:2894:13, col:46> 'int' '&&'
|   |     | |-ParenExpr 0x1ff4282c4d0 <col:13, col:27> 'int'
|   |     | | `-BinaryOperator 0x1ff4282c4b0 <col:14, line:2635:17> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x1ff4282c498 <line:2894:14> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1ff4282c450 <col:14> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |     | |   `-IntegerLiteral 0x1ff4282c470 <line:2635:17> 'int' 2
|   |     | `-ParenExpr 0x1ff4282c570 <line:2894:32, col:46> 'int'
|   |     |   `-BinaryOperator 0x1ff4282c550 <col:33, line:2634:17> 'int' '&'
|   |     |     |-ImplicitCastExpr 0x1ff4282c538 <line:2894:33> 'int' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1ff4282c4f0 <col:33> 'int' lvalue Var 0x1ff42821650 'done' 'int'
|   |     |     `-IntegerLiteral 0x1ff4282c510 <line:2634:17> 'int' 1
|   |     `-BreakStmt 0x1ff4282c5b0 <line:2895:13>
|   |-IfStmt 0x1ff4282c7b8 <line:2901:5, line:2904:5>
|   | |-OpaqueValueExpr 0x1ff4282c7a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff4282c780 <line:2901:39, line:2904:5>
|   |   |-BinaryOperator 0x1ff4282c748 <line:2902:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4282c6e8 <col:9> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4282c720 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4282c768 <line:2903:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff4282cad8 <line:2906:5, line:2910:5>
|   | |-BinaryOperator 0x1ff4282c850 <line:2906:9, col:31> 'int' '<'
|   | | |-CallExpr 0x1ff4282c808 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x1ff4282c7f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x1ff4282c7d0 <col:9> 'int ()' Function 0x1ff427cf998 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x1ff4282c828 <col:31> 'int' 0
|   | `-CompoundStmt 0x1ff4282cab0 <col:34, line:2910:5>
|   |   |-CallExpr 0x1ff4282c9d0 <line:2907:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4282c9b8 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4282c870 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff4282c948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff4282c930 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff4282c910 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff4282c8c8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff4282c8b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff4282c890 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff4282c8e8 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff4282ca18 <.//openssl//file_jk/before\test\ssltest_old.c:2907:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff4282ca00 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff4282c968 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x1ff4282ca78 <line:2908:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4282ca30 <col:9> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4282ca50 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4282ca98 <line:2909:9, col:14> 'err' 0x1ff42822040
|   |-IfStmt 0x1ff4282cd88 <line:2911:5, line:2915:5>
|   | |-ImplicitCastExpr 0x1ff4282cb10 <line:2911:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff4282caf0 <col:9> 'int' lvalue Var 0x1ff427cf198 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x1ff4282cd60 <col:27, line:2915:5>
|   |   |-CallExpr 0x1ff4282cc80 <line:2912:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4282cc68 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4282cb28 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1ff4282cc00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1ff4282cbe8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1ff4282cbc8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1ff4282cb80 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1ff4282cb68 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1ff4282cb48 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1ff4282cba0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x1ff4282ccc8 <.//openssl//file_jk/before\test\ssltest_old.c:2912:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff4282ccb0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff4282cc20 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x1ff4282cd28 <line:2913:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ff4282cce0 <col:9> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   |   | `-IntegerLiteral 0x1ff4282cd00 <col:15> 'int' 1
|   |   `-GotoStmt 0x1ff4282cd48 <line:2914:9, col:14> 'err' 0x1ff42822040
|   |-BinaryOperator 0x1ff4282cde8 <line:2916:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ff4282cda0 <col:5> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   | `-IntegerLiteral 0x1ff4282cdc0 <col:11> 'int' 0
|   |-LabelStmt 0x1ff4282ce30 <line:2917:2, col:5> 'err'
|   | `-NullStmt 0x1ff4282ce28 <col:5>
|   |-CallExpr 0x1ff4282cf00 <line:2922:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1ff4282cee8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff4282cea8 <col:5> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1ff4282cf28 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ff4282cec8 <col:18> 'char *' lvalue Var 0x1ff42824980 'cbuf' 'char *'
|   |-CallExpr 0x1ff4282cf98 <line:2923:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1ff4282cf80 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ff4282cf40 <col:5> 'int ()' Function 0x1ff427dcfd0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1ff4282cfc0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ff4282cf60 <col:18> 'char *' lvalue Var 0x1ff42824aa0 'sbuf' 'char *'
|   |-IfStmt 0x1ff428277b8 <line:2925:5, line:2928:42> has_else
|   | |-BinaryOperator 0x1ff42827238 <line:2925:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x1ff428270a8 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1ff42827078 <.//openssl//file_jk/before\test\ssltest_old.c:2925:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ff4282cfd8 <col:9> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x1ff42827090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x1ff42827058 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1ff42827030 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1ff4282cff8 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1ff42827218 <.//openssl//file_jk/before\test\ssltest_old.c:2925:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x1ff42827178 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x1ff42827160 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x1ff428270c8 <col:37> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x1ff428271a8 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1ff428270e8 <col:44> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x1ff428271d8 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x1ff428271c0 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x1ff42827108 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x1ff428271f0 <col:80> 'int' 0
|   | |-BinaryOperator 0x1ff42827398 <line:2926:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x1ff42827258 <col:9> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   | | `-ConditionalOperator 0x1ff42827368 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x1ff428272f8 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x1ff428272d8 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x1ff428272c0 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1ff42827278 <col:16> 'int' lvalue Var 0x1ff42821ac8 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x1ff42827298 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x1ff42827318 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x1ff42827340 <col:42> 'int' 1
|   | `-IfStmt 0x1ff428277a0 <line:2927:10, line:2928:42>
|   |   |-BinaryOperator 0x1ff42827620 <line:2927:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x1ff42827490 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff42827460 <.//openssl//file_jk/before\test\ssltest_old.c:2927:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff428273b8 <col:14> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x1ff42827478 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff42827440 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff42827418 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff428273d8 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x1ff42827600 <.//openssl//file_jk/before\test\ssltest_old.c:2927:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x1ff42827560 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x1ff42827548 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1ff428274b0 <col:42> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x1ff42827590 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1ff428274d0 <col:49> 'const char *' lvalue Var 0x1ff427ca3a8 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1ff428275c0 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1ff428275a8 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1ff428274f0 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x1ff428275d8 <col:85> 'int' 0
|   |   `-BinaryOperator 0x1ff42827780 <line:2928:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x1ff42827640 <col:9> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|   |     `-ConditionalOperator 0x1ff42827750 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x1ff428276e0 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x1ff428276c0 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x1ff428276a8 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ff42827660 <col:16> 'int' lvalue Var 0x1ff42821b88 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x1ff42827680 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x1ff42827700 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x1ff42827728 <col:42> 'int' 1
|   `-ReturnStmt 0x1ff42827838 <line:2930:5, col:16>
|     `-ImplicitCastExpr 0x1ff42827820 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ff42827800 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1ff428277e0 <col:13> 'int' lvalue Var 0x1ff42821000 'ret' 'int'
|-FunctionDecl 0x1ff42827aa8 <line:2933:1, line:2966:1> line:2933:12 invalid verify_callback 'int (int, int *)' static
| |-ParmVarDecl 0x1ff42827988 <col:28, col:32> col:32 used ok 'int'
| |-ParmVarDecl 0x1ff42827a08 <col:36, col:52> col:52 invalid ctx 'int *'
| `-CompoundStmt 0x1ff42828d20 <line:2934:1, line:2966:1>
|   |-DeclStmt 0x1ff42827d08 <line:2935:5, col:22>
|   | |-VarDecl 0x1ff42827b88 <col:5, col:11> col:11 used s 'char *'
|   | `-VarDecl 0x1ff42827c88 <col:5, col:21> col:14 used buf 'char [256]'
|   |-IfStmt 0x1ff428286b0 <line:2939:5, line:2947:5>
|   | |-BinaryOperator 0x1ff428281f8 <line:2939:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1ff428281c8 <.//openssl//file_jk/before\test\ssltest_old.c:2939:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff42828120 <col:9> 'char *' lvalue Var 0x1ff42827b88 's' 'char *'
|   | | `-ImplicitCastExpr 0x1ff428281e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ff428281a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ff42828180 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ff42828140 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ff42828698 <.//openssl//file_jk/before\test\ssltest_old.c:2939:20, line:2947:5>
|   |   `-IfStmt 0x1ff42828670 <line:2940:9, line:2946:9> has_else
|   |     |-ImplicitCastExpr 0x1ff42828250 <line:2940:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff42828218 <col:13> 'int' lvalue ParmVar 0x1ff42827988 'ok' 'int'
|   |     |-NullStmt 0x1ff42828668 <line:2941:13>
|   |     `-CompoundStmt 0x1ff42828658 <line:2942:14, line:2946:9>
|   |-IfStmt 0x1ff42828ca0 <line:2949:5, line:2963:5>
|   | |-BinaryOperator 0x1ff42828728 <line:2949:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ff42828710 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff428286c8 <col:9> 'int' lvalue ParmVar 0x1ff42827988 'ok' 'int'
|   | | `-IntegerLiteral 0x1ff428286e8 <col:15> 'int' 0
|   | `-CompoundStmt 0x1ff42828c80 <col:18, line:2963:5>
|   |   |-DeclStmt 0x1ff428287e8 <line:2950:9, col:46>
|   |   | `-VarDecl 0x1ff42828760 <col:9, col:13> col:13 used i 'int'
|   |   `-SwitchStmt 0x1ff42828850 <line:2952:9, line:2962:9>
|   |     |-ImplicitCastExpr 0x1ff42828838 <line:2952:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ff42828800 <col:17> 'int' lvalue Var 0x1ff42828760 'i' 'int'
|   |     `-CompoundStmt 0x1ff42828c50 <col:20, line:2962:9>
|   |       |-DefaultStmt 0x1ff42828bb8 <line:2953:9, line:2955:53>
|   |       | `-CallExpr 0x1ff42828b50 <line:2954:13, line:2955:53> 'int'
|   |       |   |-ImplicitCastExpr 0x1ff42828b38 <line:2954:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1ff42828870 <col:13> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |       |   |-ParenExpr 0x1ff42828948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       |   | `-UnaryOperator 0x1ff42828930 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       |   |   `-ArraySubscriptExpr 0x1ff42828910 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       |   |     |-CallExpr 0x1ff428288c8 <col:18, col:29> 'FILE *'
|   |       |   |     | `-ImplicitCastExpr 0x1ff428288b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |   |     |   `-DeclRefExpr 0x1ff42828890 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       |   |     `-IntegerLiteral 0x1ff428288e8 <col:31> 'int' 2
|   |       |   |-ImplicitCastExpr 0x1ff42828ba0 <.//openssl//file_jk/before\test\ssltest_old.c:2954:29> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x1ff42828b88 <col:29> 'char *' <ArrayToPointerDecay>
|   |       |   |   `-StringLiteral 0x1ff42828968 <col:29> 'char [18]' lvalue "Error string: %s\n"
|   |       |   `-CallExpr 0x1ff42828ae0 <line:2955:21, col:52> 'int'
|   |       |     |-ImplicitCastExpr 0x1ff42828ac8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1ff42828a88 <col:21> 'int ()' Function 0x1ff428289c0 'X509_verify_cert_error_string' 'int ()'
|   |       |     `-ImplicitCastExpr 0x1ff42828b08 <col:51> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1ff42828aa8 <col:51> 'int' lvalue Var 0x1ff42828760 'i' 'int'
|   |       |-BreakStmt 0x1ff42828bd8 <line:2956:13>
|   |       |-BinaryOperator 0x1ff42828c28 <line:2960:13, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x1ff42828be0 <col:13> 'int' lvalue ParmVar 0x1ff42827988 'ok' 'int'
|   |       | `-IntegerLiteral 0x1ff42828c00 <col:18> 'int' 1
|   |       `-BreakStmt 0x1ff42828c48 <line:2961:13>
|   `-ReturnStmt 0x1ff42828d10 <line:2965:5, col:15>
|     `-ImplicitCastExpr 0x1ff42828cf8 <col:12, col:15> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ff42828cd8 <col:12, col:15> 'int' lvalue
|         `-DeclRefExpr 0x1ff42828cb8 <col:13> 'int' lvalue ParmVar 0x1ff42827988 'ok' 'int'
|-FunctionDecl 0x1ff42828e88 <line:2968:1, line:2993:1> line:2968:12 invalid app_verify_callback 'int (int *, void *)' static
| |-ParmVarDecl 0x1ff42828d68 <col:32, col:48> col:48 invalid ctx 'int *'
| |-ParmVarDecl 0x1ff42828de8 <col:53, col:59> col:59 used arg 'void *'
| `-CompoundStmt 0x1ff4281dc48 <line:2969:1, line:2993:1>
|   |-DeclStmt 0x1ff42828ff8 <line:2970:5, col:15>
|   | `-VarDecl 0x1ff42828f68 <col:5, col:14> col:9 used ok 'int' cinit
|   |   `-IntegerLiteral 0x1ff42828fd0 <col:14> 'int' 1
|   |-DeclStmt 0x1ff4281d0d8 <line:2971:5, col:40>
|   | `-VarDecl 0x1ff4281d008 <col:5, col:37> col:28 used cb_arg 'struct app_verify_arg *' cinit
|   |   `-ImplicitCastExpr 0x1ff4281d0c0 <col:37> 'struct app_verify_arg *' <BitCast>
|   |     `-ImplicitCastExpr 0x1ff4281d0a8 <col:37> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ff4281d070 <col:37> 'void *' lvalue ParmVar 0x1ff42828de8 'arg' 'void *'
|   |-IfStmt 0x1ff4281da80 <line:2973:5, line:2988:5>
|   | |-ImplicitCastExpr 0x1ff4281d170 <line:2973:9, col:17> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1ff4281d140 <col:9, col:17> 'int' lvalue ->app_verify 0x1ff428be068
|   | |   `-ImplicitCastExpr 0x1ff4281d128 <col:9> 'struct app_verify_arg *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1ff4281d0f0 <col:9> 'struct app_verify_arg *' lvalue Var 0x1ff4281d008 'cb_arg' 'struct app_verify_arg *'
|   | `-CompoundStmt 0x1ff4281da48 <col:29, line:2988:5>
|   |   |-DeclStmt 0x1ff4281d388 <line:2974:9, col:33>
|   |   | |-VarDecl 0x1ff4281d1a0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\test\ssltest_old.c:2974:15 used s 'char *' cinit
|   |   | | `-ImplicitCastExpr 0x1ff4281d290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   | |   `-ParenExpr 0x1ff4281d270 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff4281d248 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff4281d208 <col:26> 'int' 0
|   |   | `-VarDecl 0x1ff4281d308 <.//openssl//file_jk/before\test\ssltest_old.c:2974:9, col:32> col:25 used buf 'char [256]'
|   |   |-CallExpr 0x1ff4281d540 <line:2977:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4281d528 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4281d4b0 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1ff4281d580 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1ff4281d568 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1ff4281d4d0 <col:16> 'char [40]' lvalue "In app_verify_callback, allowing cert. "
|   |   |-CallExpr 0x1ff4281d678 <line:2978:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x1ff4281d660 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ff4281d598 <col:9> 'int (const char *, ...)' Function 0x1ff4270c390 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1ff4281d6c0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1ff4281d6a8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1ff4281d5b8 <col:16> 'char [12]' lvalue "Arg is: %s\n"
|   |   | `-ImplicitCastExpr 0x1ff4281d6d8 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1ff4281d618 <col:32, col:40> 'char *' lvalue ->string 0x1ff428bdff8
|   |   |     `-ImplicitCastExpr 0x1ff4281d600 <col:32> 'struct app_verify_arg *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1ff4281d5e0 <col:32> 'struct app_verify_arg *' lvalue Var 0x1ff4281d008 'cb_arg' 'struct app_verify_arg *'
|   |   |-IfStmt 0x1ff4281d9d8 <line:2983:9, line:2986:9>
|   |   | |-BinaryOperator 0x1ff4281d918 <line:2983:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1ff4281d8e8 <.//openssl//file_jk/before\test\ssltest_old.c:2983:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ff4281d840 <col:13> 'char *' lvalue Var 0x1ff4281d1a0 's' 'char *'
|   |   | | `-ImplicitCastExpr 0x1ff4281d900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   | |   `-ParenExpr 0x1ff4281d8c8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1ff4281d8a0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1ff4281d860 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1ff4281d9c8 <.//openssl//file_jk/before\test\ssltest_old.c:2983:24, line:2986:9>
|   |   `-ReturnStmt 0x1ff4281da38 <line:2987:9, col:18>
|   |     `-ParenExpr 0x1ff4281da18 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1ff4281d9f0 <col:17> 'int' 1
|   `-ReturnStmt 0x1ff4281dc38 <line:2992:5, col:15>
|     `-ImplicitCastExpr 0x1ff4281dc20 <col:12, col:15> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ff4281dc00 <col:12, col:15> 'int' lvalue
|         `-DeclRefExpr 0x1ff4281dbe0 <col:13> 'int' lvalue Var 0x1ff42828f68 'ok' 'int'
|-FunctionDecl 0x1ff4281dcd0 <line:3003:1, line:3035:1> line:3003:12 invalid get_dh512 'int *()' static
| `-CompoundStmt 0x1ff4282e390 <line:3004:1, line:3035:1>
|   |-DeclStmt 0x1ff4282d598 <line:3005:5, line:3017:6>
|   | `-VarDecl 0x1ff4281dde0 <line:3005:5, line:3017:5> line:3005:26 used dh512_p 'unsigned char [64]' static cinit
|   |   `-InitListExpr 0x1ff4281ea98 <col:38, line:3017:5> 'unsigned char [64]'
|   |     |-ImplicitCastExpr 0x1ff4281ead8 <line:3006:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281de48 <col:9> 'int' 203
|   |     |-ImplicitCastExpr 0x1ff4281eaf8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281de70 <col:15> 'int' 200
|   |     |-ImplicitCastExpr 0x1ff4281eb20 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281de98 <col:21> 'int' 225
|   |     |-ImplicitCastExpr 0x1ff4281eb58 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281dec0 <col:27> 'int' 134
|   |     |-ImplicitCastExpr 0x1ff4281eb70 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281dee8 <col:33> 'int' 208
|   |     |-ImplicitCastExpr 0x1ff4281ebc8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281df10 <col:39> 'int' 31
|   |     |-ImplicitCastExpr 0x1ff4281ebe0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281df38 <col:45> 'int' 148
|   |     |-ImplicitCastExpr 0x1ff4281ebf8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281df60 <col:51> 'int' 23
|   |     |-ImplicitCastExpr 0x1ff4281ec10 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281df88 <col:57> 'int' 166
|   |     |-ImplicitCastExpr 0x1ff4281eca8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281dfb0 <col:63> 'int' 153
|   |     |-ImplicitCastExpr 0x1ff4281ecc0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281dfd8 <col:69> 'int' 240
|   |     |-ImplicitCastExpr 0x1ff4281ecd8 <line:3007:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e000 <col:9> 'int' 198
|   |     |-ImplicitCastExpr 0x1ff4281ecf0 <line:3008:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e028 <col:9> 'int' 31
|   |     |-ImplicitCastExpr 0x1ff4281ed08 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e050 <col:15> 'int' 13
|   |     |-ImplicitCastExpr 0x1ff4281ed20 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e078 <col:21> 'int' 172
|   |     |-ImplicitCastExpr 0x1ff4281ed38 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e0a0 <col:27> 'int' 182
|   |     |-ImplicitCastExpr 0x1ff4281ed50 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e0c8 <col:33> 'int' 37
|   |     |-ImplicitCastExpr 0x1ff4281ee68 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e0f0 <col:39> 'int' 62
|   |     |-ImplicitCastExpr 0x1ff4281ee80 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e118 <col:45> 'int' 6
|   |     |-ImplicitCastExpr 0x1ff4281ee98 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e140 <col:51> 'int' 57
|   |     |-ImplicitCastExpr 0x1ff4281eeb0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e168 <col:57> 'int' 202
|   |     |-ImplicitCastExpr 0x1ff4281eec8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e190 <col:63> 'int' 114
|   |     |-ImplicitCastExpr 0x1ff4281eee0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e1b8 <col:69> 'int' 4
|   |     |-ImplicitCastExpr 0x1ff4281eef8 <line:3009:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e1e0 <col:9> 'int' 176
|   |     |-ImplicitCastExpr 0x1ff4281ef10 <line:3010:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e208 <col:9> 'int' 110
|   |     |-ImplicitCastExpr 0x1ff4281ef28 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e230 <col:15> 'int' 218
|   |     |-ImplicitCastExpr 0x1ff4281ef40 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e258 <col:21> 'int' 192
|   |     |-ImplicitCastExpr 0x1ff4281ef58 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e280 <col:27> 'int' 97
|   |     |-ImplicitCastExpr 0x1ff4281ef70 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e2a8 <col:33> 'int' 230
|   |     |-ImplicitCastExpr 0x1ff4281ef88 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e2d0 <col:39> 'int' 122
|   |     |-ImplicitCastExpr 0x1ff4281efa0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e2f8 <col:45> 'int' 119
|   |     |-ImplicitCastExpr 0x1ff4281efb8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e320 <col:51> 'int' 37
|   |     |-ImplicitCastExpr 0x1ff4282d060 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e348 <col:57> 'int' 232
|   |     |-ImplicitCastExpr 0x1ff4282d278 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e370 <col:63> 'int' 59
|   |     |-ImplicitCastExpr 0x1ff4282d290 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e398 <col:69> 'int' 185
|   |     |-ImplicitCastExpr 0x1ff4282d2a8 <line:3011:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e3c0 <col:9> 'int' 95
|   |     |-ImplicitCastExpr 0x1ff4282d2c0 <line:3012:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e3e8 <col:9> 'int' 154
|   |     |-ImplicitCastExpr 0x1ff4282d2d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e410 <col:15> 'int' 182
|   |     |-ImplicitCastExpr 0x1ff4282d2f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e438 <col:21> 'int' 181
|   |     |-ImplicitCastExpr 0x1ff4282d308 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e460 <col:27> 'int' 254
|   |     |-ImplicitCastExpr 0x1ff4282d320 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e488 <col:33> 'int' 153
|   |     |-ImplicitCastExpr 0x1ff4282d338 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e4b0 <col:39> 'int' 11
|   |     |-ImplicitCastExpr 0x1ff4282d350 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e4d8 <col:45> 'int' 161
|   |     |-ImplicitCastExpr 0x1ff4282d368 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e500 <col:51> 'int' 147
|   |     |-ImplicitCastExpr 0x1ff4282d380 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e528 <col:57> 'int' 78
|   |     |-ImplicitCastExpr 0x1ff4282d398 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e550 <col:63> 'int' 53
|   |     |-ImplicitCastExpr 0x1ff4282d3b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e578 <col:69> 'int' 51
|   |     |-ImplicitCastExpr 0x1ff4282d3c8 <line:3013:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e5a0 <col:9> 'int' 184
|   |     |-ImplicitCastExpr 0x1ff4282d3e0 <line:3014:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e5c8 <col:9> 'int' 225
|   |     |-ImplicitCastExpr 0x1ff4282d3f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e5f0 <col:15> 'int' 241
|   |     |-ImplicitCastExpr 0x1ff4282d410 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e618 <col:21> 'int' 19
|   |     |-ImplicitCastExpr 0x1ff4282d428 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e640 <col:27> 'int' 79
|   |     |-ImplicitCastExpr 0x1ff4282d440 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e668 <col:33> 'int' 89
|   |     |-ImplicitCastExpr 0x1ff4282d458 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e690 <col:39> 'int' 26
|   |     |-ImplicitCastExpr 0x1ff4282d470 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e6b8 <col:45> 'int' 210
|   |     |-ImplicitCastExpr 0x1ff4282d488 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e6e0 <col:51> 'int' 87
|   |     |-ImplicitCastExpr 0x1ff4282d4a0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e708 <col:57> 'int' 192
|   |     |-ImplicitCastExpr 0x1ff4282d4b8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e730 <col:63> 'int' 38
|   |     |-ImplicitCastExpr 0x1ff4282d4d0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e758 <col:69> 'int' 33
|   |     |-ImplicitCastExpr 0x1ff4282d4e8 <line:3015:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e780 <col:9> 'int' 51
|   |     |-ImplicitCastExpr 0x1ff4282d500 <line:3016:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e7a8 <col:9> 'int' 2
|   |     |-ImplicitCastExpr 0x1ff4282d518 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e7d0 <col:15> 'int' 197
|   |     |-ImplicitCastExpr 0x1ff4282d530 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4281e7f8 <col:21> 'int' 174
|   |     `-ImplicitCastExpr 0x1ff4282d548 <col:27> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff4281e820 <col:27> 'int' 35
|   |-DeclStmt 0x1ff4282d758 <line:3018:5, line:3020:6>
|   | `-VarDecl 0x1ff4282d5d8 <line:3018:5, line:3020:5> line:3018:26 used dh512_g 'unsigned char [1]' static cinit
|   |   `-InitListExpr 0x1ff4282d6c0 <col:38, line:3020:5> 'unsigned char [1]'
|   |     `-ImplicitCastExpr 0x1ff4282d700 <line:3019:9> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff4282d640 <col:9> 'int' 2
|   |-IfStmt 0x1ff4282da28 <line:3024:5, line:3025:21>
|   | |-OpaqueValueExpr 0x1ff4282da10 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ff4282da00 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x1ff4282d9e8 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1ff4282d9c8 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x1ff4282d9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff4282d980 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff4282d940 <col:26> 'int' 0
|   `-IfStmt 0x1ff4282e378 <.//openssl//file_jk/before\test\ssltest_old.c:3028:5, line:3033:5>
|     |-OpaqueValueExpr 0x1ff4282e360 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff4282e348 <line:3028:69, line:3033:5>
|       `-ReturnStmt 0x1ff4282e338 <line:3032:9, col:21>
|         `-ImplicitCastExpr 0x1ff4282e320 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x1ff4282e300 <col:16, col:21> 'void *'
|             `-ParenExpr 0x1ff4282e2e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x1ff4282e2b8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x1ff4282e278 <col:26> 'int' 0
|-FunctionDecl 0x1ff4282e3e8 <.//openssl//file_jk/before\test\ssltest_old.c:3037:1, line:3079:1> line:3037:12 invalid get_dh1024 'int *()' static
| `-CompoundStmt 0x1ff4283dc98 <line:3038:1, line:3079:1>
|   |-DeclStmt 0x1ff4283d298 <line:3039:5, line:3061:6>
|   | `-VarDecl 0x1ff4282e4c8 <line:3039:5, line:3061:5> line:3039:26 used dh1024_p 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x1ff4283be08 <col:39, line:3061:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x1ff4283be48 <line:3040:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e530 <col:9> 'int' 248
|   |     |-ImplicitCastExpr 0x1ff4283be68 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e558 <col:15> 'int' 129
|   |     |-ImplicitCastExpr 0x1ff4283be90 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e580 <col:21> 'int' 137
|   |     |-ImplicitCastExpr 0x1ff4283bec8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e5a8 <col:27> 'int' 125
|   |     |-ImplicitCastExpr 0x1ff4283bee0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e5d0 <col:33> 'int' 20
|   |     |-ImplicitCastExpr 0x1ff4283bf38 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e5f8 <col:39> 'int' 36
|   |     |-ImplicitCastExpr 0x1ff4283bf50 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e620 <col:45> 'int' 197
|   |     |-ImplicitCastExpr 0x1ff4283bf68 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e648 <col:51> 'int' 209
|   |     |-ImplicitCastExpr 0x1ff4283bf80 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e670 <col:57> 'int' 230
|   |     |-ImplicitCastExpr 0x1ff4283c018 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e698 <col:63> 'int' 247
|   |     |-ImplicitCastExpr 0x1ff4283c030 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e6c0 <col:69> 'int' 191
|   |     |-ImplicitCastExpr 0x1ff4283c048 <line:3041:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e6e8 <col:9> 'int' 58
|   |     |-ImplicitCastExpr 0x1ff4283c060 <line:3042:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e710 <col:9> 'int' 228
|   |     |-ImplicitCastExpr 0x1ff4283c078 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e738 <col:15> 'int' 144
|   |     |-ImplicitCastExpr 0x1ff4283c090 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e760 <col:21> 'int' 244
|   |     |-ImplicitCastExpr 0x1ff4283c0a8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e788 <col:27> 'int' 252
|   |     |-ImplicitCastExpr 0x1ff4283c0c0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e7b0 <col:33> 'int' 115
|   |     |-ImplicitCastExpr 0x1ff4283c1d8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e7d8 <col:39> 'int' 251
|   |     |-ImplicitCastExpr 0x1ff4283c1f0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e800 <col:45> 'int' 52
|   |     |-ImplicitCastExpr 0x1ff4283c208 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e828 <col:51> 'int' 181
|   |     |-ImplicitCastExpr 0x1ff4283c220 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e850 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x1ff4283c238 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e878 <col:63> 'int' 76
|   |     |-ImplicitCastExpr 0x1ff4283c250 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e8a0 <col:69> 'int' 86
|   |     |-ImplicitCastExpr 0x1ff4283c268 <line:3043:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e8c8 <col:9> 'int' 162
|   |     |-ImplicitCastExpr 0x1ff4283c280 <line:3044:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e8f0 <col:9> 'int' 234
|   |     |-ImplicitCastExpr 0x1ff4283c298 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e918 <col:15> 'int' 167
|   |     |-ImplicitCastExpr 0x1ff4283c2b0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e940 <col:21> 'int' 233
|   |     |-ImplicitCastExpr 0x1ff4283c2c8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e968 <col:27> 'int' 192
|   |     |-ImplicitCastExpr 0x1ff4283c2e0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e990 <col:33> 'int' 192
|   |     |-ImplicitCastExpr 0x1ff4283c2f8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e9b8 <col:39> 'int' 206
|   |     |-ImplicitCastExpr 0x1ff4283c310 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282e9e0 <col:45> 'int' 137
|   |     |-ImplicitCastExpr 0x1ff4283c328 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ea08 <col:51> 'int' 225
|   |     |-ImplicitCastExpr 0x1ff4283c340 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ea30 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x1ff4283c558 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ea58 <col:63> 'int' 99
|   |     |-ImplicitCastExpr 0x1ff4283c570 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ea80 <col:69> 'int' 63
|   |     |-ImplicitCastExpr 0x1ff4283c588 <line:3045:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eaa8 <col:9> 'int' 176
|   |     |-ImplicitCastExpr 0x1ff4283c5a0 <line:3046:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ead0 <col:9> 'int' 107
|   |     |-ImplicitCastExpr 0x1ff4283c5b8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eaf8 <col:15> 'int' 50
|   |     |-ImplicitCastExpr 0x1ff4283c5d0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eb20 <col:21> 'int' 102
|   |     |-ImplicitCastExpr 0x1ff4283c5e8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eb48 <col:27> 'int' 241
|   |     |-ImplicitCastExpr 0x1ff4283c600 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eb70 <col:33> 'int' 209
|   |     |-ImplicitCastExpr 0x1ff4283c618 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eb98 <col:39> 'int' 123
|   |     |-ImplicitCastExpr 0x1ff4283c630 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ebc0 <col:45> 'int' 176
|   |     |-ImplicitCastExpr 0x1ff4283c648 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ebe8 <col:51> 'int' 0
|   |     |-ImplicitCastExpr 0x1ff4283c660 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ec10 <col:57> 'int' 143
|   |     |-ImplicitCastExpr 0x1ff4283c678 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ec38 <col:63> 'int' 202
|   |     |-ImplicitCastExpr 0x1ff4283c690 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ec60 <col:69> 'int' 135
|   |     |-ImplicitCastExpr 0x1ff4283c6a8 <line:3047:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ec88 <col:9> 'int' 194
|   |     |-ImplicitCastExpr 0x1ff4283c6c0 <line:3048:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ecb0 <col:9> 'int' 174
|   |     |-ImplicitCastExpr 0x1ff4283c6d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ecd8 <col:15> 'int' 152
|   |     |-ImplicitCastExpr 0x1ff4283c6f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ed00 <col:21> 'int' 137
|   |     |-ImplicitCastExpr 0x1ff4283c708 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ed28 <col:27> 'int' 38
|   |     |-ImplicitCastExpr 0x1ff4283c720 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ed50 <col:33> 'int' 23
|   |     |-ImplicitCastExpr 0x1ff4283c738 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ed78 <col:39> 'int' 194
|   |     |-ImplicitCastExpr 0x1ff4283c750 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eda0 <col:45> 'int' 5
|   |     |-ImplicitCastExpr 0x1ff4283c768 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282edc8 <col:51> 'int' 210
|   |     |-ImplicitCastExpr 0x1ff4283c780 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282edf0 <col:57> 'int' 236
|   |     |-ImplicitCastExpr 0x1ff4283c798 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ee18 <col:63> 'int' 8
|   |     |-ImplicitCastExpr 0x1ff4283c7b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ee40 <col:69> 'int' 208
|   |     |-ImplicitCastExpr 0x1ff4283c7c8 <line:3049:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ee68 <col:9> 'int' 140
|   |     |-ImplicitCastExpr 0x1ff4283c7e0 <line:3050:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ee90 <col:9> 'int' 255
|   |     |-ImplicitCastExpr 0x1ff4283c7f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eeb8 <col:15> 'int' 23
|   |     |-ImplicitCastExpr 0x1ff4283c810 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eee0 <col:21> 'int' 82
|   |     |-ImplicitCastExpr 0x1ff4283c828 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ef08 <col:27> 'int' 140
|   |     |-ImplicitCastExpr 0x1ff4283c840 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ef30 <col:33> 'int' 197
|   |     |-ImplicitCastExpr 0x1ff4283cc58 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ef58 <col:39> 'int' 7
|   |     |-ImplicitCastExpr 0x1ff4283cc70 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282ef80 <col:45> 'int' 147
|   |     |-ImplicitCastExpr 0x1ff4283cc88 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282efa8 <col:51> 'int' 3
|   |     |-ImplicitCastExpr 0x1ff4283cca0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282efd0 <col:57> 'int' 177
|   |     |-ImplicitCastExpr 0x1ff4283ccb8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282eff8 <col:63> 'int' 246
|   |     |-ImplicitCastExpr 0x1ff4283ccd0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4282f020 <col:69> 'int' 47
|   |     |-ImplicitCastExpr 0x1ff4283cce8 <line:3051:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b0d0 <col:9> 'int' 184
|   |     |-ImplicitCastExpr 0x1ff4283cd00 <line:3052:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b0f8 <col:9> 'int' 28
|   |     |-ImplicitCastExpr 0x1ff4283cd18 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b120 <col:15> 'int' 82
|   |     |-ImplicitCastExpr 0x1ff4283cd30 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b148 <col:21> 'int' 71
|   |     |-ImplicitCastExpr 0x1ff4283cd48 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b170 <col:27> 'int' 39
|   |     |-ImplicitCastExpr 0x1ff4283cd60 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b198 <col:33> 'int' 27
|   |     |-ImplicitCastExpr 0x1ff4283cd78 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b1c0 <col:39> 'int' 219
|   |     |-ImplicitCastExpr 0x1ff4283cd90 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b1e8 <col:45> 'int' 209
|   |     |-ImplicitCastExpr 0x1ff4283cda8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b210 <col:51> 'int' 141
|   |     |-ImplicitCastExpr 0x1ff4283cdc0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b238 <col:57> 'int' 157
|   |     |-ImplicitCastExpr 0x1ff4283cdd8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b260 <col:63> 'int' 105
|   |     |-ImplicitCastExpr 0x1ff4283cdf0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b288 <col:69> 'int' 29
|   |     |-ImplicitCastExpr 0x1ff4283ce08 <line:3053:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b2b0 <col:9> 'int' 82
|   |     |-ImplicitCastExpr 0x1ff4283ce20 <line:3054:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b2d8 <col:9> 'int' 75
|   |     |-ImplicitCastExpr 0x1ff4283ce38 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b300 <col:15> 'int' 50
|   |     |-ImplicitCastExpr 0x1ff4283ce50 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b328 <col:21> 'int' 129
|   |     |-ImplicitCastExpr 0x1ff4283ce68 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b350 <col:27> 'int' 170
|   |     |-ImplicitCastExpr 0x1ff4283ce80 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b378 <col:33> 'int' 127
|   |     |-ImplicitCastExpr 0x1ff4283ce98 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b3a0 <col:39> 'int' 0
|   |     |-ImplicitCastExpr 0x1ff4283ceb0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b3c8 <col:45> 'int' 200
|   |     |-ImplicitCastExpr 0x1ff4283cec8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b3f0 <col:51> 'int' 220
|   |     |-ImplicitCastExpr 0x1ff4283cee0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b418 <col:57> 'int' 230
|   |     |-ImplicitCastExpr 0x1ff4283cef8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b440 <col:63> 'int' 217
|   |     |-ImplicitCastExpr 0x1ff4283cf10 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b468 <col:69> 'int' 204
|   |     |-ImplicitCastExpr 0x1ff4283cf28 <line:3055:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b490 <col:9> 'int' 193
|   |     |-ImplicitCastExpr 0x1ff4283cf40 <line:3056:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b4b8 <col:9> 'int' 17
|   |     |-ImplicitCastExpr 0x1ff4283cf58 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b4e0 <col:15> 'int' 45
|   |     |-ImplicitCastExpr 0x1ff4283cf70 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b508 <col:21> 'int' 55
|   |     |-ImplicitCastExpr 0x1ff4283cf88 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b530 <col:27> 'int' 52
|   |     |-ImplicitCastExpr 0x1ff4283cfa0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b558 <col:33> 'int' 108
|   |     |-ImplicitCastExpr 0x1ff4283cfb8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b580 <col:39> 'int' 234
|   |     |-ImplicitCastExpr 0x1ff4283cfd0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b5a8 <col:45> 'int' 2
|   |     |-ImplicitCastExpr 0x1ff4283cfe8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b5d0 <col:51> 'int' 151
|   |     |-ImplicitCastExpr 0x1ff4283d000 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b5f8 <col:57> 'int' 75
|   |     |-ImplicitCastExpr 0x1ff4283d018 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b620 <col:63> 'int' 14
|   |     |-ImplicitCastExpr 0x1ff4283d030 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b648 <col:69> 'int' 187
|   |     |-ImplicitCastExpr 0x1ff4283d048 <line:3057:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b670 <col:9> 'int' 177
|   |     |-ImplicitCastExpr 0x1ff4283d060 <line:3058:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b698 <col:9> 'int' 113
|   |     |-ImplicitCastExpr 0x1ff4283d078 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b6c0 <col:15> 'int' 51
|   |     |-ImplicitCastExpr 0x1ff4283d090 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b6e8 <col:21> 'int' 9
|   |     |-ImplicitCastExpr 0x1ff4283d0a8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b710 <col:27> 'int' 21
|   |     |-ImplicitCastExpr 0x1ff4283d0e0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b738 <col:33> 'int' 253
|   |     |-ImplicitCastExpr 0x1ff4283d0f8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b760 <col:39> 'int' 221
|   |     |-ImplicitCastExpr 0x1ff4283d110 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b788 <col:45> 'int' 35
|   |     |-ImplicitCastExpr 0x1ff4283d128 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b7b0 <col:51> 'int' 135
|   |     |-ImplicitCastExpr 0x1ff4283d140 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b7d8 <col:57> 'int' 7
|   |     |-ImplicitCastExpr 0x1ff4283d158 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b800 <col:63> 'int' 94
|   |     |-ImplicitCastExpr 0x1ff4283d170 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b828 <col:69> 'int' 137
|   |     |-ImplicitCastExpr 0x1ff4283d188 <line:3059:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b850 <col:9> 'int' 171
|   |     |-ImplicitCastExpr 0x1ff4283d1a0 <line:3060:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b878 <col:9> 'int' 107
|   |     |-ImplicitCastExpr 0x1ff4283d1b8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b8a0 <col:15> 'int' 124
|   |     |-ImplicitCastExpr 0x1ff4283d1d0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b8c8 <col:21> 'int' 95
|   |     |-ImplicitCastExpr 0x1ff4283d1e8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b8f0 <col:27> 'int' 236
|   |     |-ImplicitCastExpr 0x1ff4283d200 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b918 <col:33> 'int' 166
|   |     |-ImplicitCastExpr 0x1ff4283d218 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b940 <col:39> 'int' 36
|   |     |-ImplicitCastExpr 0x1ff4283d230 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283b968 <col:45> 'int' 220
|   |     `-ImplicitCastExpr 0x1ff4283d248 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff4283b990 <col:51> 'int' 83
|   |-DeclStmt 0x1ff4283d420 <line:3062:5, line:3064:6>
|   | `-VarDecl 0x1ff4283d2d8 <line:3062:5, line:3064:5> line:3062:26 used dh1024_g 'unsigned char [1]' static cinit
|   |   `-InitListExpr 0x1ff4283d3c0 <col:39, line:3064:5> 'unsigned char [1]'
|   |     `-ImplicitCastExpr 0x1ff4283d400 <line:3063:9> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff4283d340 <col:9> 'int' 2
|   |-IfStmt 0x1ff4283d600 <line:3068:5, line:3069:21>
|   | |-OpaqueValueExpr 0x1ff4283d5e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ff4283d5d8 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x1ff4283d5c0 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1ff4283d5a0 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x1ff4283d580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff4283d558 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff4283d518 <col:26> 'int' 0
|   `-IfStmt 0x1ff4283dc80 <.//openssl//file_jk/before\test\ssltest_old.c:3072:5, line:3077:5>
|     |-OpaqueValueExpr 0x1ff4283dc68 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff4283dc50 <line:3072:69, line:3077:5>
|       `-ReturnStmt 0x1ff4283dc40 <line:3076:9, col:21>
|         `-ImplicitCastExpr 0x1ff4283dc28 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x1ff4283dc08 <col:16, col:21> 'void *'
|             `-ParenExpr 0x1ff4283dbe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x1ff4283dbc0 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x1ff4283db80 <col:26> 'int' 0
|-FunctionDecl 0x1ff4283dcf0 <.//openssl//file_jk/before\test\ssltest_old.c:3081:1, line:3144:1> line:3081:12 invalid get_dh1024dsa 'int *()' static
| `-CompoundStmt 0x1ff42830408 <line:3082:1, line:3144:1>
|   |-DeclStmt 0x1ff42838aa0 <line:3083:5, line:3105:6>
|   | `-VarDecl 0x1ff4283ddd0 <line:3083:5, line:3105:5> line:3083:26 used dh1024_p 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x1ff42837668 <col:39, line:3105:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x1ff428376a8 <line:3084:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283de38 <col:9> 'int' 200
|   |     |-ImplicitCastExpr 0x1ff428376c8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283de60 <col:15> 'int' 0
|   |     |-ImplicitCastExpr 0x1ff428376f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283de88 <col:21> 'int' 247
|   |     |-ImplicitCastExpr 0x1ff42837728 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283deb0 <col:27> 'int' 8
|   |     |-ImplicitCastExpr 0x1ff42837740 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ded8 <col:33> 'int' 7
|   |     |-ImplicitCastExpr 0x1ff42837798 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283df00 <col:39> 'int' 137
|   |     |-ImplicitCastExpr 0x1ff428377b0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283df28 <col:45> 'int' 77
|   |     |-ImplicitCastExpr 0x1ff428377c8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283df50 <col:51> 'int' 144
|   |     |-ImplicitCastExpr 0x1ff428377e0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283df78 <col:57> 'int' 83
|   |     |-ImplicitCastExpr 0x1ff42837878 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283dfa0 <col:63> 'int' 243
|   |     |-ImplicitCastExpr 0x1ff42837890 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283dfc8 <col:69> 'int' 213
|   |     |-ImplicitCastExpr 0x1ff428378a8 <line:3085:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283dff0 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x1ff428378c0 <line:3086:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e018 <col:9> 'int' 33
|   |     |-ImplicitCastExpr 0x1ff428378d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e040 <col:15> 'int' 27
|   |     |-ImplicitCastExpr 0x1ff428378f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e068 <col:21> 'int' 247
|   |     |-ImplicitCastExpr 0x1ff42837908 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e090 <col:27> 'int' 49
|   |     |-ImplicitCastExpr 0x1ff42837920 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e0b8 <col:33> 'int' 166
|   |     |-ImplicitCastExpr 0x1ff42837a38 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e0e0 <col:39> 'int' 162
|   |     |-ImplicitCastExpr 0x1ff42837a50 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e108 <col:45> 'int' 218
|   |     |-ImplicitCastExpr 0x1ff42837a68 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e130 <col:51> 'int' 35
|   |     |-ImplicitCastExpr 0x1ff42837a80 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e158 <col:57> 'int' 154
|   |     |-ImplicitCastExpr 0x1ff42837a98 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e180 <col:63> 'int' 199
|   |     |-ImplicitCastExpr 0x1ff42837ab0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e1a8 <col:69> 'int' 135
|   |     |-ImplicitCastExpr 0x1ff42837ac8 <line:3087:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e1d0 <col:9> 'int' 25
|   |     |-ImplicitCastExpr 0x1ff42837ae0 <line:3088:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e1f8 <col:9> 'int' 59
|   |     |-ImplicitCastExpr 0x1ff42837af8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e220 <col:15> 'int' 71
|   |     |-ImplicitCastExpr 0x1ff42837b10 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e248 <col:21> 'int' 182
|   |     |-ImplicitCastExpr 0x1ff42837b28 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e270 <col:27> 'int' 140
|   |     |-ImplicitCastExpr 0x1ff42837b40 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e298 <col:33> 'int' 4
|   |     |-ImplicitCastExpr 0x1ff42837b58 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e2c0 <col:39> 'int' 111
|   |     |-ImplicitCastExpr 0x1ff42837b70 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e2e8 <col:45> 'int' 255
|   |     |-ImplicitCastExpr 0x1ff42837b88 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e310 <col:51> 'int' 198
|   |     |-ImplicitCastExpr 0x1ff42837ba0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e338 <col:57> 'int' 155
|   |     |-ImplicitCastExpr 0x1ff42837db8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e360 <col:63> 'int' 184
|   |     |-ImplicitCastExpr 0x1ff42837dd0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e388 <col:69> 'int' 101
|   |     |-ImplicitCastExpr 0x1ff42837de8 <line:3089:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e3b0 <col:9> 'int' 210
|   |     |-ImplicitCastExpr 0x1ff42837e00 <line:3090:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e3d8 <col:9> 'int' 194
|   |     |-ImplicitCastExpr 0x1ff42837e18 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e400 <col:15> 'int' 95
|   |     |-ImplicitCastExpr 0x1ff42837e30 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e428 <col:21> 'int' 49
|   |     |-ImplicitCastExpr 0x1ff42837e48 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e450 <col:27> 'int' 131
|   |     |-ImplicitCastExpr 0x1ff42837e60 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e478 <col:33> 'int' 74
|   |     |-ImplicitCastExpr 0x1ff42837e78 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e4a0 <col:39> 'int' 167
|   |     |-ImplicitCastExpr 0x1ff42837e90 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e4c8 <col:45> 'int' 95
|   |     |-ImplicitCastExpr 0x1ff42837ea8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e4f0 <col:51> 'int' 47
|   |     |-ImplicitCastExpr 0x1ff42837ec0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e518 <col:57> 'int' 136
|   |     |-ImplicitCastExpr 0x1ff42837ed8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e540 <col:63> 'int' 56
|   |     |-ImplicitCastExpr 0x1ff42837ef0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e568 <col:69> 'int' 182
|   |     |-ImplicitCastExpr 0x1ff42837f08 <line:3091:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e590 <col:9> 'int' 85
|   |     |-ImplicitCastExpr 0x1ff42837f20 <line:3092:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e5b8 <col:9> 'int' 207
|   |     |-ImplicitCastExpr 0x1ff42837f38 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e5e0 <col:15> 'int' 217
|   |     |-ImplicitCastExpr 0x1ff42837f50 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e608 <col:21> 'int' 135
|   |     |-ImplicitCastExpr 0x1ff42837f68 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e630 <col:27> 'int' 109
|   |     |-ImplicitCastExpr 0x1ff42837f80 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e658 <col:33> 'int' 111
|   |     |-ImplicitCastExpr 0x1ff42837f98 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e680 <col:39> 'int' 159
|   |     |-ImplicitCastExpr 0x1ff42837fb0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e6a8 <col:45> 'int' 218
|   |     |-ImplicitCastExpr 0x1ff42837fc8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e6d0 <col:51> 'int' 172
|   |     |-ImplicitCastExpr 0x1ff42837fe0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e6f8 <col:57> 'int' 166
|   |     |-ImplicitCastExpr 0x1ff42837ff8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e720 <col:63> 'int' 72
|   |     |-ImplicitCastExpr 0x1ff42838010 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e748 <col:69> 'int' 175
|   |     |-ImplicitCastExpr 0x1ff42838028 <line:3093:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e770 <col:9> 'int' 252
|   |     |-ImplicitCastExpr 0x1ff42838040 <line:3094:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e798 <col:9> 'int' 51
|   |     |-ImplicitCastExpr 0x1ff42838058 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e7c0 <col:15> 'int' 132
|   |     |-ImplicitCastExpr 0x1ff42838070 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e7e8 <col:21> 'int' 55
|   |     |-ImplicitCastExpr 0x1ff42838088 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e810 <col:27> 'int' 91
|   |     |-ImplicitCastExpr 0x1ff428380a0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e838 <col:33> 'int' 130
|   |     |-ImplicitCastExpr 0x1ff428384b8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e860 <col:39> 'int' 74
|   |     |-ImplicitCastExpr 0x1ff428384d0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e888 <col:45> 'int' 49
|   |     |-ImplicitCastExpr 0x1ff428384e8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e8b0 <col:51> 'int' 93
|   |     |-ImplicitCastExpr 0x1ff42838500 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e8d8 <col:57> 'int' 231
|   |     |-ImplicitCastExpr 0x1ff42838518 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e900 <col:63> 'int' 189
|   |     |-ImplicitCastExpr 0x1ff42838530 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e928 <col:69> 'int' 82
|   |     |-ImplicitCastExpr 0x1ff42838548 <line:3095:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e950 <col:9> 'int' 151
|   |     |-ImplicitCastExpr 0x1ff42838560 <line:3096:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e978 <col:9> 'int' 161
|   |     |-ImplicitCastExpr 0x1ff42838578 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e9a0 <col:15> 'int' 119
|   |     |-ImplicitCastExpr 0x1ff42838590 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e9c8 <col:21> 'int' 191
|   |     |-ImplicitCastExpr 0x1ff428385a8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283e9f0 <col:27> 'int' 16
|   |     |-ImplicitCastExpr 0x1ff428385c0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ea18 <col:33> 'int' 158
|   |     |-ImplicitCastExpr 0x1ff428385d8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ea40 <col:39> 'int' 55
|   |     |-ImplicitCastExpr 0x1ff428385f0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ea68 <col:45> 'int' 234
|   |     |-ImplicitCastExpr 0x1ff42838608 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ea90 <col:51> 'int' 100
|   |     |-ImplicitCastExpr 0x1ff42838620 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eab8 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x1ff42838638 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eae0 <col:63> 'int' 202
|   |     |-ImplicitCastExpr 0x1ff42838650 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eb08 <col:69> 'int' 40
|   |     |-ImplicitCastExpr 0x1ff42838668 <line:3097:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eb30 <col:9> 'int' 141
|   |     |-ImplicitCastExpr 0x1ff42838680 <line:3098:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eb58 <col:9> 'int' 157
|   |     |-ImplicitCastExpr 0x1ff42838698 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eb80 <col:15> 'int' 59
|   |     |-ImplicitCastExpr 0x1ff428386b0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eba8 <col:21> 'int' 210
|   |     |-ImplicitCastExpr 0x1ff428386c8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ebd0 <col:27> 'int' 110
|   |     |-ImplicitCastExpr 0x1ff428386e0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ebf8 <col:33> 'int' 9
|   |     |-ImplicitCastExpr 0x1ff428386f8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ec20 <col:39> 'int' 92
|   |     |-ImplicitCastExpr 0x1ff42838710 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ec48 <col:45> 'int' 104
|   |     |-ImplicitCastExpr 0x1ff42838728 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ec70 <col:51> 'int' 199
|   |     |-ImplicitCastExpr 0x1ff42838740 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ec98 <col:57> 'int' 69
|   |     |-ImplicitCastExpr 0x1ff42838758 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ecc0 <col:63> 'int' 144
|   |     |-ImplicitCastExpr 0x1ff42838770 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ece8 <col:69> 'int' 253
|   |     |-ImplicitCastExpr 0x1ff42838788 <line:3099:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ed10 <col:9> 'int' 187
|   |     |-ImplicitCastExpr 0x1ff428387a0 <line:3100:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ed38 <col:9> 'int' 112
|   |     |-ImplicitCastExpr 0x1ff428387b8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ed60 <col:15> 'int' 201
|   |     |-ImplicitCastExpr 0x1ff428387d0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ed88 <col:21> 'int' 58
|   |     |-ImplicitCastExpr 0x1ff428387e8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283edb0 <col:27> 'int' 187
|   |     |-ImplicitCastExpr 0x1ff42838800 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283edd8 <col:33> 'int' 223
|   |     |-ImplicitCastExpr 0x1ff42838818 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ee00 <col:39> 'int' 212
|   |     |-ImplicitCastExpr 0x1ff42838830 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ee28 <col:45> 'int' 33
|   |     |-ImplicitCastExpr 0x1ff42838848 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ee50 <col:51> 'int' 15
|   |     |-ImplicitCastExpr 0x1ff42838860 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ee78 <col:57> 'int' 196
|   |     |-ImplicitCastExpr 0x1ff42838878 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eea0 <col:63> 'int' 106
|   |     |-ImplicitCastExpr 0x1ff42838890 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eec8 <col:69> 'int' 60
|   |     |-ImplicitCastExpr 0x1ff428388a8 <line:3101:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283eef0 <col:9> 'int' 246
|   |     |-ImplicitCastExpr 0x1ff428388c0 <line:3102:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ef18 <col:9> 'int' 97
|   |     |-ImplicitCastExpr 0x1ff428388d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ef40 <col:15> 'int' 207
|   |     |-ImplicitCastExpr 0x1ff428388f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ef68 <col:21> 'int' 63
|   |     |-ImplicitCastExpr 0x1ff42838908 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283ef90 <col:27> 'int' 214
|   |     |-ImplicitCastExpr 0x1ff42838920 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283efb8 <col:33> 'int' 19
|   |     |-ImplicitCastExpr 0x1ff42838938 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283efe0 <col:39> 'int' 241
|   |     |-ImplicitCastExpr 0x1ff42838950 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283f008 <col:45> 'int' 95
|   |     |-ImplicitCastExpr 0x1ff42838968 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283f030 <col:51> 'int' 188
|   |     |-ImplicitCastExpr 0x1ff42838980 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283f058 <col:57> 'int' 207
|   |     |-ImplicitCastExpr 0x1ff42838998 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283f080 <col:63> 'int' 188
|   |     |-ImplicitCastExpr 0x1ff428389b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff4283f0a8 <col:69> 'int' 38
|   |     |-ImplicitCastExpr 0x1ff428389c8 <line:3103:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428370b0 <col:9> 'int' 158
|   |     |-ImplicitCastExpr 0x1ff428389e0 <line:3104:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428370d8 <col:9> 'int' 188
|   |     |-ImplicitCastExpr 0x1ff428389f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42837100 <col:15> 'int' 11
|   |     |-ImplicitCastExpr 0x1ff42838a10 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42837128 <col:21> 'int' 189
|   |     |-ImplicitCastExpr 0x1ff42838a28 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42837150 <col:27> 'int' 171
|   |     |-ImplicitCastExpr 0x1ff42838a40 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42837178 <col:33> 'int' 93
|   |     |-ImplicitCastExpr 0x1ff42838a58 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428371a0 <col:39> 'int' 201
|   |     |-ImplicitCastExpr 0x1ff42838a70 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428371c8 <col:45> 'int' 84
|   |     `-ImplicitCastExpr 0x1ff42838a88 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff428371f0 <col:51> 'int' 57
|   |-DeclStmt 0x1ff4282fa58 <line:3106:5, line:3128:6>
|   | `-VarDecl 0x1ff42838ae0 <line:3106:5, line:3128:5> line:3106:26 used dh1024_g 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x1ff4283a3c0 <col:39, line:3128:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x1ff4283a400 <line:3107:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838b48 <col:9> 'int' 59
|   |     |-ImplicitCastExpr 0x1ff4283a420 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838b70 <col:15> 'int' 64
|   |     |-ImplicitCastExpr 0x1ff4283a448 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838b98 <col:21> 'int' 134
|   |     |-ImplicitCastExpr 0x1ff4283a480 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838bc0 <col:27> 'int' 231
|   |     |-ImplicitCastExpr 0x1ff4283a498 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838be8 <col:33> 'int' 243
|   |     |-ImplicitCastExpr 0x1ff4283a4f0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838c10 <col:39> 'int' 108
|   |     |-ImplicitCastExpr 0x1ff4283a508 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838c38 <col:45> 'int' 222
|   |     |-ImplicitCastExpr 0x1ff4283a520 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838c60 <col:51> 'int' 103
|   |     |-ImplicitCastExpr 0x1ff4283a538 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838c88 <col:57> 'int' 28
|   |     |-ImplicitCastExpr 0x1ff4283a5d0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838cb0 <col:63> 'int' 204
|   |     |-ImplicitCastExpr 0x1ff4283a5e8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838cd8 <col:69> 'int' 128
|   |     |-ImplicitCastExpr 0x1ff4283a600 <line:3108:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838d00 <col:9> 'int' 5
|   |     |-ImplicitCastExpr 0x1ff4283a618 <line:3109:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838d28 <col:9> 'int' 90
|   |     |-ImplicitCastExpr 0x1ff4283a630 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838d50 <col:15> 'int' 223
|   |     |-ImplicitCastExpr 0x1ff4283a648 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838d78 <col:21> 'int' 254
|   |     |-ImplicitCastExpr 0x1ff4283a660 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838da0 <col:27> 'int' 189
|   |     |-ImplicitCastExpr 0x1ff4283a678 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838dc8 <col:33> 'int' 32
|   |     |-ImplicitCastExpr 0x1ff4283a790 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838df0 <col:39> 'int' 39
|   |     |-ImplicitCastExpr 0x1ff4283a7a8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838e18 <col:45> 'int' 116
|   |     |-ImplicitCastExpr 0x1ff4283a7c0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838e40 <col:51> 'int' 108
|   |     |-ImplicitCastExpr 0x1ff4283a7d8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838e68 <col:57> 'int' 36
|   |     |-ImplicitCastExpr 0x1ff4283a7f0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838e90 <col:63> 'int' 201
|   |     |-ImplicitCastExpr 0x1ff4283a808 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838eb8 <col:69> 'int' 3
|   |     |-ImplicitCastExpr 0x1ff4283a820 <line:3110:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838ee0 <col:9> 'int' 243
|   |     |-ImplicitCastExpr 0x1ff4283a838 <line:3111:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838f08 <col:9> 'int' 225
|   |     |-ImplicitCastExpr 0x1ff4283a850 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838f30 <col:15> 'int' 141
|   |     |-ImplicitCastExpr 0x1ff4283a868 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838f58 <col:21> 'int' 195
|   |     |-ImplicitCastExpr 0x1ff4283a880 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838f80 <col:27> 'int' 125
|   |     |-ImplicitCastExpr 0x1ff4283a898 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838fa8 <col:33> 'int' 152
|   |     |-ImplicitCastExpr 0x1ff4283a8b0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838fd0 <col:39> 'int' 39
|   |     |-ImplicitCastExpr 0x1ff4283a8c8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42838ff8 <col:45> 'int' 64
|   |     |-ImplicitCastExpr 0x1ff4283a8e0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839020 <col:51> 'int' 8
|   |     |-ImplicitCastExpr 0x1ff4283a8f8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839048 <col:57> 'int' 184
|   |     |-ImplicitCastExpr 0x1ff4283ab10 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839070 <col:63> 'int' 140
|   |     |-ImplicitCastExpr 0x1ff4283ab28 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428390c0 <col:69> 'int' 106
|   |     |-ImplicitCastExpr 0x1ff4283ab40 <line:3112:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428390e8 <col:9> 'int' 233
|   |     |-ImplicitCastExpr 0x1ff4283ab58 <line:3113:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839110 <col:9> 'int' 187
|   |     |-ImplicitCastExpr 0x1ff4283ab70 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839138 <col:15> 'int' 26
|   |     |-ImplicitCastExpr 0x1ff4283ab88 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839160 <col:21> 'int' 58
|   |     |-ImplicitCastExpr 0x1ff4283aba0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839188 <col:27> 'int' 214
|   |     |-ImplicitCastExpr 0x1ff4283abb8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428391b0 <col:33> 'int' 134
|   |     |-ImplicitCastExpr 0x1ff4283abd0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428391d8 <col:39> 'int' 131
|   |     |-ImplicitCastExpr 0x1ff4283abe8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839200 <col:45> 'int' 94
|   |     |-ImplicitCastExpr 0x1ff4283ac00 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839228 <col:51> 'int' 114
|   |     |-ImplicitCastExpr 0x1ff4283ac18 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839250 <col:57> 'int' 65
|   |     |-ImplicitCastExpr 0x1ff4283ac30 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839278 <col:63> 'int' 206
|   |     |-ImplicitCastExpr 0x1ff4283ac48 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428392a0 <col:69> 'int' 133
|   |     |-ImplicitCastExpr 0x1ff4283ac60 <line:3114:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428392c8 <col:9> 'int' 60
|   |     |-ImplicitCastExpr 0x1ff4283ac78 <line:3115:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428392f0 <col:9> 'int' 210
|   |     |-ImplicitCastExpr 0x1ff4283ac90 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839318 <col:15> 'int' 179
|   |     |-ImplicitCastExpr 0x1ff4283aca8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839340 <col:21> 'int' 252
|   |     |-ImplicitCastExpr 0x1ff4283acc0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839368 <col:27> 'int' 19
|   |     |-ImplicitCastExpr 0x1ff4283acd8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839390 <col:33> 'int' 206
|   |     |-ImplicitCastExpr 0x1ff4283acf0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428393b8 <col:39> 'int' 55
|   |     |-ImplicitCastExpr 0x1ff4283ad08 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428393e0 <col:45> 'int' 129
|   |     |-ImplicitCastExpr 0x1ff4283ad20 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839408 <col:51> 'int' 158
|   |     |-ImplicitCastExpr 0x1ff4283ad38 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839430 <col:57> 'int' 76
|   |     |-ImplicitCastExpr 0x1ff4283ad50 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839458 <col:63> 'int' 28
|   |     |-ImplicitCastExpr 0x1ff4283ad68 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839480 <col:69> 'int' 123
|   |     |-ImplicitCastExpr 0x1ff4283ad80 <line:3116:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428394a8 <col:9> 'int' 101
|   |     |-ImplicitCastExpr 0x1ff4283ad98 <line:3117:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428394d0 <col:9> 'int' 211
|   |     |-ImplicitCastExpr 0x1ff4283adb0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428394f8 <col:15> 'int' 230
|   |     |-ImplicitCastExpr 0x1ff4283adc8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839520 <col:21> 'int' 166
|   |     |-ImplicitCastExpr 0x1ff4283ade0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839548 <col:27> 'int' 0
|   |     |-ImplicitCastExpr 0x1ff4283adf8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839570 <col:33> 'int' 245
|   |     |-ImplicitCastExpr 0x1ff4282f470 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839598 <col:39> 'int' 90
|   |     |-ImplicitCastExpr 0x1ff4282f488 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428395c0 <col:45> 'int' 149
|   |     |-ImplicitCastExpr 0x1ff4282f4a0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428395e8 <col:51> 'int' 67
|   |     |-ImplicitCastExpr 0x1ff4282f4b8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839610 <col:57> 'int' 94
|   |     |-ImplicitCastExpr 0x1ff4282f4d0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839638 <col:63> 'int' 129
|   |     |-ImplicitCastExpr 0x1ff4282f4e8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839660 <col:69> 'int' 207
|   |     |-ImplicitCastExpr 0x1ff4282f500 <line:3118:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839688 <col:9> 'int' 96
|   |     |-ImplicitCastExpr 0x1ff4282f518 <line:3119:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428396b0 <col:9> 'int' 162
|   |     |-ImplicitCastExpr 0x1ff4282f530 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428396d8 <col:15> 'int' 35
|   |     |-ImplicitCastExpr 0x1ff4282f548 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839700 <col:21> 'int' 252
|   |     |-ImplicitCastExpr 0x1ff4282f560 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839728 <col:27> 'int' 54
|   |     |-ImplicitCastExpr 0x1ff4282f578 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839750 <col:33> 'int' 167
|   |     |-ImplicitCastExpr 0x1ff4282f590 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839778 <col:39> 'int' 93
|   |     |-ImplicitCastExpr 0x1ff4282f5a8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428397a0 <col:45> 'int' 122
|   |     |-ImplicitCastExpr 0x1ff4282f5c0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428397c8 <col:51> 'int' 76
|   |     |-ImplicitCastExpr 0x1ff4282f5d8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428397f0 <col:57> 'int' 6
|   |     |-ImplicitCastExpr 0x1ff4282f5f0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839818 <col:63> 'int' 145
|   |     |-ImplicitCastExpr 0x1ff4282f608 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839840 <col:69> 'int' 110
|   |     |-ImplicitCastExpr 0x1ff4282f620 <line:3120:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839868 <col:9> 'int' 246
|   |     |-ImplicitCastExpr 0x1ff4282f638 <line:3121:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839890 <col:9> 'int' 87
|   |     |-ImplicitCastExpr 0x1ff4282f650 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428398b8 <col:15> 'int' 238
|   |     |-ImplicitCastExpr 0x1ff4282f668 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428398e0 <col:21> 'int' 54
|   |     |-ImplicitCastExpr 0x1ff4282f680 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839908 <col:27> 'int' 203
|   |     |-ImplicitCastExpr 0x1ff4282f698 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839930 <col:33> 'int' 6
|   |     |-ImplicitCastExpr 0x1ff4282f6b0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839958 <col:39> 'int' 234
|   |     |-ImplicitCastExpr 0x1ff4282f6c8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839980 <col:45> 'int' 245
|   |     |-ImplicitCastExpr 0x1ff4282f6e0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428399a8 <col:51> 'int' 61
|   |     |-ImplicitCastExpr 0x1ff4282f6f8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428399d0 <col:57> 'int' 149
|   |     |-ImplicitCastExpr 0x1ff4282f710 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff428399f8 <col:63> 'int' 73
|   |     |-ImplicitCastExpr 0x1ff4282f728 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839a20 <col:69> 'int' 203
|   |     |-ImplicitCastExpr 0x1ff4282f740 <line:3122:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839a48 <col:9> 'int' 167
|   |     |-ImplicitCastExpr 0x1ff4282f758 <line:3123:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839a70 <col:9> 'int' 221
|   |     |-ImplicitCastExpr 0x1ff4282f770 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839a98 <col:15> 'int' 129
|   |     |-ImplicitCastExpr 0x1ff4282f788 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ac0 <col:21> 'int' 223
|   |     |-ImplicitCastExpr 0x1ff4282f7a0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ae8 <col:27> 'int' 128
|   |     |-ImplicitCastExpr 0x1ff4282f7b8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839b10 <col:33> 'int' 9
|   |     |-ImplicitCastExpr 0x1ff4282f7d0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839b38 <col:39> 'int' 74
|   |     |-ImplicitCastExpr 0x1ff4282f7e8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839b60 <col:45> 'int' 151
|   |     |-ImplicitCastExpr 0x1ff4282f800 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839b88 <col:51> 'int' 77
|   |     |-ImplicitCastExpr 0x1ff4282f818 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839bb0 <col:57> 'int' 168
|   |     |-ImplicitCastExpr 0x1ff4282f830 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839bd8 <col:63> 'int' 34
|   |     |-ImplicitCastExpr 0x1ff4282f848 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839c00 <col:69> 'int' 114
|   |     |-ImplicitCastExpr 0x1ff4282f860 <line:3124:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839c28 <col:9> 'int' 161
|   |     |-ImplicitCastExpr 0x1ff4282f878 <line:3125:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839c50 <col:9> 'int' 127
|   |     |-ImplicitCastExpr 0x1ff4282f890 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839c78 <col:15> 'int' 196
|   |     |-ImplicitCastExpr 0x1ff4282f8a8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ca0 <col:21> 'int' 112
|   |     |-ImplicitCastExpr 0x1ff4282f8c0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839cc8 <col:27> 'int' 86
|   |     |-ImplicitCastExpr 0x1ff4282f8d8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839cf0 <col:33> 'int' 112
|   |     |-ImplicitCastExpr 0x1ff4282f8f0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839d18 <col:39> 'int' 232
|   |     |-ImplicitCastExpr 0x1ff4282f908 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839d40 <col:45> 'int' 32
|   |     |-ImplicitCastExpr 0x1ff4282f920 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839d68 <col:51> 'int' 16
|   |     |-ImplicitCastExpr 0x1ff4282f938 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839d90 <col:57> 'int' 24
|   |     |-ImplicitCastExpr 0x1ff4282f950 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839db8 <col:63> 'int' 143
|   |     |-ImplicitCastExpr 0x1ff4282f968 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839de0 <col:69> 'int' 46
|   |     |-ImplicitCastExpr 0x1ff4282f980 <line:3126:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839e08 <col:9> 'int' 96
|   |     |-ImplicitCastExpr 0x1ff4282f998 <line:3127:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839e30 <col:9> 'int' 7
|   |     |-ImplicitCastExpr 0x1ff4282f9b0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839e58 <col:15> 'int' 231
|   |     |-ImplicitCastExpr 0x1ff4282f9c8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839e80 <col:21> 'int' 104
|   |     |-ImplicitCastExpr 0x1ff4282f9e0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ea8 <col:27> 'int' 26
|   |     |-ImplicitCastExpr 0x1ff4282f9f8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ed0 <col:33> 'int' 130
|   |     |-ImplicitCastExpr 0x1ff4282fa10 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839ef8 <col:39> 'int' 93
|   |     |-ImplicitCastExpr 0x1ff4282fa28 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x1ff42839f20 <col:45> 'int' 50
|   |     `-ImplicitCastExpr 0x1ff4282fa40 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x1ff42839f48 <col:51> 'int' 162
|   |-IfStmt 0x1ff4282fc38 <line:3132:5, line:3133:21>
|   | |-OpaqueValueExpr 0x1ff4282fc20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ff4282fc10 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x1ff4282fbf8 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1ff4282fbd8 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x1ff4282fbb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1ff4282fb90 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1ff4282fb50 <col:26> 'int' 0
|   `-IfStmt 0x1ff428302b8 <.//openssl//file_jk/before\test\ssltest_old.c:3136:5, line:3141:5>
|     |-OpaqueValueExpr 0x1ff428302a0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1ff42830288 <line:3136:69, line:3141:5>
|       `-ReturnStmt 0x1ff42830278 <line:3140:9, col:21>
|         `-ImplicitCastExpr 0x1ff42830260 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x1ff42830240 <col:16, col:21> 'void *'
|             `-ParenExpr 0x1ff42830220 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x1ff428301f8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x1ff428301b8 <col:26> 'int' 0
|-FunctionDecl 0x1ff42830680 <.//openssl//file_jk/before\test\ssltest_old.c:3149:1, line:3172:1> line:3149:12 used psk_key2bn 'int (const char *, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x1ff42830450 <col:23, col:35> col:35 used pskkey 'const char *'
| |-ParmVarDecl 0x1ff428304d0 <col:43, col:58> col:58 used psk 'unsigned char *'
| |-ParmVarDecl 0x1ff42830550 <line:3150:23, col:36> col:36 used max_psk_len 'unsigned int'
| `-CompoundStmt 0x1ff42830fc8 <line:3151:1, line:3172:1>
|   |-DeclStmt 0x1ff428307d0 <line:3152:5, col:12>
|   | `-VarDecl 0x1ff42830768 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1ff42830b20 <line:3156:5, line:3161:5>
|   | |-UnaryOperator 0x1ff42830a10 <line:3156:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1ff428309f8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ff428309d8 <col:10> 'int' lvalue Var 0x1ff42830768 'ret' 'int'
|   | `-CompoundStmt 0x1ff42830b08 <col:15, line:3161:5>
|   |   `-ReturnStmt 0x1ff42830af8 <line:3160:9, col:16>
|   |     `-IntegerLiteral 0x1ff42830ad0 <col:16> 'int' 0
|   |-IfStmt 0x1ff42830df8 <line:3162:5, line:3168:5>
|   | |-OpaqueValueExpr 0x1ff42830de0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ff42830dc8 <line:3162:46, line:3168:5>
|   |   `-ReturnStmt 0x1ff42830db8 <line:3167:9, col:16>
|   |     `-IntegerLiteral 0x1ff42830d90 <col:16> 'int' 0
|   `-ReturnStmt 0x1ff42830fb8 <line:3171:5, col:12>
|     `-ImplicitCastExpr 0x1ff42830fa0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ff42830f80 <col:12> 'int' lvalue Var 0x1ff42830768 'ret' 'int'
|-FunctionDecl 0x1ff4283f430 <line:3174:1, line:3195:1> line:3174:21 invalid psk_client_callback 'unsigned int (int *, const char *, char *, unsigned int, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x1ff4283f0f0 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x1ff4283f170 <col:51, col:63> col:63 hint 'const char *'
| |-ParmVarDecl 0x1ff4283f1f0 <line:3175:41, col:47> col:47 used identity 'char *'
| |-ParmVarDecl 0x1ff4283f270 <line:3176:41, col:54> col:54 used max_identity_len 'unsigned int'
| |-ParmVarDecl 0x1ff4283f2f0 <line:3177:41, col:56> col:56 used psk 'unsigned char *'
| |-ParmVarDecl 0x1ff4283f370 <line:3178:41, col:54> col:54 used max_psk_len 'unsigned int'
| `-CompoundStmt 0x1ff4283ff50 <line:3179:1, line:3195:1>
|   |-DeclStmt 0x1ff4283f598 <line:3180:5, col:12>
|   | `-VarDecl 0x1ff4283f530 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1ff4283f670 <line:3181:5, col:29>
|   | `-VarDecl 0x1ff4283f5c8 <col:5, col:28> col:18 used psk_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1ff4283f658 <col:28> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1ff4283f630 <col:28> 'int' 0
|   |-BinaryOperator 0x1ff4283f810 <line:3183:5, col:69> 'int' '='
|   | |-DeclRefExpr 0x1ff4283f688 <col:5> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   | `-CallExpr 0x1ff4283f790 <col:11, col:69> 'int'
|   |   |-ImplicitCastExpr 0x1ff4283f778 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff4283f6c0 <col:11> 'int ()' Function 0x1ff42813248 'BIO_snprintf' 'int ()'
|   |   |-ImplicitCastExpr 0x1ff4283f7c8 <col:24> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff4283f6e0 <col:24> 'char *' lvalue ParmVar 0x1ff4283f1f0 'identity' 'char *'
|   |   |-ImplicitCastExpr 0x1ff4283f7e0 <col:34> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff4283f718 <col:34> 'unsigned int' lvalue ParmVar 0x1ff4283f270 'max_identity_len' 'unsigned int'
|   |   `-ImplicitCastExpr 0x1ff4283f7f8 <col:52> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1ff4283f750 <col:52> 'char [16]' lvalue "Client_identity"
|   |-IfStmt 0x1ff4283f918 <line:3184:5, line:3185:14>
|   | |-BinaryOperator 0x1ff4283f890 <line:3184:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1ff4283f878 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff4283f830 <col:9> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   | | `-IntegerLiteral 0x1ff4283f850 <col:15> 'int' 0
|   | `-GotoStmt 0x1ff4283f900 <line:3185:9, col:14> 'out_err' 0x1ff4283f8b0
|   |-IfStmt 0x1ff4283fbb0 <line:3186:5, line:3188:20>
|   | |-ImplicitCastExpr 0x1ff4283f950 <line:3186:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ff4283f930 <col:9> 'int' lvalue Var 0x1ff427d3780 'debug' 'int'
|   | `-CallExpr 0x1ff4283fb10 <line:3187:9, line:3188:20> 'int'
|   |   |-ImplicitCastExpr 0x1ff4283faf8 <line:3187:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff4283f968 <col:9> 'int (FILE *, const char *, ...)' Function 0x1ff4270e278 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |-ParenExpr 0x1ff4283fa40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | `-UnaryOperator 0x1ff4283fa28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   `-ArraySubscriptExpr 0x1ff4283fa08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |-CallExpr 0x1ff4283f9c0 <col:18, col:29> 'FILE *'
|   |   |     | `-ImplicitCastExpr 0x1ff4283f9a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   `-DeclRefExpr 0x1ff4283f988 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1ff426d8450 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     `-IntegerLiteral 0x1ff4283f9e0 <col:31> 'int' 2
|   |   |-ImplicitCastExpr 0x1ff4283fb68 <.//openssl//file_jk/before\test\ssltest_old.c:3187:25> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x1ff4283fb50 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x1ff4283fa60 <col:25> 'char [38]' lvalue "client: created identity '%s' len=%d\n"
|   |   |-ImplicitCastExpr 0x1ff4283fb80 <col:67> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff4283faa0 <col:67> 'char *' lvalue ParmVar 0x1ff4283f1f0 'identity' 'char *'
|   |   `-ImplicitCastExpr 0x1ff4283fb98 <line:3188:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff4283fac0 <col:17> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   |-BinaryOperator 0x1ff4283fd78 <line:3189:5, col:47> 'int' '='
|   | |-DeclRefExpr 0x1ff4283fbc8 <col:5> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   | `-CallExpr 0x1ff4283fce0 <col:11, col:47> 'int'
|   |   |-ImplicitCastExpr 0x1ff4283fcc8 <col:11> 'int (*)(const char *, unsigned char *, unsigned int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ff4283fbe8 <col:11> 'int (const char *, unsigned char *, unsigned int)' Function 0x1ff42830680 'psk_key2bn' 'int (const char *, unsigned char *, unsigned int)'
|   |   |-ImplicitCastExpr 0x1ff4283fd30 <col:22> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x1ff4283fd18 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ff4283fc08 <col:22> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
|   |   |-ImplicitCastExpr 0x1ff4283fd48 <col:31> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ff4283fc28 <col:31> 'unsigned char *' lvalue ParmVar 0x1ff4283f2f0 'psk' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x1ff4283fd60 <col:36> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff4283fc60 <col:36> 'unsigned int' lvalue ParmVar 0x1ff4283f370 'max_psk_len' 'unsigned int'
|   |-IfStmt 0x1ff4283fe30 <line:3190:5, line:3191:14>
|   | |-BinaryOperator 0x1ff4283fdf8 <line:3190:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1ff4283fde0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ff4283fd98 <col:9> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   | | `-IntegerLiteral 0x1ff4283fdb8 <col:15> 'int' 0
|   | `-GotoStmt 0x1ff4283fe18 <line:3191:9, col:14> 'out_err' 0x1ff4283f8b0
|   |-BinaryOperator 0x1ff4283fed0 <line:3192:5, col:15> 'unsigned int' '='
|   | |-DeclRefExpr 0x1ff4283fe48 <col:5> 'unsigned int' lvalue Var 0x1ff4283f5c8 'psk_len' 'unsigned int'
|   | `-ImplicitCastExpr 0x1ff4283feb8 <col:15> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1ff4283fea0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ff4283fe80 <col:15> 'int' lvalue Var 0x1ff4283f530 'ret' 'int'
|   `-LabelStmt 0x1ff4283ff38 <line:3193:2, line:3194:12> 'out_err'
|     `-ReturnStmt 0x1ff4283ff28 <col:5, col:12>
|       `-ImplicitCastExpr 0x1ff4283ff10 <col:12> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x1ff4283fef0 <col:12> 'unsigned int' lvalue Var 0x1ff4283f5c8 'psk_len' 'unsigned int'
`-FunctionDecl 0x1ff42840208 <line:3197:1, line:3209:1> line:3197:21 invalid psk_server_callback 'unsigned int (int *, const char *, unsigned char *, unsigned int)' static
  |-ParmVarDecl 0x1ff4283ffd8 <col:41, col:46> col:46 invalid ssl 'int *'
  |-ParmVarDecl 0x1ff42840058 <col:51, col:63> col:63 used identity 'const char *'
  |-ParmVarDecl 0x1ff428400d8 <line:3198:41, col:56> col:56 used psk 'unsigned char *'
  |-ParmVarDecl 0x1ff42840158 <line:3199:41, col:54> col:54 used max_psk_len 'unsigned int'
  `-CompoundStmt 0x1ff42840840 <line:3200:1, line:3209:1>
    |-DeclStmt 0x1ff428403a0 <line:3201:5, col:29>
    | `-VarDecl 0x1ff428402f8 <col:5, col:28> col:18 used psk_len 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x1ff42840388 <col:28> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x1ff42840360 <col:28> 'int' 0
    |-IfStmt 0x1ff42840610 <line:3203:5, line:3206:5>
    | |-BinaryOperator 0x1ff42840520 <line:3203:9, col:48> 'int' '!='
    | | |-CallExpr 0x1ff42840480 <col:9, col:43> 'int'
    | | | |-ImplicitCastExpr 0x1ff42840468 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x1ff428403b8 <col:9> 'int (const char *, const char *)' Function 0x1ff42868648 'strcmp' 'int (const char *, const char *)'
    | | | |-ImplicitCastExpr 0x1ff428404b0 <col:16> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x1ff428403d8 <col:16> 'const char *' lvalue ParmVar 0x1ff42840058 'identity' 'const char *'
    | | | `-ImplicitCastExpr 0x1ff428404e0 <col:26> 'const char *' <NoOp>
    | | |   `-ImplicitCastExpr 0x1ff428404c8 <col:26> 'char *' <ArrayToPointerDecay>
    | | |     `-StringLiteral 0x1ff42840410 <col:26> 'char [16]' lvalue "Client_identity"
    | | `-IntegerLiteral 0x1ff428404f8 <col:48> 'int' 0
    | `-CompoundStmt 0x1ff428405f8 <col:51, line:3206:5>
    |   `-ReturnStmt 0x1ff428405e8 <line:3205:9, col:16>
    |     `-ImplicitCastExpr 0x1ff428405d0 <col:16> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x1ff428405a8 <col:16> 'int' 0
    |-BinaryOperator 0x1ff428407d8 <line:3207:5, col:51> 'unsigned int' '='
    | |-DeclRefExpr 0x1ff42840628 <col:5> 'unsigned int' lvalue Var 0x1ff428402f8 'psk_len' 'unsigned int'
    | `-ImplicitCastExpr 0x1ff428407c0 <col:15, col:51> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x1ff42840728 <col:15, col:51> 'int'
    |     |-ImplicitCastExpr 0x1ff42840710 <col:15> 'int (*)(const char *, unsigned char *, unsigned int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1ff42840660 <col:15> 'int (const char *, unsigned char *, unsigned int)' Function 0x1ff42830680 'psk_key2bn' 'int (const char *, unsigned char *, unsigned int)'
    |     |-ImplicitCastExpr 0x1ff42840778 <col:26> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x1ff42840760 <col:26> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1ff42840680 <col:26> 'char *' lvalue Var 0x1ff428be498 'psk_key' 'char *'
    |     |-ImplicitCastExpr 0x1ff42840790 <col:35> 'unsigned char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1ff428406a0 <col:35> 'unsigned char *' lvalue ParmVar 0x1ff428400d8 'psk' 'unsigned char *'
    |     `-ImplicitCastExpr 0x1ff428407a8 <col:40> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x1ff428406d8 <col:40> 'unsigned int' lvalue ParmVar 0x1ff42840158 'max_psk_len' 'unsigned int'
    `-ReturnStmt 0x1ff42840830 <line:3208:5, col:12>
      `-ImplicitCastExpr 0x1ff42840818 <col:12> 'unsigned int' <LValueToRValue>
        `-DeclRefExpr 0x1ff428407f8 <col:12> 'unsigned int' lvalue Var 0x1ff428402f8 'psk_len' 'unsigned int'
