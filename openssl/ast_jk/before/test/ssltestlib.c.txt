TranslationUnitDecl 0x20070a54178 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20070a54a10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20070a54710 '__int128'
|-TypedefDecl 0x20070a54a80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20070a54730 'unsigned __int128'
|-TypedefDecl 0x20070a54db8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20070a54b70 'struct __NSConstantString_tag'
|   `-Record 0x20070a54ad8 '__NSConstantString_tag'
|-TypedefDecl 0x20070a54e28 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20070a54350 'unsigned long long'
|-TypedefDecl 0x20070a54ec0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20070a54e80 'char *'
|   `-BuiltinType 0x20070a54210 'char'
|-TypedefDecl 0x20070a54f30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20070a54e80 'char *'
|   `-BuiltinType 0x20070a54210 'char'
|-TypedefDecl 0x20070a54ff0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20070a54350 'unsigned long long'
|-TypedefDecl 0x20070a55060 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20070a54e80 'char *'
|   `-BuiltinType 0x20070a54210 'char'
|-FunctionDecl 0x200723b93c0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x200723b9460 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x200723b94d0 <col:21> Implicit
|-FunctionDecl 0x200723b9528 prev 0x200723b93c0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x200723b9250 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x200723b9618 <col:21> Inherited Implicit
|-TypedefDecl 0x200723b9658 prev 0x20070a54e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20070a54350 'unsigned long long'
|-TypedefDecl 0x200723b9700 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x200723b96d0 'size_t' sugar
|   |-Typedef 0x200723b9658 'size_t'
|   `-BuiltinType 0x20070a54350 'unsigned long long'
|-TypedefDecl 0x200723b9770 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20070a542b0 'long long'
|-TypedefDecl 0x200723b97e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20070a542b0 'long long'
|-TypedefDecl 0x200723b9850 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20070a542f0 'unsigned short'
|-TypedefDecl 0x200723b98c0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x20070a542f0 'unsigned short'
|-TypedefDecl 0x200723b9930 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20070a542f0 'unsigned short'
|-TypedefDecl 0x200723b99a0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20070a54270 'int'
|-TypedefDecl 0x200723b9a10 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20070a54290 'long'
|-TypedefDecl 0x200723b9a80 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20070a542b0 'long long'
|-TypedefDecl 0x200723b9b10 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x200723b9ae0 '__time64_t' sugar
|   |-Typedef 0x200723b9a80 '__time64_t'
|   `-BuiltinType 0x20070a542b0 'long long'
|-FunctionDecl 0x200723b9c88 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x200723b9ea8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x200723f8e10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x200723b9fe8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x200723ba060 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x200723ba0d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x200723ba158 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x200723f8bb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x200723f8ef0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x200723f8fb0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x200723f9120 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x200723f90d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x200723f9070 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x200723f8f90 'struct threadlocaleinfostruct'
|       `-Record 0x200723ffc20 'threadlocaleinfostruct'
|-TypedefDecl 0x200723f9230 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x200723f91e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x200723f9180 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x200723f9050 'struct threadmbcinfostruct'
|       `-Record 0x200723f8fb0 'threadmbcinfostruct'
|-RecordDecl 0x200723f9288 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x200723f9340 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x200723f9400 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x200723f9490 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x200723f9520 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x200723f95d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x200723f9580 'struct localeinfo_struct' sugar
|   `-RecordType 0x200723f93e0 'struct localeinfo_struct'
|     `-Record 0x200723f9340 'localeinfo_struct'
|-TypedefDecl 0x200723f96b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x200723f9660 'struct localeinfo_struct *'
|   `-ElaboratedType 0x200723f9580 'struct localeinfo_struct' sugar
|     `-RecordType 0x200723f93e0 'struct localeinfo_struct'
|       `-Record 0x200723f9340 'localeinfo_struct'
|-RecordDecl 0x200723f9728 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x200723f97e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x200723f9858 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x200723f9918 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x200723f99b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x200723f9a20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x200723f9ad8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x200723f9a80 'struct localerefcount' sugar
|   `-RecordType 0x200723f97c0 'struct localerefcount'
|     `-Record 0x200723f9728 'localerefcount'
|-RecordDecl 0x200723ffc20 prev 0x200723f8ef0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x200723ffca0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x200723ffd18 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x200723ffd88 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x200723ffdf8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x200723ffe68 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20072400028 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20072400098 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20072400108 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20072400178 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x200724001e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20072400258 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x200724002b0 parent 0x20070a54178 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20072400440 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x200724004b0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20072400520 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20072400590 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20072400630 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x200724006a0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x200724007b0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x200724008e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20072400998 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20072400940 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x200723f8f90 'struct threadlocaleinfostruct'
|     `-Record 0x200723ffc20 'threadlocaleinfostruct'
|-FunctionDecl 0x200723fade0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x20072400a20 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x20072400ad0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x20072400b50 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x200723fabd0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200723fb1a8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x200723fb248 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x200723fb2b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x200723fb318 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200723fb398 prev 0x200723fb1a8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x200723faed0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x200723faf50 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x200723fafc8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200723fb758 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x200723fb480 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x200723fb500 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x200723fb578 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20072408d00 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x200723fb840 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x200723fb8c0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x200723fb938 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200723fb9d0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20072409008 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x200724090a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20072409110 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20072409178 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200724091f8 prev 0x20072409008 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x20072408df0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x20072408e70 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x20072408ee8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x200724095b8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20072409658 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x200724096c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20072409728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200724097a8 prev 0x200724095b8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x200724092e0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x20072409360 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x200724093d8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20072409cc0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x200724098b8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x20072409950 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x200724099d0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x20072409a48 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2007240a088 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2007240a128 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2007240a190 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2007240a1f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2007240a278 prev 0x2007240a088 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x20072409db0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x20072409e30 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x20072409ea8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2007240a6f8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2007240a798 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2007240a800 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2007240a868 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2007240a8d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2007240a958 prev 0x2007240a6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2007240a440 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2007240a4c0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2007240a540 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2007240a5b8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2007240aa18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x20072402de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2007240abe0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x20072402c50 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x20072402cc8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072402ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x20072403290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x20072402fc8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x20072403040 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200724030c0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x20072403660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x20072403470 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x200724034f0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x20072403710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072403b20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x20072403858 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x200724038d0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x20072403950 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2007240af90 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2007240b030 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2007240b098 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2007240b110 prev 0x2007240af90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2007240ada8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2007240ae28 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2007240b1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007240b518 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2007240b308 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2007240b380 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2007240b400 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2007240b840 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2007240b8e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2007240b948 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2007240b9c0 prev 0x2007240b840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2007240b6c0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2007240b740 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2007240ba70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007240bdb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2007240be50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2007240beb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2007240bf30 prev 0x2007240bdb0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2007240bbb8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2007240bc38 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2007240c180 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2007240c220 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2007240c290 prev 0x2007240c180 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2007240c010 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2007240c588 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2007240c368 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2007240c3e0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2007240c7d8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2007240c668 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2007240c6e0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2007240cb08 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2007240caf8 <line:132:5, col:51>
|     `-ConditionalOperator 0x2007240cac8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2007240c938 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2007240c918 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2007240c8e8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2007240c8a0 <col:13> 'const char *' lvalue ParmVar 0x2007240c668 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2007240c900 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2007240c8c0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2007240cab0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2007240c958 <col:24> 'int' 0
|       `-CallExpr 0x2007240ca50 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2007240ca38 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2007240c980 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2007240c588 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2007240ca80 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2007240c9a0 <col:36> 'const char *' lvalue ParmVar 0x2007240c668 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2007240ca98 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2007240c9c0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2007240c6e0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x20072404da8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2007240cb38 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2007240cbb0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2007240cc30 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x20072404c70 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x200724050b0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20072405150 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x200724051b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20072405220 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200724052a0 prev 0x200724050b0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x20072404e98 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x20072404f18 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x20072404f90 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x200724054d8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x20072405388 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x200724057a0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x20072405840 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x200724058a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x20072405920 prev 0x200724057a0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x200724055b0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x20072405630 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x20072405b80 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20072405a00 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x20072405a80 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2007240ce70 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2007240ccf0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2007240cd70 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2007240d228 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2007240cf50 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2007240cfd0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2007240d048 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007240d490 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2007240d310 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2007240d390 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2007240d788 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2007240d570 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2007240d5f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2007240d668 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007240d9f0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2007240d870 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2007240d8f0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x20072405c80 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2007240dad0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2007240db50 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2007240dbc8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20072406038 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20072405d68 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20072405de8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x20072405e60 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200724064a0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072406120 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x200724061a0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x20072406218 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072406290 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x200724067a8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20072406590 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20072406610 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x20072406688 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20072406b40 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072406890 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x20072406910 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x20072406988 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072406a00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007240df28 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2007240dfc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2007240e030 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2007240e0a8 prev 0x2007240df28 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2007240dd00 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2007240dd80 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2007240e360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2007240e280 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2007240e408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007240e7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2007240e550 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2007240e5c8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007240e648 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2007240eaf8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2007240eb98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2007240ec08 prev 0x2007240eaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2007240e9c0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2007240ecb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072406fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x20072406d90 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x20072406e08 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072406e88 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x200724072a8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20072407088 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x20072407100 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20072407598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20072407448 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x20072407640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072407a50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072407788 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x20072407800 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072407878 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007240eec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x20072407bf8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2007240ed10 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2007240ef70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007240f428 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2007240f0b8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2007240f130 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2007240f1b0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2007240f228 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2007240f8a8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2007240f948 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2007240f9b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2007240fa18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2007240fa98 prev 0x2007240f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2007240f5d8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2007240f658 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2007240f6d0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2007240fb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072407e50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x20072407ef0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20072407f58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072407fc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20072408040 prev 0x20072407e50 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2007240fc98 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x20072407cb8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x20072407d30 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20072408340 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20072408128 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x200724081a8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x20072408220 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200724086d8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072408428 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x200724084a8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x20072408520 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072408598 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20072408a70 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x200724087c8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x20072408840 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x200724088c0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x20072408938 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2007240feb8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2007240ff58 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2007240ffc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072410028 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200724100a8 prev 0x2007240feb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x20072408c20 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2007240fd20 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2007240fd98 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072410160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072410618 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x200724102a8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x20072410320 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200724103a0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x20072410418 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20072410a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x200724107c8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x20072410848 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x200724108c0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072410b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072410ea0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x20072410f40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072410fa8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20072411020 prev 0x20072410ea0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x20072410c98 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x20072410d30 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x20072411280 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x20072411320 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072411388 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x20072411400 prev 0x20072411280 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x20072411100 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x20072411180 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x200724115c0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x200724114e0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x20072411810 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x200724118b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072411918 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20072411990 prev 0x20072411810 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x20072411698 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x20072411718 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x20072411bf0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x20072411c90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20072487e70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20072487ee8 prev 0x20072411bf0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x20072411a70 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x20072411af0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x20072488208 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x200724882a8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x20072488310 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20072488388 prev 0x20072488208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x20072488088 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x20072488108 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x20072488438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072488818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x20072488580 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x20072488600 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x20072488680 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x20072488a70 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20072488900 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x20072488978 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20072488cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20072488c10 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x20072488d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248b1a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2007248afa0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2007248b018 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007248b090 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007248b4c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2007248b350 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2007248b3c8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2007248b578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248b990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2007248ba30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2007248ba98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2007248bb00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2007248bb80 prev 0x2007248b990 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2007248b6c0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2007248b740 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2007248b7b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20072488fb8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2007248bc68 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2007248bce8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2007248bd60 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007248bdd8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20072489260 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x20072489300 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20072489370 prev 0x20072489260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x20072489180 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x20072489418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x20072489760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x200724895e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x20072489660 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x20072489810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x20072489b58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x200724899d8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x20072489a58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x20072489c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x20072486e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20072489dd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x20072486f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x20072487358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20072487140 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x200724871c0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x20072487238 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072487410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x200724877f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x200724875d8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x20072487658 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x200724876d0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x200724878a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x20072487b50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20072487a70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x20072487bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x20072489f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x20072487dc0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x20072489e90 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2007248a040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2007248a2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2007248a208 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2007248a390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2007248a620 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2007248a4b0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2007248a9b0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2007248a6f0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2007248a768 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2007248a7e0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2007248ad68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2007248ab50 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2007248abc8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2007248ae18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248c1c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2007248c268 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2007248c2d0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2007248c348 prev 0x2007248c1c8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2007248bfa8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2007248c020 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2007248c640 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2007248c6e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2007248c748 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2007248c7c0 prev 0x2007248c640 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2007248c420 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2007248c498 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2007248caa0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2007248c898 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2007248c910 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2007248c988 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2007248cdb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2007248cc40 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2007248ccb8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2007248ce60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072485158 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072484f38 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20072484fb0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x200724853a0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x20072485440 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x200724854b0 prev 0x200724853a0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x20072485230 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x20072485798 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x20072485580 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x200724855f8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200724859e0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x20072485870 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x200724858e8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x20072485d78 <line:306:1, line:308:1>
|   `-ReturnStmt 0x20072485d68 <line:307:5, col:56>
|     `-ConditionalOperator 0x20072485d38 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x20072485ba0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x20072485b80 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x20072485b50 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x20072485aa8 <col:13> 'const wchar_t *' lvalue ParmVar 0x20072485870 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x20072485b68 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x20072485b30 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x20072485b08 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x20072485ac8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x20072485d20 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x20072485bc0 <col:29> 'int' 0
|       `-CallExpr 0x20072485cc0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x20072485ca8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x20072485be8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x20072485798 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x20072485cf0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x20072485c08 <col:41> 'const wchar_t *' lvalue ParmVar 0x20072485870 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x20072485d08 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x20072485c28 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x200724858e8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x20072486148 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x20072485da0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20072485e50 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20072485ec8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20072485f40 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x200724865b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x200724862f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20072486368 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x200724863e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072486668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072486a78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x20072486b18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x20072486b80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x20072486be8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20072486c68 prev 0x20072486a78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x200724867a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072486820 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20072486898 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x200724950f0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x20072486d48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20072486dc0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20072494f40 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20072494fb8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x200724954a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20072495298 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20072495310 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x20072495388 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072495558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200724958b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072495698 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20072495710 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x20072495b00 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x20072495990 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20072495a08 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20072495d48 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072495bd8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20072495c50 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x20072493f90 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072495e20 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20072495e98 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x20072494298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072494128 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x200724941a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x20072494348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200724947b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x20072494488 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x20072494500 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x200724945e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x20072494ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x20072494958 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x20072494b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248ff60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x20072494cb8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20072494d30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072494db0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x20072490210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x20072490138 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x200724902b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072490680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x200724903f8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x20072490470 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200724904e8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x200724908d8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072490760 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x200724907d8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x20072490c78 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x200724909b0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072490a28 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20072490aa0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007248ef68 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20072490d58 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072490dd0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20072490e48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2007248f3c0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2007248f048 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007248f0c0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2007248f138 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007248f1b0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007248f818 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2007248f4a8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2007248f520 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2007248f598 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2007248f610 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2007248fc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2007248f9c0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2007248fa38 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2007248fab0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2007248fd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072491010 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2007248fe78 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x200724913a0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x200724910e0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20072491158 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200724911d0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x20072491758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x20072491540 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x200724915b8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x20072491808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20072491b68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20072491948 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x200724919c0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20072491dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20072491d00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x20072491e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200724932e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072493018 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x20072493090 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072493108 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20072493698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20072493480 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x200724934f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20072493748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200724939f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20072493888 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x20072493900 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20072493c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20072493b90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x20072493d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248e060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20072493e50 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2007248ded0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007248df48 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007248e370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2007248e200 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2007248e278 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2007248e420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2007248e820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2007248e560 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2007248e5d8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2007248e650 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2007248ec68 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2007248e900 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2007248e978 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2007248e9f0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007248ea68 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007249afa0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2007248ed50 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2007248edc8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2007249b288 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2007249b078 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007249b0f0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2007249b168 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007249b4e0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2007249b368 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2007249b3e0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2007249b7c8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2007249b5b8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007249b630 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2007249b6a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2007249bab8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2007249b8a8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007249b920 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2007249b998 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2007249be40 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2007249bb98 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007249bc10 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2007249bc88 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2007249bd00 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x200724970f8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2007249bf28 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072496f60 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20072496fd8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20072497480 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x200724971d8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072497250 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x200724972c8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20072497340 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x200724976e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x20072497608 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x20072497788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x20072497ac0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20072497948 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x200724979c0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x20072497b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x20072498f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20072497d30 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20072497da8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x20072497e20 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20072499038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x20072499400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x200724991f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x20072499270 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x200724992e8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x200724994b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x20072499750 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20072499678 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x200724997f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x20072499b28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x200724999b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x20072499a30 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x20072499bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x20072499e70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20072499d98 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x20072499f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2007249c200 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2007249c128 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2007249c2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2007249c5e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2007249c468 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2007249c4e0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2007249c690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2007249ccb0 <.//openssl//file_jk/before\test/ssltestlib.h:15:1, line:18:42> line:15:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x2007249c7b8 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x2007249c838 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x2007249c8b8 <line:16:25, col:29> col:29 min_proto_version 'int'
| |-ParmVarDecl 0x2007249c938 <col:48, col:52> col:52 max_proto_version 'int'
| |-ParmVarDecl 0x2007249c9e8 <line:17:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x2007249ca70 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x2007249caf0 <col:57, col:63> col:63 certfile 'char *'
| `-ParmVarDecl 0x2007249cb70 <line:18:25, col:31> col:31 privkeyfile 'char *'
|-FunctionDecl 0x2007249d170 <line:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x2007249cda8 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x2007249ce28 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x2007249ceb0 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x2007249cf38 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x2007249cfd8 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x2007249d058 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x2007249d3b0 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x2007249d258 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x2007249d2d8 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x2007249d530 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x2007249d668 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x2007249d7c0 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x2007249d8f8 <line:28:1, col:36> col:6 bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x2007249dcd0 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x2007249d9c8 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2007249da48 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x2007249dac8 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x2007249db48 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x2007249dbc8 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x2007249dd98 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x2007249dea8 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x2007249de50 'struct mempacket_st' sugar
|   `-RecordType 0x2007249de30 'struct mempacket_st'
|     `-Record 0x2007244ff80 'mempacket_st'
|-FunctionDecl 0x200724a0080 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x2007249df50 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-FunctionDecl 0x200724a0220 <.//openssl//file_jk/before\test\ssltestlib.c:15:1, col:32> col:12 invalid tls_dump_new 'int (int *)' static
| `-ParmVarDecl 0x200724a0158 <col:25, col:30> col:30 invalid bi 'int *'
|-FunctionDecl 0x200724a0378 <line:16:1, col:32> col:12 invalid tls_dump_free 'int (int *)' static
| `-ParmVarDecl 0x200724a02e0 <col:26, col:31> col:31 invalid a 'int *'
|-FunctionDecl 0x200724a0620 <line:17:1, col:53> col:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x200724a0438 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x200724a04b8 <col:34, col:40> col:40 out 'char *'
| `-ParmVarDecl 0x200724a0538 <col:45, col:49> col:49 outl 'int'
|-FunctionDecl 0x200724a08e0 <line:18:1, col:58> col:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x200724a06f0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x200724a0770 <col:35, col:47> col:47 in 'const char *'
| `-ParmVarDecl 0x200724a07f0 <col:51, col:55> col:55 inl 'int'
|-FunctionDecl 0x200724a0c30 <line:19:1, col:63> col:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x200724a09b0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x200724a0a30 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x200724a0ab0 <col:44, col:49> col:49 num 'long'
| `-ParmVarDecl 0x200724a0b30 <col:54, col:60> col:60 ptr 'void *'
|-FunctionDecl 0x200724a0eb0 <line:20:1, col:54> col:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x200724a0d08 <col:26, col:31> col:31 invalid bp 'int *'
| |-ParmVarDecl 0x200724a0d88 <col:35, col:41> col:41 buf 'char *'
| `-ParmVarDecl 0x200724a0e08 <col:46, col:50> col:50 size 'int'
|-FunctionDecl 0x200724a10f0 <line:21:1, col:50> col:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x200724a0f80 <col:26, col:31> col:31 invalid bp 'int *'
| `-ParmVarDecl 0x200724a1018 <col:35, col:47> col:47 str 'const char *'
|-VarDecl 0x200724a11b8 <line:28:1, col:20> col:20 invalid method_tls_dump 'int *' static
|-VarDecl 0x200724a12c0 <line:29:1, col:20> col:20 invalid method_mempacket_test 'int *' static
|-FunctionDecl 0x200724a1450 <line:32:1, line:48:1> line:32:19 invalid bio_f_tls_dump_filter 'const int *(void)'
| `-CompoundStmt 0x200724a2088 <line:33:1, line:48:1>
|   `-IfStmt 0x200724a2070 <line:34:5, line:46:5>
|     |-OpaqueValueExpr 0x200724a2058 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x200724a2040 <line:34:34, line:46:5>
|       `-IfStmt 0x200724a2028 <line:37:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x200724a2010 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x200724a1fe8 <.//openssl//file_jk/before\test\ssltestlib.c:45:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x200724a1fd0 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x200724a1fb0 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x200724a1f88 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x200724a1f48 <col:26> 'int' 0
|-FunctionDecl 0x200724a2138 prev 0x2007249d668 <.//openssl//file_jk/before\test\ssltestlib.c:50:1, line:53:1> line:50:6 bio_f_tls_dump_filter_free 'void (void)'
| `-CompoundStmt 0x200724a22e8 <line:51:1, line:53:1>
|-FunctionDecl 0x200724a23a8 <line:55:1, line:59:1> line:55:12 invalid tls_dump_new 'int (int *)' static
| |-ParmVarDecl 0x200724a2310 <col:25, col:30> col:30 invalid bio 'int *'
| `-CompoundStmt 0x200724a25d8 <line:56:1, line:59:1>
|   `-ReturnStmt 0x200724a25c8 <line:58:5, col:12>
|     `-IntegerLiteral 0x200724a25a0 <col:12> 'int' 1
|-FunctionDecl 0x200724a26a0 <line:61:1, line:66:1> line:61:12 invalid tls_dump_free 'int (int *)' static
| |-ParmVarDecl 0x200724a2608 <col:26, col:31> col:31 invalid bio 'int *'
| `-CompoundStmt 0x200724a27e0 <line:62:1, line:66:1>
|   `-ReturnStmt 0x200724a27d0 <line:65:5, col:12>
|     `-IntegerLiteral 0x200724a27a8 <col:12> 'int' 1
|-FunctionDecl 0x200724a28d8 <line:68:1, line:76:1> line:68:13 invalid copy_flags 'void (int *)' static
| |-ParmVarDecl 0x200724a2810 <col:24, col:29> col:29 invalid bio 'int *'
| `-CompoundStmt 0x200724a2ec8 <line:69:1, line:76:1>
|   `-DeclStmt 0x200724a2a18 <line:70:5, col:14>
|     `-VarDecl 0x200724a29b0 <col:5, col:9> col:9 used flags 'int'
|-FunctionDecl 0x2007249e038 <line:102:1, line:176:1> line:102:13 used dump_data 'void (const char *, int)' static
| |-ParmVarDecl 0x200724a2ef8 <col:23, col:35> col:35 used data 'const char *'
| |-ParmVarDecl 0x200724a2f78 <col:41, col:45> col:45 used len 'int'
| `-CompoundStmt 0x2007244e310 <line:103:1, line:176:1>
|   |-DeclStmt 0x2007249e548 <line:104:5, col:65>
|   | |-VarDecl 0x2007249e118 <col:5, col:9> col:9 used rem 'int'
|   | |-VarDecl 0x2007249e198 <col:5, col:14> col:14 used i 'int'
|   | |-VarDecl 0x2007249e218 <col:5, col:17> col:17 used content 'int'
|   | |-VarDecl 0x2007249e298 <col:5, col:26> col:26 used reclen 'int'
|   | |-VarDecl 0x2007249e318 <col:5, col:34> col:34 used msglen 'int'
|   | |-VarDecl 0x2007249e398 <col:5, col:42> col:42 used fragoff 'int'
|   | |-VarDecl 0x2007249e418 <col:5, col:51> col:51 used fraglen 'int'
|   | `-VarDecl 0x2007249e498 <col:5, col:60> col:60 used epoch 'int'
|   |-DeclStmt 0x2007249e608 <line:105:5, col:23>
|   | `-VarDecl 0x2007249e5a0 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-CallExpr 0x2007249e8e0 <line:107:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x2007249e8c8 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2007249e7d0 <col:5> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x2007249e920 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2007249e908 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2007249e848 <col:12> 'char [27]' lvalue "---- START OF PACKET ----\n"
|   |-BinaryOperator 0x2007249e9a8 <line:109:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2007249e938 <col:5> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   | `-ImplicitCastExpr 0x2007249e990 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2007249e970 <col:11> 'int' lvalue ParmVar 0x200724a2f78 'len' 'int'
|   |-BinaryOperator 0x2007249ea78 <line:110:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2007249e9c8 <col:5> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   | `-CStyleCastExpr 0x2007249ea50 <col:11, col:28> 'unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x2007249ea38 <col:28> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2007249ea00 <col:28> 'const char *' lvalue ParmVar 0x200724a2ef8 'data' 'const char *'
|   |-WhileStmt 0x2007244e108 <line:112:5, line:173:5>
|   | |-BinaryOperator 0x2007249eaf8 <line:112:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2007249eae0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2007249ea98 <col:12> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   | | `-IntegerLiteral 0x2007249eab8 <col:18> 'int' 0
|   | `-CompoundStmt 0x2007244e088 <col:21, line:173:5>
|   |   |-IfStmt 0x2007249ecb0 <line:113:9, line:114:25>
|   |   | |-BinaryOperator 0x2007249eb88 <line:113:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2007249eb58 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2007249eb18 <col:13> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   |   | | `-ImplicitCastExpr 0x2007249eb70 <col:20> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2007249eb38 <col:20> 'int' lvalue ParmVar 0x200724a2f78 'len' 'int'
|   |   | `-CallExpr 0x2007249ec58 <line:114:13, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x2007249ec40 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2007249eba8 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |   `-ImplicitCastExpr 0x2007249ec98 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x2007249ec80 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x2007249ec08 <col:20> 'char [3]' lvalue "*\n"
|   |   |-CallExpr 0x2007249ed90 <line:115:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x2007249ed78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007249ecc8 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007249edd0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007249edb8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007249ed28 <col:16> 'char [28]' lvalue "*---- START OF RECORD ----\n"
|   |   |-IfStmt 0x2007249ef68 <line:116:9, line:119:9>
|   |   | |-OpaqueValueExpr 0x2007249ef50 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2007249ef30 <line:116:43, line:119:9>
|   |   |   |-CallExpr 0x2007249eed0 <line:117:13, col:51> 'int'
|   |   |   | |-ImplicitCastExpr 0x2007249eeb8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2007249ee08 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2007249ef10 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2007249eef8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2007249ee68 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |   |   `-BreakStmt 0x2007249ef28 <line:118:13>
|   |   |-BinaryOperator 0x2007244bf60 <line:120:9, col:42> 'int' '='
|   |   | |-DeclRefExpr 0x2007249ef80 <col:9> 'int' lvalue Var 0x2007249e218 'content' 'int'
|   |   | `-ImplicitCastExpr 0x2007244bf48 <col:19, col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2007244bf30 <col:19, col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x2007244bf10 <col:19, col:42> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x2007244bef8 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2007244beb0 <col:19> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x2007244bed0 <line:78:33> 'int' 0
|   |   |-CallExpr 0x2007244c028 <line:121:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x2007244c010 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007244bf80 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2007244c070 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2007244c058 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2007244bfa0 <col:16> 'char [28]' lvalue "** Record Content-type: %d\n"
|   |   | `-ImplicitCastExpr 0x2007244c088 <col:48> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2007244bfd8 <col:48> 'int' lvalue Var 0x2007249e218 'content' 'int'
|   |   |-CallExpr 0x2007244c228 <line:122:9, line:123:62> 'int'
|   |   | |-ImplicitCastExpr 0x2007244c210 <line:122:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007244c0a0 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2007244c278 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2007244c260 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2007244c0c0 <col:16> 'char [29]' lvalue "** Record Version: %02x%02x\n"
|   |   | |-ImplicitCastExpr 0x2007244c2a8 <line:123:16, col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2007244c290 <col:16, col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x2007244c158 <col:16, col:37> 'unsigned char' lvalue
|   |   | |     |-ImplicitCastExpr 0x2007244c140 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2007244c0f8 <col:16> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   | |     `-IntegerLiteral 0x2007244c118 <line:79:33> 'int' 1
|   |   | `-ImplicitCastExpr 0x2007244c2d8 <line:123:40, col:61> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2007244c2c0 <col:40, col:61> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x2007244c1d8 <col:40, col:61> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x2007244c1c0 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2007244c178 <col:40> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x2007244c198 <line:80:33> 'int' 2
|   |   |-BinaryOperator 0x2007244c510 <line:124:9, col:66> 'int' '='
|   |   | |-DeclRefExpr 0x2007244c2f0 <col:9> 'int' lvalue Var 0x2007249e498 'epoch' 'int'
|   |   | `-BinaryOperator 0x2007244c4f0 <col:17, col:66> 'int' '|'
|   |   |   |-ParenExpr 0x2007244c420 <col:17, col:43> 'int'
|   |   |   | `-BinaryOperator 0x2007244c400 <col:18, col:42> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x2007244c3e8 <col:18, col:37> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x2007244c3d0 <col:18, col:37> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x2007244c388 <col:18, col:37> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x2007244c370 <col:18> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x2007244c328 <col:18> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x2007244c348 <line:81:33> 'int' 3
|   |   |   |   `-IntegerLiteral 0x2007244c3a8 <line:124:42> 'int' 8
|   |   |   `-ImplicitCastExpr 0x2007244c4d8 <col:47, col:66> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2007244c4c0 <col:47, col:66> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2007244c4a0 <col:47, col:66> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2007244c488 <col:47> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2007244c440 <col:47> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x2007244c460 <line:82:33> 'int' 4
|   |   |-CallExpr 0x2007244c608 <line:125:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x2007244c5f0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007244c530 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2007244c650 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2007244c638 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2007244c588 <col:16> 'char [21]' lvalue "** Record Epoch: %d\n"
|   |   | `-ImplicitCastExpr 0x2007244c668 <col:41> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2007244c5b8 <col:41> 'int' lvalue Var 0x2007249e498 'epoch' 'int'
|   |   |-CallExpr 0x2007244c700 <line:126:9, col:38> 'int'
|   |   | |-ImplicitCastExpr 0x2007244c6e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007244c680 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007244c740 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007244c728 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007244c6a0 <col:16> 'char [21]' lvalue "** Record Sequence: "
|   |   |-ForStmt 0x2007244ca58 <line:127:9, line:128:34>
|   |   | |-BinaryOperator 0x2007244c7b8 <line:127:14, line:83:33> 'int' '='
|   |   | | |-DeclRefExpr 0x2007244c758 <line:127:14> 'int' lvalue Var 0x2007249e198 'i' 'int'
|   |   | | `-IntegerLiteral 0x2007244c790 <line:83:33> 'int' 5
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2007244c838 <line:127:41, line:84:33> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2007244c820 <line:127:41> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2007244c7d8 <col:41> 'int' lvalue Var 0x2007249e198 'i' 'int'
|   |   | | `-IntegerLiteral 0x2007244c7f8 <line:84:33> 'int' 10
|   |   | |-UnaryOperator 0x2007244c878 <line:127:67, col:68> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x2007244c858 <col:67> 'int' lvalue Var 0x2007249e198 'i' 'int'
|   |   | `-CallExpr 0x2007244c9c8 <line:128:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x2007244c9b0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2007244c890 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x2007244ca10 <col:20> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x2007244c9f8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x2007244c8e8 <col:20> 'char [5]' lvalue "%02x"
|   |   |   `-ImplicitCastExpr 0x2007244ca40 <col:28, col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2007244ca28 <col:28, col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2007244c978 <col:28, col:33> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2007244c948 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2007244c908 <col:28> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         `-ImplicitCastExpr 0x2007244c960 <col:32> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2007244c928 <col:32> 'int' lvalue Var 0x2007249e198 'i' 'int'
|   |   |-BinaryOperator 0x2007244ccb0 <line:129:9, col:63> 'int' '='
|   |   | |-DeclRefExpr 0x2007244ca90 <col:9> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |   | `-BinaryOperator 0x2007244cc90 <col:18, col:63> 'int' '|'
|   |   |   |-ParenExpr 0x2007244cbc0 <col:18, col:42> 'int'
|   |   |   | `-BinaryOperator 0x2007244cba0 <col:19, col:41> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x2007244cb88 <col:19, col:36> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x2007244cb70 <col:19, col:36> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x2007244cb28 <col:19, col:36> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x2007244cb10 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x2007244cac8 <col:19> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x2007244cae8 <line:85:33> 'int' 11
|   |   |   |   `-IntegerLiteral 0x2007244cb48 <line:129:41> 'int' 8
|   |   |   `-ImplicitCastExpr 0x2007244cc78 <col:46, col:63> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2007244cc60 <col:46, col:63> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2007244cc40 <col:46, col:63> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2007244cc28 <col:46> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2007244cbe0 <col:46> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x2007244cc00 <line:86:33> 'int' 12
|   |   |-CallExpr 0x2007244cda8 <line:130:9, col:50> 'int'
|   |   | |-ImplicitCastExpr 0x2007244cd90 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007244ccd0 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2007244cdf0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2007244cdd8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2007244cd28 <col:16> 'char [23]' lvalue "\n** Record Length: %d\n"
|   |   | `-ImplicitCastExpr 0x2007244ce08 <col:44> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2007244cd58 <col:44> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |   |-IfStmt 0x20072449bd0 <line:135:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x20072449bb8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x20072449b98 <line:135:43, line:164:9>
|   |   |   |-CallExpr 0x2007244cf70 <line:136:13, col:71> 'int'
|   |   |   | |-ImplicitCastExpr 0x2007244cf58 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2007244ce80 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2007244cfb0 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2007244cf98 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2007244cef8 <col:20> 'char [49]' lvalue "**---- START OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   |   `-IfStmt 0x20072449b70 <line:137:13, line:163:13> has_else
|   |   |     |-BinaryOperator 0x2007244d028 <line:137:17, col:25> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x2007244d010 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2007244cfc8 <col:17> 'int' lvalue Var 0x2007249e498 'epoch' 'int'
|   |   |     | `-IntegerLiteral 0x2007244cfe8 <col:25> 'int' 0
|   |   |     |-CompoundStmt 0x2007244d180 <col:28, line:139:13>
|   |   |     | `-CallExpr 0x2007244d128 <line:138:17, col:76> 'int'
|   |   |     |   |-ImplicitCastExpr 0x2007244d110 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x2007244d048 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |     |   `-ImplicitCastExpr 0x2007244d168 <col:24> 'const char *' <NoOp>
|   |   |     |     `-ImplicitCastExpr 0x2007244d150 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |     |       `-StringLiteral 0x2007244d0a8 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT ENCRYPTED ----\n"
|   |   |     `-IfStmt 0x20072449b48 <line:139:20, line:163:13> has_else
|   |   |       |-OpaqueValueExpr 0x20072449b30 <<invalid sloc>> '_Bool'
|   |   |       |-CompoundStmt 0x2007244d2d0 <line:140:57, line:142:13>
|   |   |       | `-CallExpr 0x2007244d278 <line:141:17, col:76> 'int'
|   |   |       |   |-ImplicitCastExpr 0x2007244d260 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x2007244d1d8 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |       |   `-ImplicitCastExpr 0x2007244d2b8 <col:24> 'const char *' <NoOp>
|   |   |       |     `-ImplicitCastExpr 0x2007244d2a0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |       |       `-StringLiteral 0x2007244d1f8 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |       `-CompoundStmt 0x20072449ad8 <line:142:20, line:163:13>
|   |   |         |-CallExpr 0x2007244d428 <line:143:17, col:63> 'int'
|   |   |         | |-ImplicitCastExpr 0x2007244d410 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2007244d2e8 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2007244d470 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2007244d458 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2007244d348 <col:24> 'char [22]' lvalue "*** Message Type: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2007244d4a0 <col:50, col:62> 'int' <IntegralCast>
|   |   |         |   `-ImplicitCastExpr 0x2007244d488 <col:50, col:62> 'unsigned char' <LValueToRValue>
|   |   |         |     `-ArraySubscriptExpr 0x2007244d3d8 <col:50, col:62> 'unsigned char' lvalue
|   |   |         |       |-ImplicitCastExpr 0x2007244d3c0 <col:50> 'unsigned char *' <LValueToRValue>
|   |   |         |       | `-DeclRefExpr 0x2007244d378 <col:50> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |       `-IntegerLiteral 0x2007244d398 <line:88:33> 'int' 0
|   |   |         |-BinaryOperator 0x2007244d810 <line:144:17, line:145:42> 'int' '='
|   |   |         | |-DeclRefExpr 0x2007244d4b8 <line:144:17> 'int' lvalue Var 0x2007249e318 'msglen' 'int'
|   |   |         | `-BinaryOperator 0x2007244d7f0 <col:26, line:145:42> 'int' '|'
|   |   |         |   |-BinaryOperator 0x2007244d720 <line:144:26, col:74> 'int' '|'
|   |   |         |   | |-ParenExpr 0x2007244d5e8 <col:26, col:48> 'int'
|   |   |         |   | | `-BinaryOperator 0x2007244d5c8 <col:27, col:46> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x2007244d5b0 <col:27, col:41> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x2007244d598 <col:27, col:41> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x2007244d550 <col:27, col:41> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x2007244d538 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x2007244d4f0 <col:27> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x2007244d510 <line:89:33> 'int' 1
|   |   |         |   | |   `-IntegerLiteral 0x2007244d570 <line:144:46> 'int' 16
|   |   |         |   | `-ParenExpr 0x2007244d700 <col:52, col:74> 'int'
|   |   |         |   |   `-BinaryOperator 0x2007244d6e0 <col:53, col:73> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x2007244d6c8 <col:53, col:68> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x2007244d6b0 <col:53, col:68> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x2007244d668 <col:53, col:68> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x2007244d650 <col:53> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x2007244d608 <col:53> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x2007244d628 <line:90:33> 'int' 2
|   |   |         |   |     `-IntegerLiteral 0x2007244d688 <line:144:73> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2007244d7d8 <line:145:28, col:42> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2007244d7c0 <col:28, col:42> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2007244d7a0 <col:28, col:42> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2007244d788 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2007244d740 <col:28> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2007244d760 <line:91:33> 'int' 3
|   |   |         |-CallExpr 0x2007244d908 <line:146:17, col:58> 'int'
|   |   |         | |-ImplicitCastExpr 0x2007244d8f0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2007244d830 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2007244d950 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2007244d938 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2007244d888 <col:24> 'char [24]' lvalue "*** Message Length: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2007244d968 <col:52> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x2007244d8b8 <col:52> 'int' lvalue Var 0x2007249e318 'msglen' 'int'
|   |   |         |-CallExpr 0x2007244dc28 <line:147:17, line:148:64> 'int'
|   |   |         | |-ImplicitCastExpr 0x2007244dc10 <line:147:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2007244d980 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2007244dc70 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2007244dc58 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2007244d9d8 <col:24> 'char [26]' lvalue "*** Message sequence: %d\n"
|   |   |         | `-BinaryOperator 0x2007244dbd8 <line:148:24, col:63> 'int' '|'
|   |   |         |   |-ParenExpr 0x2007244db08 <col:24, col:45> 'int'
|   |   |         |   | `-BinaryOperator 0x2007244dae8 <col:25, col:44> 'int' '<<'
|   |   |         |   |   |-ImplicitCastExpr 0x2007244dad0 <col:25, col:39> 'int' <IntegralCast>
|   |   |         |   |   | `-ImplicitCastExpr 0x2007244dab8 <col:25, col:39> 'unsigned char' <LValueToRValue>
|   |   |         |   |   |   `-ArraySubscriptExpr 0x2007244da70 <col:25, col:39> 'unsigned char' lvalue
|   |   |         |   |   |     |-ImplicitCastExpr 0x2007244da58 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |         |   |   |     | `-DeclRefExpr 0x2007244da10 <col:25> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   |   |     `-IntegerLiteral 0x2007244da30 <line:92:33> 'int' 4
|   |   |         |   |   `-IntegerLiteral 0x2007244da90 <line:148:44> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2007244dbc0 <col:49, col:63> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2007244dba8 <col:49, col:63> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2007244db88 <col:49, col:63> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2007244db70 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2007244db28 <col:49> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2007244db48 <line:93:33> 'int' 5
|   |   |         |-BinaryOperator 0x20072448fb0 <line:149:17, line:151:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x2007244dc88 <line:149:17> 'int' lvalue Var 0x2007249e398 'fragoff' 'int'
|   |   |         | `-BinaryOperator 0x20072448f90 <col:27, line:151:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x20072448ec0 <line:149:27, line:150:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x2007244ddb8 <line:149:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x2007244dd98 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x2007244dd80 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x2007244dd68 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x2007244dd20 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x2007244dd08 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x2007244dcc0 <col:28> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x2007244dce0 <line:94:33> 'int' 6
|   |   |         |   | |   `-IntegerLiteral 0x2007244dd40 <line:149:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x20072448ea0 <line:150:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x20072448e80 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x2007244de98 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x2007244de80 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x2007244de38 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x2007244de20 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x2007244ddd8 <col:30> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x2007244ddf8 <line:95:33> 'int' 7
|   |   |         |   |     `-IntegerLiteral 0x2007244de58 <line:150:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x20072448f78 <line:151:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x20072448f60 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x20072448f40 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x20072448f28 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x20072448ee0 <col:29> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x20072448f00 <line:96:33> 'int' 8
|   |   |         |-CallExpr 0x200724490b0 <line:152:17, col:68> 'int'
|   |   |         | |-ImplicitCastExpr 0x20072449098 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x20072448fd0 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x200724490f8 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x200724490e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x20072449028 <col:24> 'char [33]' lvalue "*** Message Fragment offset: %d\n"
|   |   |         | `-ImplicitCastExpr 0x20072449110 <col:61> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x20072449060 <col:61> 'int' lvalue Var 0x2007249e398 'fragoff' 'int'
|   |   |         |-BinaryOperator 0x20072449480 <line:153:17, line:155:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x20072449128 <line:153:17> 'int' lvalue Var 0x2007249e418 'fraglen' 'int'
|   |   |         | `-BinaryOperator 0x20072449460 <col:27, line:155:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x20072449390 <line:153:27, line:154:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x20072449258 <line:153:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x20072449238 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x20072449220 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x20072449208 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x200724491c0 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x200724491a8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x20072449160 <col:28> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x20072449180 <line:97:33> 'int' 9
|   |   |         |   | |   `-IntegerLiteral 0x200724491e0 <line:153:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x20072449370 <line:154:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x20072449350 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x20072449338 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x20072449320 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x200724492d8 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x200724492c0 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x20072449278 <col:30> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x20072449298 <line:98:33> 'int' 10
|   |   |         |   |     `-IntegerLiteral 0x200724492f8 <line:154:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x20072449448 <line:155:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x20072449430 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x20072449410 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x200724493f8 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x200724493b0 <col:29> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x200724493d0 <line:99:33> 'int' 11
|   |   |         |-CallExpr 0x20072449580 <line:156:17, col:65> 'int'
|   |   |         | |-ImplicitCastExpr 0x20072449568 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x200724494a0 <col:17> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x200724495c8 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x200724495b0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x200724494f8 <col:24> 'char [30]' lvalue "*** Message Fragment len: %d\n"
|   |   |         | `-ImplicitCastExpr 0x200724495e0 <col:58> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x20072449530 <col:58> 'int' lvalue Var 0x2007249e418 'fraglen' 'int'
|   |   |         `-IfStmt 0x20072449ab0 <line:157:17, line:162:77> has_else
|   |   |           |-BinaryOperator 0x200724496c0 <line:157:21, col:41> 'int' '>'
|   |   |           | |-BinaryOperator 0x20072449668 <col:21, col:31> 'int' '+'
|   |   |           | | |-ImplicitCastExpr 0x20072449638 <col:21> 'int' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 0x200724495f8 <col:21> 'int' lvalue Var 0x2007249e398 'fragoff' 'int'
|   |   |           | | `-ImplicitCastExpr 0x20072449650 <col:31> 'int' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x20072449618 <col:31> 'int' lvalue Var 0x2007249e418 'fraglen' 'int'
|   |   |           | `-ImplicitCastExpr 0x200724496a8 <col:41> 'int' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 0x20072449688 <col:41> 'int' lvalue Var 0x2007249e318 'msglen' 'int'
|   |   |           |-CallExpr 0x20072449778 <line:158:21, col:79> 'int'
|   |   |           | |-ImplicitCastExpr 0x20072449760 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | `-DeclRefExpr 0x200724496e0 <col:21> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |           | `-ImplicitCastExpr 0x200724497b8 <col:28> 'const char *' <NoOp>
|   |   |           |   `-ImplicitCastExpr 0x200724497a0 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |           |     `-StringLiteral 0x20072449700 <col:28> 'char [49]' lvalue "***---- HANDSHAKE MESSAGE FRAGMENT INVALID ----\n"
|   |   |           `-IfStmt 0x20072449a88 <line:159:22, line:162:77> has_else
|   |   |             |-BinaryOperator 0x20072449840 <line:159:25, col:34> 'int' '<'
|   |   |             | |-ImplicitCastExpr 0x20072449810 <col:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x200724497d0 <col:25> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |   |             | `-ImplicitCastExpr 0x20072449828 <col:34> 'int' <LValueToRValue>
|   |   |             |   `-DeclRefExpr 0x200724497f0 <col:34> 'int' lvalue Var 0x2007249e418 'fraglen' 'int'
|   |   |             |-CallExpr 0x20072449900 <line:160:21, col:80> 'int'
|   |   |             | |-ImplicitCastExpr 0x200724498e8 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             | | `-DeclRefExpr 0x20072449860 <col:21> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |             | `-ImplicitCastExpr 0x20072449940 <col:28> 'const char *' <NoOp>
|   |   |             |   `-ImplicitCastExpr 0x20072449928 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |             |     `-StringLiteral 0x20072449880 <col:28> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |             `-CallExpr 0x20072449a30 <line:162:21, col:77> 'int'
|   |   |               |-ImplicitCastExpr 0x20072449a18 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |               | `-DeclRefExpr 0x20072449958 <col:21> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |               `-ImplicitCastExpr 0x20072449a70 <col:28> 'const char *' <NoOp>
|   |   |                 `-ImplicitCastExpr 0x20072449a58 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |                   `-StringLiteral 0x200724499b8 <col:28> 'char [47]' lvalue "**---- END OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   `-IfStmt 0x2007244e060 <line:165:9, line:172:9> has_else
|   |     |-BinaryOperator 0x20072449c58 <line:165:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x20072449c28 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20072449be8 <col:13> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   |     | `-ImplicitCastExpr 0x20072449c40 <col:19> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x20072449c08 <col:19> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |     |-CompoundStmt 0x20072449dc0 <col:27, line:168:9>
|   |     | |-CallExpr 0x20072449d00 <line:166:13, col:51> 'int'
|   |     | | |-ImplicitCastExpr 0x20072449ce8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x20072449c78 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |     | | `-ImplicitCastExpr 0x20072449d40 <col:20> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x20072449d28 <col:20> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x20072449c98 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |     | `-BinaryOperator 0x20072449da0 <line:167:13, col:19> 'int' '='
|   |     |   |-DeclRefExpr 0x20072449d58 <col:13> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   |     |   `-IntegerLiteral 0x20072449d78 <col:19> 'int' 0
|   |     `-CompoundStmt 0x2007244e038 <line:168:16, line:172:9>
|   |       |-CompoundAssignOperator 0x20072449e38 <line:169:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x20072449de0 <col:13> 'unsigned char *' lvalue Var 0x2007249e5a0 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x20072449e20 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20072449e00 <col:20> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |       |-CompoundAssignOperator 0x2007244df28 <line:170:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x2007244ded0 <col:13> 'int' lvalue Var 0x2007249e118 'rem' 'int'
|   |       | `-ImplicitCastExpr 0x2007244df10 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2007244def0 <col:20> 'int' lvalue Var 0x2007249e298 'reclen' 'int'
|   |       `-CallExpr 0x2007244dfe0 <line:171:13, col:48> 'int'
|   |         |-ImplicitCastExpr 0x2007244dfc8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x2007244df58 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |         `-ImplicitCastExpr 0x2007244e020 <col:20> 'const char *' <NoOp>
|   |           `-ImplicitCastExpr 0x2007244e008 <col:20> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x2007244df78 <col:20> 'char [26]' lvalue "*---- END OF RECORD ----\n"
|   `-CallExpr 0x2007244e1a8 <line:174:5, col:41> 'int'
|     |-ImplicitCastExpr 0x2007244e190 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2007244e120 <col:5> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x2007244e1e8 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x2007244e1d0 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x2007244e140 <col:12> 'char [26]' lvalue "---- END OF PACKET ----\n\n"
|-FunctionDecl 0x2007249e658 <line:107:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2007249e6f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2007249e768 <col:5> Implicit printf 1 2
|-FunctionDecl 0x2007244e518 <line:178:1, line:191:1> line:178:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2007244e370 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2007244e3f0 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x2007244e470 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x2007244ea70 <line:179:1, line:191:1>
|   |-DeclStmt 0x2007244e668 <line:180:5, col:12>
|   | `-VarDecl 0x2007244e600 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x2007244ea10 <line:186:5, line:188:5>
|   | |-BinaryOperator 0x2007244e8b8 <line:186:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x2007244e8a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2007244e858 <col:9> 'int' lvalue Var 0x2007244e600 'ret' 'int'
|   | | `-IntegerLiteral 0x2007244e878 <col:15> 'int' 0
|   | `-CompoundStmt 0x2007244e9f8 <col:18, line:188:5>
|   |   `-CallExpr 0x2007244e980 <line:187:9, col:27> 'void'
|   |     |-ImplicitCastExpr 0x2007244e968 <col:9> 'void (*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2007244e8d8 <col:9> 'void (const char *, int)' Function 0x2007249e038 'dump_data' 'void (const char *, int)'
|   |     |-ImplicitCastExpr 0x2007244e9c8 <col:19> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2007244e9b0 <col:19> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2007244e8f8 <col:19> 'char *' lvalue ParmVar 0x2007244e3f0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x2007244e9e0 <col:24> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2007244e918 <col:24> 'int' lvalue Var 0x2007244e600 'ret' 'int'
|   `-ReturnStmt 0x2007244ea60 <line:190:5, col:12>
|     `-ImplicitCastExpr 0x2007244ea48 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2007244ea28 <col:12> 'int' lvalue Var 0x2007244e600 'ret' 'int'
|-FunctionDecl 0x2007244ec58 <line:193:1, line:202:1> line:193:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2007244eab0 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2007244eb30 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x2007244ebb0 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x2007244f080 <line:194:1, line:202:1>
|   |-DeclStmt 0x2007244eda8 <line:195:5, col:12>
|   | `-VarDecl 0x2007244ed40 <col:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x2007244f070 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x2007244f058 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2007244f038 <col:12> 'int' lvalue Var 0x2007244ed40 'ret' 'int'
|-FunctionDecl 0x2007244f2e8 <line:204:1, line:221:1> line:204:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2007244f0b8 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2007244f138 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x2007244f1b8 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x2007244f238 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x2007244f8e0 <line:205:1, line:221:1>
|   |-DeclStmt 0x2007244f440 <line:206:5, col:13>
|   | `-VarDecl 0x2007244f3d8 <col:5, col:10> col:10 used ret 'long'
|   |-IfStmt 0x2007244f568 <line:209:5, line:210:16>
|   | |-OpaqueValueExpr 0x2007244f550 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2007244f540 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2007244f528 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2007244f500 <col:16> 'int' 0
|   |-SwitchStmt 0x2007244f5d0 <line:212:5, line:219:5>
|   | |-ImplicitCastExpr 0x2007244f5b8 <line:212:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2007244f580 <col:13> 'int' lvalue ParmVar 0x2007244f138 'cmd' 'int'
|   | `-CompoundStmt 0x2007244f868 <col:18, line:219:5>
|   |   |-BinaryOperator 0x2007244f650 <line:214:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2007244f5f0 <col:9> 'long' lvalue Var 0x2007244f3d8 'ret' 'long'
|   |   | `-IntegerLiteral 0x2007244f628 <col:15> 'long' 0
|   |   |-BreakStmt 0x2007244f670 <line:215:9>
|   |   |-DefaultStmt 0x2007244f840 <line:216:5, col:12>
|   |   | `-NullStmt 0x2007244f838 <col:12>
|   |   `-BreakStmt 0x2007244f860 <line:218:9>
|   `-ReturnStmt 0x2007244f8d0 <line:220:5, col:12>
|     `-ImplicitCastExpr 0x2007244f8b8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2007244f898 <col:12> 'long' lvalue Var 0x2007244f3d8 'ret' 'long'
|-FunctionDecl 0x2007244fad0 <line:223:1, line:227:1> line:223:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2007244f928 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2007244f9a8 <col:36, col:42> col:42 buf 'char *'
| |-ParmVarDecl 0x2007244fa28 <col:47, col:51> col:51 size 'int'
| `-CompoundStmt 0x2007244fbf0 <line:224:1, line:227:1>
|   `-ReturnStmt 0x2007244fbe0 <line:226:5, col:13>
|     `-UnaryOperator 0x2007244fbc8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x2007244fba0 <col:13> 'int' 1
|-FunctionDecl 0x2007244fd70 <line:229:1, line:232:1> line:229:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2007244fc50 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2007244fcd0 <col:36, col:48> col:48 used str 'const char *'
| `-CompoundStmt 0x2007244ff70 <line:230:1, line:232:1>
|-RecordDecl 0x2007244ff80 prev 0x2007249dd98 <line:235:1, line:240:1> line:235:8 struct mempacket_st definition
| |-FieldDecl 0x20072450018 <line:236:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x20072450088 <line:237:5, col:9> col:9 referenced len 'int'
| |-FieldDecl 0x200724500f8 <line:238:5, col:18> col:18 referenced num 'unsigned int'
| `-FieldDecl 0x20072450168 <line:239:5, col:18> col:18 referenced type 'unsigned int'
|-FunctionDecl 0x20072450338 <line:242:1, line:247:1> line:242:13 used mempacket_free 'void (MEMPACKET *)' static
| |-ParmVarDecl 0x20072450228 <col:28, col:39> col:39 used pkt 'MEMPACKET *'
| `-CompoundStmt 0x200724507e0 <line:243:1, line:247:1>
|   |-IfStmt 0x20072450730 <line:244:5, line:245:31>
|   | |-BinaryOperator 0x20072450518 <line:244:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x200724504e8 <.//openssl//file_jk/before\test\ssltestlib.c:244:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x20072450430 <col:9, col:14> 'unsigned char *' lvalue ->data 0x20072450018
|   | | |   `-ImplicitCastExpr 0x20072450418 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x200724503f8 <col:9> 'MEMPACKET *' lvalue ParmVar 0x20072450228 'pkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x20072450500 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x200724504c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200724504a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20072450460 <col:26> 'int' 0
|   | `-CallExpr 0x200724506f0 <.//openssl//file_jk/before\test\ssltestlib.c:245:9, col:31> 'int'
|   |   |-ImplicitCastExpr 0x200724506d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20072450628 <col:9> 'int ()' Function 0x20072450560 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x20072450718 <col:22, col:27> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x20072450680 <col:22, col:27> 'unsigned char *' lvalue ->data 0x20072450018
|   |       `-ImplicitCastExpr 0x20072450668 <col:22> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x20072450648 <col:22> 'MEMPACKET *' lvalue ParmVar 0x20072450228 'pkt' 'MEMPACKET *'
|   `-CallExpr 0x200724507a0 <line:246:5, col:21> 'int'
|     |-ImplicitCastExpr 0x20072450788 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x20072450748 <col:5> 'int ()' Function 0x20072450560 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x200724507c8 <col:18> 'MEMPACKET *' <LValueToRValue>
|       `-DeclRefExpr 0x20072450768 <col:18> 'MEMPACKET *' lvalue ParmVar 0x20072450228 'pkt' 'MEMPACKET *'
|-RecordDecl 0x20072450800 <line:249:9, line:256:1> line:249:16 invalid struct mempacket_test_ctx_st definition
| |-FieldDecl 0x20072450968 <line:250:5, <invalid sloc>> col:5 invalid STACK_OF 'int (MEMPACKET)'
| |-FieldDecl 0x200724509d8 <line:251:5, col:18> col:18 referenced epoch 'unsigned int'
| |-FieldDecl 0x20072450a48 <line:252:5, col:18> col:18 referenced currrec 'unsigned int'
| |-FieldDecl 0x20072450ab8 <line:253:5, col:18> col:18 referenced currpkt 'unsigned int'
| |-FieldDecl 0x20072450b28 <line:254:5, col:18> col:18 referenced lastpkt 'unsigned int'
| `-FieldDecl 0x20072450b98 <line:255:5, col:18> col:18 referenced noinject 'unsigned int'
|-TypedefDecl 0x20072450c48 <line:249:1, line:256:3> col:3 referenced MEMPACKET_TEST_CTX 'struct mempacket_test_ctx_st':'struct mempacket_test_ctx_st'
| `-ElaboratedType 0x20072450bf0 'struct mempacket_test_ctx_st' sugar
|   `-RecordType 0x200724508a0 'struct mempacket_test_ctx_st'
|     `-Record 0x20072450800 'mempacket_test_ctx_st'
|-FunctionDecl 0x20072450d68 <line:258:1, col:38> col:12 invalid mempacket_test_new 'int (int *)' static
| `-ParmVarDecl 0x20072450cd0 <col:31, col:36> col:36 invalid bi 'int *'
|-FunctionDecl 0x20072449e90 <line:259:1, col:38> col:12 invalid mempacket_test_free 'int (int *)' static
| `-ParmVarDecl 0x20072450e28 <col:32, col:37> col:37 invalid a 'int *'
|-FunctionDecl 0x2007244a0f8 <line:260:1, col:59> col:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20072449f50 <col:32, col:37> col:37 invalid b 'int *'
| |-ParmVarDecl 0x20072449fd0 <col:40, col:46> col:46 out 'char *'
| `-ParmVarDecl 0x2007244a050 <col:51, col:55> col:55 outl 'int'
|-FunctionDecl 0x2007244a370 <line:261:1, col:64> col:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2007244a1c8 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x2007244a248 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x2007244a2c8 <col:57, col:61> col:61 inl 'int'
|-FunctionDecl 0x2007244a670 <line:262:1, col:69> col:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2007244a440 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x2007244a4c0 <col:41, col:45> col:45 cmd 'int'
| |-ParmVarDecl 0x2007244a540 <col:50, col:55> col:55 num 'long'
| `-ParmVarDecl 0x2007244a5c0 <col:60, col:66> col:66 ptr 'void *'
|-FunctionDecl 0x2007244a8f0 <line:263:1, col:60> col:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2007244a748 <col:32, col:37> col:37 invalid bp 'int *'
| |-ParmVarDecl 0x2007244a7c8 <col:41, col:47> col:47 buf 'char *'
| `-ParmVarDecl 0x2007244a848 <col:52, col:56> col:56 size 'int'
|-FunctionDecl 0x2007244aae0 <line:264:1, col:56> col:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2007244a9c0 <col:32, col:37> col:37 invalid bp 'int *'
| `-ParmVarDecl 0x2007244aa40 <col:41, col:53> col:53 str 'const char *'
|-FunctionDecl 0x2007244ac30 <line:266:1, line:282:1> line:266:19 invalid bio_s_mempacket_test 'const int *(void)'
| `-CompoundStmt 0x20072453170 <line:267:1, line:282:1>
|   `-IfStmt 0x20072453158 <line:268:5, line:280:5>
|     |-OpaqueValueExpr 0x20072453140 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x20072453128 <line:268:40, line:280:5>
|       `-IfStmt 0x20072453110 <line:271:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x200724530f8 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x200724530e8 <.//openssl//file_jk/before\test\ssltestlib.c:279:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x200724530d0 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x200724530b0 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x20072453088 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x20072453048 <col:26> 'int' 0
|-FunctionDecl 0x20072453220 prev 0x2007249d8f8 <.//openssl//file_jk/before\test\ssltestlib.c:284:1, line:287:1> line:284:6 bio_s_mempacket_test_free 'void (void)'
| `-CompoundStmt 0x200724532e0 <line:285:1, line:287:1>
|-FunctionDecl 0x200724533a0 <line:289:1, line:302:1> line:289:12 invalid mempacket_test_new 'int (int *)' static
| |-ParmVarDecl 0x20072453308 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x20072453dd0 <line:290:1, line:302:1>
|   |-DeclStmt 0x20072453748 <line:291:5, col:59>
|   | `-VarDecl 0x200724534e8 <col:5, col:58> col:25 used ctx 'MEMPACKET_TEST_CTX *' cinit
|   |   `-ImplicitCastExpr 0x20072453730 <col:31, col:58> 'MEMPACKET_TEST_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x20072453708 <col:31, col:58> 'int'
|   |       |-ImplicitCastExpr 0x200724536f0 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x20072453640 <col:31> 'int ()' Function 0x20072453578 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x200724536d0 <col:46, col:57> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x200724536b0 <col:52, col:57> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue
|   |           `-UnaryOperator 0x20072453698 <col:53, col:54> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x20072453680 <col:54> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x20072453660 <col:54> 'MEMPACKET_TEST_CTX *' lvalue Var 0x200724534e8 'ctx' 'MEMPACKET_TEST_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x200724538a8 <line:292:5, line:293:16>
|   | |-BinaryOperator 0x20072453850 <line:292:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20072453820 <.//openssl//file_jk/before\test\ssltestlib.c:292:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20072453760 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x200724534e8 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x20072453838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x20072453800 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200724537d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20072453798 <col:26> 'int' 0
|   | `-ReturnStmt 0x20072453898 <.//openssl//file_jk/before\test\ssltestlib.c:293:9, col:16>
|   |   `-IntegerLiteral 0x20072453870 <col:16> 'int' 0
|   |-IfStmt 0x20072453c08 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x20072453bf0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072453bd0 <line:295:28, line:298:5>
|   |   |-CallExpr 0x20072453b58 <line:296:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x20072453b40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20072453b00 <col:9> 'int ()' Function 0x20072450560 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x20072453b80 <col:22> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20072453b20 <col:22> 'MEMPACKET_TEST_CTX *' lvalue Var 0x200724534e8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |   `-ReturnStmt 0x20072453bc0 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x20072453b98 <col:16> 'int' 0
|   `-ReturnStmt 0x20072453dc0 <line:301:5, col:12>
|     `-IntegerLiteral 0x20072453d98 <col:12> 'int' 1
|-FunctionDecl 0x20072453f30 <line:304:1, line:314:1> line:304:12 invalid mempacket_test_free 'int (int *)' static
| |-ParmVarDecl 0x20072453e18 <col:32, col:37> col:37 invalid bio 'int *'
| `-CompoundStmt 0x200724544d0 <line:305:1, line:314:1>
|   |-DeclStmt 0x20072454178 <line:306:5, col:48>
|   | `-VarDecl 0x20072454000 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-CallExpr 0x20072454368 <line:309:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x20072454350 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20072454310 <col:5> 'int ()' Function 0x20072450560 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x20072454390 <col:18> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20072454330 <col:18> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454000 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x200724544c0 <line:313:5, col:12>
|     `-IntegerLiteral 0x20072454498 <col:12> 'int' 1
|-FunctionDecl 0x200724546b8 <line:325:1, line:387:1> line:325:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20072454510 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x20072454590 <col:42, col:48> col:48 used out 'char *'
| |-ParmVarDecl 0x20072454610 <col:53, col:57> col:57 used outl 'int'
| `-CompoundStmt 0x20072458c38 <line:326:1, line:387:1>
|   |-DeclStmt 0x20072454820 <line:327:5, col:48>
|   | `-VarDecl 0x20072454798 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x200724548b0 <line:328:5, col:23>
|   | `-VarDecl 0x20072454848 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-DeclStmt 0x20072454948 <line:329:5, col:23>
|   | `-VarDecl 0x200724548e0 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-DeclStmt 0x200724549e0 <line:330:5, col:12>
|   | `-VarDecl 0x20072454978 <col:5, col:9> col:9 used rem 'int'
|   |-DeclStmt 0x20072454c20 <line:331:5, col:41>
|   | |-VarDecl 0x20072454a10 <col:5, col:18> col:18 used seq 'unsigned int'
|   | |-VarDecl 0x20072454a90 <col:5, col:23> col:23 used offset 'unsigned int'
|   | |-VarDecl 0x20072454b10 <col:5, col:31> col:31 used len 'unsigned int'
|   | `-VarDecl 0x20072454b90 <col:5, col:36> col:36 used epoch 'unsigned int'
|   |-IfStmt 0x200724552d0 <line:336:5, line:340:5>
|   | |-BinaryOperator 0x20072455138 <line:336:9, col:49> 'int' '||'
|   | | |-BinaryOperator 0x20072454ff8 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x20072454fc8 <.//openssl//file_jk/before\test\ssltestlib.c:336:9> 'MEMPACKET *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20072454f08 <col:9> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   | | | `-ImplicitCastExpr 0x20072454fe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | | |   `-ParenExpr 0x20072454fa8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x20072454f80 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x20072454f40 <col:26> 'int' 0
|   | | `-BinaryOperator 0x20072455118 <.//openssl//file_jk/before\test\ssltestlib.c:336:28, col:49> 'int' '!='
|   | |   |-ImplicitCastExpr 0x200724550e8 <col:28, col:37> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x20072455050 <col:28, col:37> 'unsigned int' lvalue ->num 0x200724500f8
|   | |   |   `-ImplicitCastExpr 0x20072455038 <col:28> 'MEMPACKET *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x20072455018 <col:28> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   | |   `-ImplicitCastExpr 0x20072455100 <col:44, col:49> 'unsigned int' <LValueToRValue>
|   | |     `-MemberExpr 0x200724550b8 <col:44, col:49> 'unsigned int' lvalue ->currpkt 0x20072450ab8
|   | |       `-ImplicitCastExpr 0x200724550a0 <col:44> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x20072455080 <col:44> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   | `-CompoundStmt 0x200724552b8 <col:58, line:340:5>
|   |   `-ReturnStmt 0x200724552a8 <line:339:9, col:17>
|   |     `-UnaryOperator 0x20072455290 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20072455268 <col:17> 'int' 1
|   |-UnaryOperator 0x20072455498 <line:342:5, col:17> 'unsigned int' postfix '++'
|   | `-MemberExpr 0x20072455468 <col:5, col:10> 'unsigned int' lvalue ->currpkt 0x20072450ab8
|   |   `-ImplicitCastExpr 0x20072455450 <col:5> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20072455430 <col:5> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-IfStmt 0x20072455660 <line:344:5, line:345:25>
|   | |-BinaryOperator 0x20072455580 <line:344:9, col:25> 'int' '>'
|   | | |-ImplicitCastExpr 0x20072455550 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200724554b0 <col:9> 'int' lvalue ParmVar 0x20072454610 'outl' 'int'
|   | | `-ImplicitCastExpr 0x20072455568 <col:16, col:25> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x20072455520 <col:16, col:25> 'int' lvalue ->len 0x20072450088
|   | |     `-ImplicitCastExpr 0x20072455508 <col:16> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x200724554e8 <col:16> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   | `-BinaryOperator 0x20072455640 <line:345:9, col:25> 'int' '='
|   |   |-DeclRefExpr 0x200724555a0 <col:9> 'int' lvalue ParmVar 0x20072454610 'outl' 'int'
|   |   `-ImplicitCastExpr 0x20072455628 <col:16, col:25> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x200724555f8 <col:16, col:25> 'int' lvalue ->len 0x20072450088
|   |       `-ImplicitCastExpr 0x200724555e0 <col:16> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x200724555c0 <col:16> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   |-IfStmt 0x200724588b0 <line:347:5, line:380:5>
|   | |-BinaryOperator 0x20072455738 <line:347:9, .//openssl//file_jk/before\test/ssltestlib.h:32:41> 'int' '!='
|   | | |-ImplicitCastExpr 0x20072455708 <.//openssl//file_jk/before\test\ssltestlib.c:347:9, col:18> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x200724556b0 <col:9, col:18> 'unsigned int' lvalue ->type 0x20072450168
|   | | |   `-ImplicitCastExpr 0x20072455698 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20072455678 <col:9> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x20072455720 <.//openssl//file_jk/before\test/ssltestlib.h:32:41> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x200724556e0 <col:41> 'int' 2
|   | `-CompoundStmt 0x20072458888 <.//openssl//file_jk/before\test\ssltestlib.c:347:56, line:380:5>
|   |   |-BinaryOperator 0x20072455810 <line:354:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x20072455758 <col:9> 'int' lvalue Var 0x20072454978 'rem' 'int'
|   |   | `-ImplicitCastExpr 0x200724557f8 <col:15, col:24> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x200724557c8 <col:15, col:24> 'int' lvalue ->len 0x20072450088
|   |   |     `-ImplicitCastExpr 0x200724557b0 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x20072455790 <col:15> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   |   |-BinaryOperator 0x200724558e8 <line:355:9, col:24> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x20072455830 <col:9> 'unsigned char *' lvalue Var 0x200724548e0 'rec' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x200724558d0 <col:15, col:24> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x200724558a0 <col:15, col:24> 'unsigned char *' lvalue ->data 0x20072450018
|   |   |     `-ImplicitCastExpr 0x20072455888 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x20072455868 <col:15> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   |   `-WhileStmt 0x20072458870 <line:356:9, line:379:9>
|   |     |-BinaryOperator 0x20072455968 <line:356:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x20072455950 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20072455908 <col:16> 'int' lvalue Var 0x20072454978 'rem' 'int'
|   |     | `-IntegerLiteral 0x20072455928 <col:22> 'int' 0
|   |     `-CompoundStmt 0x20072458818 <col:25, line:379:9>
|   |       |-IfStmt 0x20072455a28 <line:357:13, line:359:13>
|   |       | |-OpaqueValueExpr 0x20072455a10 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x200724559f8 <line:357:47, line:359:13>
|   |       |   `-ReturnStmt 0x200724559e8 <line:358:17, col:25>
|   |       |     `-UnaryOperator 0x200724559d0 <col:24, col:25> 'int' prefix '-'
|   |       |       `-IntegerLiteral 0x200724559a8 <col:25> 'int' 1
|   |       |-BinaryOperator 0x20072455c78 <line:360:13, col:56> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x20072455a40 <col:13> 'unsigned int' lvalue Var 0x20072454b90 'epoch' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x20072455c60 <col:21, col:56> 'unsigned int' <IntegralCast>
|   |       |   `-BinaryOperator 0x20072455c40 <col:21, col:56> 'int' '|'
|   |       |     |-ParenExpr 0x20072455b70 <col:21, col:40> 'int'
|   |       |     | `-BinaryOperator 0x20072455b50 <col:22, col:39> 'int' '<<'
|   |       |     |   |-ImplicitCastExpr 0x20072455b38 <col:22, col:34> 'int' <IntegralCast>
|   |       |     |   | `-ImplicitCastExpr 0x20072455b20 <col:22, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |   |   `-ArraySubscriptExpr 0x20072455ad8 <col:22, col:34> 'unsigned char' lvalue
|   |       |     |   |     |-ImplicitCastExpr 0x20072455ac0 <col:22> 'unsigned char *' <LValueToRValue>
|   |       |     |   |     | `-DeclRefExpr 0x20072455a78 <col:22> 'unsigned char *' lvalue Var 0x200724548e0 'rec' 'unsigned char *'
|   |       |     |   |     `-IntegerLiteral 0x20072455a98 <line:317:25> 'int' 4
|   |       |     |   `-IntegerLiteral 0x20072455af8 <line:360:39> 'int' 8
|   |       |     `-ImplicitCastExpr 0x20072455c28 <col:44, col:56> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x20072455c10 <col:44, col:56> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x20072455bf0 <col:44, col:56> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x20072455bd8 <col:44> 'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x20072455b90 <col:44> 'unsigned char *' lvalue Var 0x200724548e0 'rec' 'unsigned char *'
|   |       |           `-IntegerLiteral 0x20072455bb0 <line:318:25> 'int' 5
|   |       |-IfStmt 0x20072455f18 <line:361:13, line:364:13>
|   |       | |-BinaryOperator 0x20072455d50 <line:361:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x20072455d20 <col:17> 'unsigned int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20072455c98 <col:17> 'unsigned int' lvalue Var 0x20072454b90 'epoch' 'unsigned int'
|   |       | | `-ImplicitCastExpr 0x20072455d38 <col:26, col:31> 'unsigned int' <LValueToRValue>
|   |       | |   `-MemberExpr 0x20072455cf0 <col:26, col:31> 'unsigned int' lvalue ->epoch 0x200724509d8
|   |       | |     `-ImplicitCastExpr 0x20072455cd8 <col:26> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x20072455cb8 <col:26> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       | `-CompoundStmt 0x20072455ef8 <col:38, line:364:13>
|   |       |   |-BinaryOperator 0x20072455e10 <line:362:17, col:30> 'unsigned int' '='
|   |       |   | |-MemberExpr 0x20072455da8 <col:17, col:22> 'unsigned int' lvalue ->epoch 0x200724509d8
|   |       |   | | `-ImplicitCastExpr 0x20072455d90 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x20072455d70 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |   | `-ImplicitCastExpr 0x20072455df8 <col:30> 'unsigned int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x20072455dd8 <col:30> 'unsigned int' lvalue Var 0x20072454b90 'epoch' 'unsigned int'
|   |       |   `-BinaryOperator 0x20072455ed8 <line:363:17, col:32> 'unsigned int' '='
|   |       |     |-MemberExpr 0x20072455e68 <col:17, col:22> 'unsigned int' lvalue ->currrec 0x20072450a48
|   |       |     | `-ImplicitCastExpr 0x20072455e50 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x20072455e30 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |     `-ImplicitCastExpr 0x20072455ec0 <col:32> 'unsigned int' <IntegralCast>
|   |       |       `-IntegerLiteral 0x20072455e98 <col:32> 'int' 0
|   |       |-BinaryOperator 0x20072458028 <line:365:13, col:24> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x20072457f70 <col:13> 'unsigned int' lvalue Var 0x20072454a10 'seq' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x20072458010 <col:19, col:24> 'unsigned int' <LValueToRValue>
|   |       |   `-MemberExpr 0x20072457fe0 <col:19, col:24> 'unsigned int' lvalue ->currrec 0x20072450a48
|   |       |     `-ImplicitCastExpr 0x20072457fc8 <col:19> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x20072457fa8 <col:19> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-BinaryOperator 0x200724580c0 <line:366:13, col:22> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x20072458048 <col:13> 'unsigned int' lvalue Var 0x20072454a90 'offset' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x200724580a8 <col:22> 'unsigned int' <IntegralCast>
|   |       |   `-IntegerLiteral 0x20072458080 <col:22> 'int' 0
|   |       |-DoStmt 0x20072458428 <line:367:13, line:371:29>
|   |       | |-CompoundStmt 0x20072458368 <line:367:16, line:371:13>
|   |       | | |-BinaryOperator 0x20072458280 <line:368:17, col:55> 'unsigned char' '='
|   |       | | | |-ArraySubscriptExpr 0x200724581b0 <col:17, col:45> 'unsigned char' lvalue
|   |       | | | | |-ImplicitCastExpr 0x20072458198 <col:17> 'unsigned char *' <LValueToRValue>
|   |       | | | | | `-DeclRefExpr 0x200724580e0 <col:17> 'unsigned char *' lvalue Var 0x200724548e0 'rec' 'unsigned char *'
|   |       | | | | `-BinaryOperator 0x20072458178 <line:319:25, line:368:39> 'unsigned int' '-'
|   |       | | | |   |-ImplicitCastExpr 0x20072458160 <line:319:25> 'unsigned int' <IntegralCast>
|   |       | | | |   | `-IntegerLiteral 0x20072458100 <col:25> 'int' 10
|   |       | | | |   `-ImplicitCastExpr 0x20072458148 <line:368:39> 'unsigned int' <LValueToRValue>
|   |       | | | |     `-DeclRefExpr 0x20072458128 <col:39> 'unsigned int' lvalue Var 0x20072454a90 'offset' 'unsigned int'
|   |       | | | `-ImplicitCastExpr 0x20072458268 <col:49, col:55> 'unsigned char' <IntegralCast>
|   |       | | |   `-BinaryOperator 0x20072458248 <col:49, col:55> 'unsigned int' '&'
|   |       | | |     |-ImplicitCastExpr 0x20072458218 <col:49> 'unsigned int' <LValueToRValue>
|   |       | | |     | `-DeclRefExpr 0x200724581d0 <col:49> 'unsigned int' lvalue Var 0x20072454a10 'seq' 'unsigned int'
|   |       | | |     `-ImplicitCastExpr 0x20072458230 <col:55> 'unsigned int' <IntegralCast>
|   |       | | |       `-IntegerLiteral 0x200724581f0 <col:55> 'int' 255
|   |       | | |-CompoundAssignOperator 0x20072458300 <line:369:17, col:25> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | | |-DeclRefExpr 0x200724582a0 <col:17> 'unsigned int' lvalue Var 0x20072454a10 'seq' 'unsigned int'
|   |       | | | `-IntegerLiteral 0x200724582c0 <col:25> 'int' 8
|   |       | | `-UnaryOperator 0x20072458350 <line:370:17, col:23> 'unsigned int' postfix '++'
|   |       | |   `-DeclRefExpr 0x20072458330 <col:17> 'unsigned int' lvalue Var 0x20072454a90 'offset' 'unsigned int'
|   |       | `-BinaryOperator 0x20072458408 <line:371:22, col:28> 'int' '>'
|   |       |   |-ImplicitCastExpr 0x200724583d8 <col:22> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20072458390 <col:22> 'unsigned int' lvalue Var 0x20072454a10 'seq' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x200724583f0 <col:28> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x200724583b0 <col:28> 'int' 0
|   |       |-UnaryOperator 0x200724584b0 <line:372:13, col:25> 'unsigned int' postfix '++'
|   |       | `-MemberExpr 0x20072458480 <col:13, col:18> 'unsigned int' lvalue ->currrec 0x20072450a48
|   |       |   `-ImplicitCastExpr 0x20072458468 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x20072458448 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072454798 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-CompoundAssignOperator 0x20072458760 <line:377:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x20072458708 <col:13> 'unsigned char *' lvalue Var 0x200724548e0 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x20072458748 <col:20> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20072458728 <col:20> 'unsigned int' lvalue Var 0x20072454b10 'len' 'unsigned int'
|   |       `-CompoundAssignOperator 0x200724587e8 <line:378:13, col:20> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |         |-DeclRefExpr 0x20072458790 <col:13> 'int' lvalue Var 0x20072454978 'rem' 'int'
|   |         `-ImplicitCastExpr 0x200724587d0 <col:20> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x200724587b0 <col:20> 'unsigned int' lvalue Var 0x20072454b10 'len' 'unsigned int'
|   |-CallExpr 0x20072458a30 <line:382:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x20072458a18 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x200724588c8 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x200724097a8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x20072458a80 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20072458a68 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200724588e8 <col:12> 'char *' lvalue ParmVar 0x20072454590 'out' 'char *'
|   | |-ImplicitCastExpr 0x20072458ab0 <col:17, col:26> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20072458a98 <col:17, col:26> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x20072458958 <col:17, col:26> 'unsigned char *' lvalue ->data 0x20072450018
|   | |     `-ImplicitCastExpr 0x20072458940 <col:17> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x20072458920 <col:17> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x20072458ae0 <col:32> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20072458ac8 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20072458988 <col:32> 'int' lvalue ParmVar 0x20072454610 'outl' 'int'
|   |-CallExpr 0x20072458bb0 <line:384:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x20072458b98 <col:5> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20072458af8 <col:5> 'void (MEMPACKET *)' Function 0x20072450338 'mempacket_free' 'void (MEMPACKET *)'
|   | `-ImplicitCastExpr 0x20072458bd8 <col:20> 'MEMPACKET *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20072458b18 <col:20> 'MEMPACKET *' lvalue Var 0x20072454848 'thispkt' 'MEMPACKET *'
|   `-ReturnStmt 0x20072458c28 <line:386:5, col:12>
|     `-ImplicitCastExpr 0x20072458c10 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20072458bf0 <col:12> 'int' lvalue ParmVar 0x20072454610 'outl' 'int'
|-FunctionDecl 0x20072455fa0 <line:389:1, line:468:1> line:389:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x20072458cc0 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x20072458d40 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x20072458dc0 <col:53, col:57> col:57 used inl 'int'
| |-ParmVarDecl 0x20072458e40 <col:62, col:66> col:66 used pktnum 'int'
| |-ParmVarDecl 0x20072458ec0 <line:390:27, col:31> col:31 used type 'int'
| `-CompoundStmt 0x20072451808 <line:391:1, line:468:1>
|   |-DeclStmt 0x20072456118 <line:392:5, col:48>
|   | `-VarDecl 0x20072456090 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x200724562b8 <line:393:5, col:43>
|   | |-VarDecl 0x20072456140 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   | |-VarDecl 0x200724561b8 <col:5, col:26> col:26 used looppkt 'MEMPACKET *'
|   | `-VarDecl 0x20072456230 <col:5, col:36> col:36 used nextpkt 'MEMPACKET *'
|   |-DeclStmt 0x20072456350 <line:394:5, col:10>
|   | `-VarDecl 0x200724562e8 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x200724564c8 <line:396:5, line:397:17>
|   | |-BinaryOperator 0x20072456458 <line:396:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20072456428 <.//openssl//file_jk/before\test\ssltestlib.c:396:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20072456368 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072456090 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x20072456440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x20072456408 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200724563e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x200724563a0 <col:26> 'int' 0
|   | `-ReturnStmt 0x200724564b8 <.//openssl//file_jk/before\test\ssltestlib.c:397:9, col:17>
|   |   `-UnaryOperator 0x200724564a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20072456478 <col:17> 'int' 1
|   |-IfStmt 0x20072456758 <line:400:5, line:405:5> has_else
|   | |-BinaryOperator 0x20072456558 <line:400:9, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x20072456540 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200724564e0 <col:9> 'int' lvalue ParmVar 0x20072458e40 'pktnum' 'int'
|   | | `-IntegerLiteral 0x20072456518 <col:19> 'int' 0
|   | |-CompoundStmt 0x20072456660 <col:22, line:403:5>
|   | | `-IfStmt 0x20072456648 <line:401:9, line:402:21>
|   | |   |-ImplicitCastExpr 0x200724565e0 <line:401:13, col:18> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x200724565b0 <col:13, col:18> 'unsigned int' lvalue ->noinject 0x20072450b98
|   | |   |   `-ImplicitCastExpr 0x20072456598 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x20072456578 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072456090 'ctx' 'MEMPACKET_TEST_CTX *'
|   | |   `-ReturnStmt 0x20072456638 <line:402:13, col:21>
|   | |     `-UnaryOperator 0x20072456620 <col:20, col:21> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x200724565f8 <col:21> 'int' 1
|   | `-CompoundStmt 0x20072456740 <line:403:12, line:405:5>
|   |   `-BinaryOperator 0x20072456720 <line:404:9, col:25> 'unsigned int' '='
|   |     |-MemberExpr 0x200724566b0 <col:9, col:14> 'unsigned int' lvalue ->noinject 0x20072450b98
|   |     | `-ImplicitCastExpr 0x20072456698 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x20072456678 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072456090 'ctx' 'MEMPACKET_TEST_CTX *'
|   |     `-ImplicitCastExpr 0x20072456708 <col:25> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x200724566e0 <col:25> 'int' 1
|   |-BinaryOperator 0x20072456950 <line:407:5, col:47> 'MEMPACKET *' '='
|   | |-DeclRefExpr 0x20072456780 <col:5> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x20072456938 <col:15, col:47> 'MEMPACKET *' <IntegralToPointer>
|   |   `-CallExpr 0x20072456910 <col:15, col:47> 'int'
|   |     |-ImplicitCastExpr 0x200724568f8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x200724568a8 <col:15> 'int ()' Function 0x200724567e0 'OPENSSL_malloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x200724568d8 <col:30, col:46> 'unsigned long long' sizeof 'MEMPACKET':'struct mempacket_st'
|   |-IfStmt 0x20072456ab8 <line:408:5, line:409:17>
|   | |-BinaryOperator 0x20072456a48 <line:408:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20072456a18 <.//openssl//file_jk/before\test\ssltestlib.c:408:9> 'MEMPACKET *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20072456970 <col:9> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x20072456a30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | |   `-ParenExpr 0x200724569f8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200724569d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20072456990 <col:26> 'int' 0
|   | `-ReturnStmt 0x20072456aa8 <.//openssl//file_jk/before\test\ssltestlib.c:409:9, col:17>
|   |   `-UnaryOperator 0x20072456a90 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20072456a68 <col:17> 'int' 1
|   |-BinaryOperator 0x20072456c00 <line:411:5, col:39> 'unsigned char *' '='
|   | |-MemberExpr 0x20072456b08 <col:5, col:14> 'unsigned char *' lvalue ->data 0x20072450018
|   | | `-ImplicitCastExpr 0x20072456af0 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20072456ad0 <col:5> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x20072456be8 <col:21, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x20072456ba8 <col:21, col:39> 'int'
|   |     |-ImplicitCastExpr 0x20072456b90 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x20072456b38 <col:21> 'int ()' Function 0x200724567e0 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x20072456bd0 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20072456b58 <col:36> 'int' lvalue ParmVar 0x20072458dc0 'inl' 'int'
|   |-IfStmt 0x20072456e68 <line:412:5, line:415:5>
|   | |-BinaryOperator 0x20072456d40 <line:412:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20072456d10 <.//openssl//file_jk/before\test\ssltestlib.c:412:9, col:18> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x20072456c58 <col:9, col:18> 'unsigned char *' lvalue ->data 0x20072450018
|   | | |   `-ImplicitCastExpr 0x20072456c40 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20072456c20 <col:9> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x20072456d28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x20072456cf0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20072456cc8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20072456c88 <col:26> 'int' 0
|   | `-CompoundStmt 0x20072456e48 <.//openssl//file_jk/before\test\ssltestlib.c:412:32, line:415:5>
|   |   |-CallExpr 0x20072456db8 <line:413:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x20072456da0 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20072456d60 <col:9> 'void (MEMPACKET *)' Function 0x20072450338 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x20072456de0 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20072456d80 <col:24> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x20072456e38 <line:414:9, col:17>
|   |     `-UnaryOperator 0x20072456e20 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20072456df8 <col:17> 'int' 1
|   |-CallExpr 0x20072456fe0 <line:417:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x20072456fc8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20072456e80 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x200724097a8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x20072457030 <col:12, col:21> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20072457018 <col:12, col:21> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x20072456ed8 <col:12, col:21> 'unsigned char *' lvalue ->data 0x20072450018
|   | |     `-ImplicitCastExpr 0x20072456ec0 <col:12> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x20072456ea0 <col:12> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | |-ImplicitCastExpr 0x20072457060 <col:27> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x20072457048 <col:27> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20072456f08 <col:27> 'const char *' lvalue ParmVar 0x20072458d40 'in' 'const char *'
|   | `-ImplicitCastExpr 0x20072457090 <col:31> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20072457078 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20072456f60 <col:31> 'int' lvalue ParmVar 0x20072458dc0 'inl' 'int'
|   |-BinaryOperator 0x20072457148 <line:418:5, col:20> 'int' '='
|   | |-MemberExpr 0x200724570e0 <col:5, col:14> 'int' lvalue ->len 0x20072450088
|   | | `-ImplicitCastExpr 0x200724570c8 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200724570a8 <col:5> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x20072457130 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20072457110 <col:20> 'int' lvalue ParmVar 0x20072458dc0 'inl' 'int'
|   |-BinaryOperator 0x20072457398 <line:419:5, col:64> 'unsigned int' '='
|   | |-MemberExpr 0x200724571a0 <col:5, col:14> 'unsigned int' lvalue ->num 0x200724500f8
|   | | `-ImplicitCastExpr 0x20072457188 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20072457168 <col:5> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | `-ConditionalOperator 0x20072457368 <col:20, col:64> 'unsigned int'
|   |   |-ParenExpr 0x20072457250 <col:20, col:32> 'int'
|   |   | `-BinaryOperator 0x20072457230 <col:21, col:31> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x20072457218 <col:21> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x200724571d0 <col:21> 'int' lvalue ParmVar 0x20072458e40 'pktnum' 'int'
|   |   |   `-IntegerLiteral 0x200724571f0 <col:31> 'int' 0
|   |   |-CStyleCastExpr 0x200724572c0 <col:36, col:50> 'unsigned int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x200724572a8 <col:50> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x20072457270 <col:50> 'int' lvalue ParmVar 0x20072458e40 'pktnum' 'int'
|   |   `-ImplicitCastExpr 0x20072457350 <col:59, col:64> 'unsigned int' <LValueToRValue>
|   |     `-MemberExpr 0x20072457320 <col:59, col:64> 'unsigned int' lvalue ->lastpkt 0x20072450b28
|   |       `-ImplicitCastExpr 0x20072457308 <col:59> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x200724572e8 <col:59> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072456090 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-BinaryOperator 0x20072457488 <line:420:5, col:21> 'unsigned int' '='
|   | |-MemberExpr 0x200724573f0 <col:5, col:14> 'unsigned int' lvalue ->type 0x20072450168
|   | | `-ImplicitCastExpr 0x200724573d8 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200724573b8 <col:5> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x20072457470 <col:21> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20072457458 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20072457420 <col:21> 'int' lvalue ParmVar 0x20072458ec0 'type' 'int'
|   |-IfStmt 0x20072451690 <line:459:5, line:462:5>
|   | |-OpaqueValueExpr 0x20072451678 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072451658 <line:459:49, line:462:5>
|   |   |-CallExpr 0x200724515c8 <line:460:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x200724515b0 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20072451570 <col:9> 'void (MEMPACKET *)' Function 0x20072450338 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x200724515f0 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20072451590 <col:24> 'MEMPACKET *' lvalue Var 0x20072456140 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x20072451648 <line:461:9, col:17>
|   |     `-UnaryOperator 0x20072451630 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20072451608 <col:17> 'int' 1
|   |-IfStmt 0x200724517a8 <line:464:5, line:465:21>
|   | |-BinaryOperator 0x20072451708 <line:464:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x200724516f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200724516a8 <col:9> 'int' lvalue ParmVar 0x20072458e40 'pktnum' 'int'
|   | | `-IntegerLiteral 0x200724516c8 <col:18> 'int' 0
|   | `-UnaryOperator 0x20072451790 <line:465:9, col:21> 'unsigned int' postfix '++'
|   |   `-MemberExpr 0x20072451760 <col:9, col:14> 'unsigned int' lvalue ->lastpkt 0x20072450b28
|   |     `-ImplicitCastExpr 0x20072451748 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x20072451728 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x20072456090 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x200724517f8 <line:467:5, col:12>
|     `-ImplicitCastExpr 0x200724517e0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x200724517c0 <col:12> 'int' lvalue ParmVar 0x20072458dc0 'inl' 'int'
|-FunctionDecl 0x20072451a58 <line:470:1, line:473:1> line:470:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x200724518b0 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x20072451930 <col:43, col:55> col:55 used in 'const char *'
| |-ParmVarDecl 0x200724519b0 <col:59, col:63> col:63 used inl 'int'
| `-CompoundStmt 0x20072451c00 <line:471:1, line:473:1>
|-FunctionDecl 0x20072451e58 <line:475:1, line:513:1> line:475:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x20072451c28 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x20072451ca8 <col:43, col:47> col:47 used cmd 'int'
| |-ParmVarDecl 0x20072451d28 <col:52, col:57> col:57 used num 'long'
| |-ParmVarDecl 0x20072451da8 <col:62, col:68> col:68 ptr 'void *'
| `-CompoundStmt 0x2007245dcb0 <line:476:1, line:513:1>
|   |-DeclStmt 0x2007245d0b8 <line:477:5, col:17>
|   | `-VarDecl 0x2007245d010 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2007245d0a0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2007245d078 <col:16> 'int' 1
|   |-DeclStmt 0x2007245d168 <line:478:5, col:48>
|   | `-VarDecl 0x2007245d0e0 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x2007245d1f8 <line:479:5, col:23>
|   | `-VarDecl 0x2007245d190 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-SwitchStmt 0x2007245d260 <line:481:5, line:511:5>
|   | |-ImplicitCastExpr 0x2007245d248 <line:481:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2007245d210 <col:13> 'int' lvalue ParmVar 0x20072451ca8 'cmd' 'int'
|   | `-CompoundStmt 0x2007245dc00 <col:18, line:511:5>
|   |   |-BreakStmt 0x2007245d440 <line:484:9>
|   |   |-BreakStmt 0x2007245d578 <line:487:9>
|   |   |-BreakStmt 0x2007245d720 <line:490:9>
|   |   |-BinaryOperator 0x2007245d770 <line:492:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2007245d728 <col:9> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|   |   | `-IntegerLiteral 0x2007245d748 <col:15> 'long' 0
|   |   |-BreakStmt 0x2007245d790 <line:493:9>
|   |   |-IfStmt 0x2007245daa0 <line:496:9, line:499:28> has_else
|   |   | |-BinaryOperator 0x2007245d928 <line:496:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2007245d8f8 <.//openssl//file_jk/before\test\ssltestlib.c:496:13> 'MEMPACKET *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2007245d850 <col:13> 'MEMPACKET *' lvalue Var 0x2007245d190 'thispkt' 'MEMPACKET *'
|   |   | | `-ImplicitCastExpr 0x2007245d910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   |   | |   `-ParenExpr 0x2007245d8d8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x2007245d8b0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x2007245d870 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x2007245d9a8 <.//openssl//file_jk/before\test\ssltestlib.c:497:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2007245d948 <col:13> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2007245d990 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2007245d968 <col:19> 'int' 0
|   |   | `-BinaryOperator 0x2007245da80 <line:499:13, col:28> 'long' '='
|   |   |   |-DeclRefExpr 0x2007245d9c8 <col:13> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2007245da68 <col:19, col:28> 'long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2007245da50 <col:19, col:28> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x2007245da20 <col:19, col:28> 'int' lvalue ->len 0x20072450088
|   |   |         `-ImplicitCastExpr 0x2007245da08 <col:19> 'MEMPACKET *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2007245d9e8 <col:19> 'MEMPACKET *' lvalue Var 0x2007245d190 'thispkt' 'MEMPACKET *'
|   |   |-BreakStmt 0x2007245dac8 <line:500:9>
|   |   |-BinaryOperator 0x2007245db30 <line:502:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2007245dad0 <col:9> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2007245db18 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2007245daf0 <col:15> 'int' 1
|   |   |-BreakStmt 0x2007245db50 <line:503:9>
|   |   |-DefaultStmt 0x2007245dbd8 <line:508:5, line:509:15>
|   |   | `-BinaryOperator 0x2007245dbb8 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x2007245db58 <col:9> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2007245dba0 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2007245db78 <col:15> 'int' 0
|   |   `-BreakStmt 0x2007245dbf8 <line:510:9>
|   `-ReturnStmt 0x2007245dca0 <line:512:5, col:12>
|     `-ImplicitCastExpr 0x2007245dc88 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2007245dc68 <col:12> 'long' lvalue Var 0x2007245d010 'ret' 'long'
|-FunctionDecl 0x2007245dea8 <line:515:1, line:519:1> line:515:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2007245dd00 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x2007245dd80 <col:42, col:48> col:48 buf 'char *'
| |-ParmVarDecl 0x2007245de00 <col:53, col:57> col:57 size 'int'
| `-CompoundStmt 0x2007245eff0 <line:516:1, line:519:1>
|   `-ReturnStmt 0x2007245efe0 <line:518:5, col:13>
|     `-UnaryOperator 0x2007245dfa0 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x2007245df78 <col:13> 'int' 1
|-FunctionDecl 0x2007245f170 <line:521:1, line:524:1> line:521:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2007245f050 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x2007245f0d0 <col:42, col:54> col:54 used str 'const char *'
| `-CompoundStmt 0x2007245f320 <line:522:1, line:524:1>
|-FunctionDecl 0x2007245f7a8 <line:526:1, line:593:1> line:526:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x2007245f348 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x2007245f3c8 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x2007245f448 <line:527:25, col:29> col:29 used min_proto_version 'int'
| |-ParmVarDecl 0x2007245f4c8 <col:48, col:52> col:52 used max_proto_version 'int'
| |-ParmVarDecl 0x2007245f550 <line:528:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x2007245f5d8 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x2007245f658 <col:57, col:63> col:63 used certfile 'char *'
| |-ParmVarDecl 0x2007245f6d8 <line:529:25, col:31> col:31 used privkeyfile 'char *'
| `-CompoundStmt 0x20072460668 <line:530:1, line:593:1>
|   |-IfStmt 0x2007245fe80 <line:537:5, line:540:5>
|   | |-OpaqueValueExpr 0x2007245fe68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2007245fe48 <line:537:67, line:540:5>
|   |   |-CallExpr 0x2007245fd88 <line:538:9, col:44> 'int'
|   |   | |-ImplicitCastExpr 0x2007245fd70 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007245fd00 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007245fdc8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007245fdb0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007245fd20 <col:16> 'char [26]' lvalue "Failed to create SSL_CTX\n"
|   |   `-GotoStmt 0x2007245fe30 <line:539:9, col:14> 'err' 0x2007245fde0
|   |-IfStmt 0x2007245c238 <line:542:5, line:546:5>
|   | |-OpaqueValueExpr 0x2007245c220 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2007245c200 <line:543:74, line:546:5>
|   |   |-CallExpr 0x2007245c190 <line:544:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x2007245c178 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007245c0b8 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007245c1d0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007245c1b8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007245c118 <col:16> 'char [44]' lvalue "Unable to set server min protocol versions\n"
|   |   `-GotoStmt 0x2007245c1e8 <line:545:9, col:14> 'err' 0x2007245fde0
|   |-IfStmt 0x2007245c558 <line:547:5, line:551:5>
|   | |-OpaqueValueExpr 0x2007245c540 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2007245c520 <line:548:74, line:551:5>
|   |   |-CallExpr 0x2007245c4b0 <line:549:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x2007245c498 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007245c418 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007245c4f0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007245c4d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007245c438 <col:16> 'char [44]' lvalue "Unable to set server max protocol versions\n"
|   |   `-GotoStmt 0x2007245c508 <line:550:9, col:14> 'err' 0x2007245fde0
|   |-IfStmt 0x2007245ca60 <line:553:5, line:564:5>
|   | |-OpaqueValueExpr 0x2007245ca48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2007245ca28 <line:553:28, line:564:5>
|   |   |-IfStmt 0x2007245c7f8 <line:554:9, line:558:9>
|   |   | |-OpaqueValueExpr 0x2007245c7e0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2007245c7c0 <line:555:78, line:558:9>
|   |   |   |-CallExpr 0x2007245c750 <line:556:13, col:66> 'int'
|   |   |   | |-ImplicitCastExpr 0x2007245c738 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2007245c6b8 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2007245c790 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2007245c778 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2007245c6d8 <col:20> 'char [44]' lvalue "Unable to set client max protocol versions\n"
|   |   |   `-GotoStmt 0x2007245c7a8 <line:557:13, col:18> 'err' 0x2007245fde0
|   |   `-IfStmt 0x2007245ca10 <line:559:9, line:563:9>
|   |     |-OpaqueValueExpr 0x2007245c9f8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2007245c9d8 <line:560:78, line:563:9>
|   |       |-CallExpr 0x2007245c968 <line:561:13, col:66> 'int'
|   |       | |-ImplicitCastExpr 0x2007245c950 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2007245c8d0 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x2007245c9a8 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x2007245c990 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x2007245c8f0 <col:20> 'char [44]' lvalue "Unable to set client min protocol versions\n"
|   |       `-GotoStmt 0x2007245c9c0 <line:562:13, col:18> 'err' 0x2007245fde0
|   |-IfStmt 0x2007245cd60 <line:566:5, line:570:5>
|   | |-OpaqueValueExpr 0x2007245cd48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2007245cd28 <line:567:62, line:570:5>
|   |   |-CallExpr 0x2007245ccb8 <line:568:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x2007245cca0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2007245cbe8 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2007245ccf8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2007245cce0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2007245cc48 <col:16> 'char [35]' lvalue "Failed to load server certificate\n"
|   |   `-GotoStmt 0x2007245cd10 <line:569:9, col:14> 'err' 0x2007245fde0
|   |-IfStmt 0x20072460050 <line:571:5, line:574:5>
|   | |-OpaqueValueExpr 0x20072460038 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072460020 <line:572:61, line:574:5>
|   |   `-CallExpr 0x2007245cf78 <line:573:9, col:53> 'int'
|   |     |-ImplicitCastExpr 0x2007245cf60 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2007245cee8 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x20072460008 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x2007245fff0 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x2007245cf08 <col:16> 'char [35]' lvalue "Failed to load server private key\n"
|   |-IfStmt 0x200724602d0 <line:575:5, line:578:5>
|   | |-OpaqueValueExpr 0x200724602b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072460298 <line:575:52, line:578:5>
|   |   |-CallExpr 0x20072460228 <line:576:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x20072460210 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x200724601a0 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x20072460268 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x20072460250 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x200724601c0 <col:16> 'char [29]' lvalue "Failed to check private key\n"
|   |   `-GotoStmt 0x20072460280 <line:577:9, col:14> 'err' 0x2007245fde0
|   |-ReturnStmt 0x200724604d0 <line:588:5, col:12>
|   | `-IntegerLiteral 0x200724604a8 <col:12> 'int' 1
|   |-LabelStmt 0x200724605f8 <line:589:2, col:5> 'err'
|   | `-NullStmt 0x200724605f0 <col:5>
|   `-ReturnStmt 0x20072460658 <line:592:5, col:12>
|     `-IntegerLiteral 0x20072460630 <col:12> 'int' 0
|-FunctionDecl 0x20072460a30 <line:600:1, line:670:1> line:600:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x200724606e0 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x20072460760 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x200724607e8 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x20072460870 <line:601:27, col:33> col:33 invalid cssl 'int **'
| |-ParmVarDecl 0x200724608f0 <col:39, col:44> col:44 invalid s_to_c_fbio 'int *'
| |-ParmVarDecl 0x20072460970 <col:57, col:62> col:62 invalid c_to_s_fbio 'int *'
| `-CompoundStmt 0x200724615b0 <line:602:1, line:670:1>
|   |-IfStmt 0x20072459090 <line:615:5, line:618:5>
|   | |-OpaqueValueExpr 0x20072459078 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072459058 <line:615:49, line:618:5>
|   |   |-CallExpr 0x20072458f98 <line:616:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x20072458f80 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20072460f78 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x20072458fd8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x20072458fc0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x20072460f98 <col:16> 'char [29]' lvalue "Failed to create SSL object\n"
|   |   `-GotoStmt 0x20072459040 <line:617:9, col:14> 'error' 0x20072458ff0
|   |-IfStmt 0x20072459580 <line:620:5, line:626:5> has_else
|   | |-OpaqueValueExpr 0x20072459568 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x200724592e8 <line:620:33, line:623:5>
|   | `-CompoundStmt 0x20072459558 <col:12, line:626:5>
|   |-IfStmt 0x200724597e8 <line:627:5, line:630:5>
|   | |-OpaqueValueExpr 0x200724597d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200724597b0 <line:627:51, line:630:5>
|   |   |-CallExpr 0x20072459740 <line:628:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x20072459728 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x200724596b8 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x20072459780 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x20072459768 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x200724596d8 <col:16> 'char [27]' lvalue "Failed to create mem BIOs\n"
|   |   `-GotoStmt 0x20072459798 <line:629:9, col:14> 'error' 0x20072458ff0
|   |-IfStmt 0x20072459cb8 <line:636:5, line:639:5>
|   | |-OpaqueValueExpr 0x20072459ca0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20072459c80 <line:636:51, line:639:5>
|   |   |-CallExpr 0x20072459c10 <line:637:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x20072459bf8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20072459b50 <col:9> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x20072459c50 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x20072459c38 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x20072459ba8 <col:16> 'char [31]' lvalue "Failed to create chained BIOs\n"
|   |   `-GotoStmt 0x20072459c68 <line:638:9, col:14> 'error' 0x20072458ff0
|   |-ReturnStmt 0x200724612a8 <line:659:5, col:12>
|   | `-IntegerLiteral 0x20072461280 <col:12> 'int' 1
|   |-LabelStmt 0x200724613d0 <line:661:2, col:7> 'error'
|   | `-NullStmt 0x200724613c8 <col:7>
|   `-ReturnStmt 0x200724615a0 <line:669:5, col:12>
|     `-IntegerLiteral 0x20072461578 <col:12> 'int' 0
`-FunctionDecl 0x20072461730 <line:672:1, line:710:1> line:672:5 invalid create_ssl_connection 'int (int *, int *)'
  |-ParmVarDecl 0x20072461610 <col:27, col:32> col:32 invalid serverssl 'int *'
  |-ParmVarDecl 0x20072461690 <col:43, col:48> col:48 invalid clientssl 'int *'
  `-CompoundStmt 0x2007245af18 <line:673:1, line:710:1>
    |-DeclStmt 0x20072461ac8 <line:674:5, col:48>
    | |-VarDecl 0x20072461810 <col:5, col:17> col:9 used retc 'int' cinit
    | | `-UnaryOperator 0x200724618a0 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x20072461878 <col:17> 'int' 1
    | |-VarDecl 0x200724618d0 <col:5, col:28> col:20 used rets 'int' cinit
    | | `-UnaryOperator 0x20072461960 <col:27, col:28> 'int' prefix '-'
    | |   `-IntegerLiteral 0x20072461938 <col:28> 'int' 1
    | |-VarDecl 0x20072461990 <col:5, col:31> col:31 used err 'int'
    | `-VarDecl 0x20072461a10 <col:5, col:47> col:36 used abortctr 'int' cinit
    |   `-IntegerLiteral 0x20072461a78 <col:47> 'int' 0
    |-DeclStmt 0x20072461c48 <line:675:5, col:37>
    | |-VarDecl 0x20072461af8 <col:5, col:21> col:9 used clienterr 'int' cinit
    | | `-IntegerLiteral 0x20072461b60 <col:21> 'int' 0
    | `-VarDecl 0x20072461ba0 <col:5, col:36> col:24 used servererr 'int' cinit
    |   `-IntegerLiteral 0x20072461c08 <col:36> 'int' 0
    |-DoStmt 0x2007245aec0 <line:677:5, line:707:35>
    | |-CompoundStmt 0x2007245ad70 <line:677:8, line:707:5>
    | | |-IfStmt 0x2007245a3b8 <line:685:9, line:688:9>
    | | | |-OpaqueValueExpr 0x2007245a3a0 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x2007245a380 <line:685:68, line:688:9>
    | | |   |-CallExpr 0x2007245a280 <line:686:13, col:62> 'int'
    | | |   | |-ImplicitCastExpr 0x2007245a268 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x2007245a1b8 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x2007245a2d0 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x2007245a2b8 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x2007245a1d8 <col:20> 'char [29]' lvalue "SSL_connect() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x2007245a2e8 <col:53> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x2007245a210 <col:53> 'int' lvalue Var 0x20072461810 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x2007245a300 <col:59> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x2007245a230 <col:59> 'int' lvalue Var 0x20072461990 'err' 'int'
    | | |   `-BinaryOperator 0x2007245a360 <line:687:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x2007245a318 <col:13> 'int' lvalue Var 0x20072461af8 'clienterr' 'int'
    | | |     `-IntegerLiteral 0x2007245a338 <col:25> 'int' 1
    | | |-IfStmt 0x2007245aa60 <line:697:9, line:700:9>
    | | | |-OpaqueValueExpr 0x2007245aa48 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x2007245aa28 <line:697:68, line:700:9>
    | | |   |-CallExpr 0x2007245a928 <line:698:13, col:61> 'int'
    | | |   | |-ImplicitCastExpr 0x2007245a910 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x2007245a860 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x2007245a978 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x2007245a960 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x2007245a880 <col:20> 'char [28]' lvalue "SSL_accept() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x2007245a990 <col:52> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x2007245a8b8 <col:52> 'int' lvalue Var 0x20072461810 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x2007245a9a8 <col:58> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x2007245a8d8 <col:58> 'int' lvalue Var 0x20072461990 'err' 'int'
    | | |   `-BinaryOperator 0x2007245aa08 <line:699:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x2007245a9c0 <col:13> 'int' lvalue Var 0x20072461ba0 'servererr' 'int'
    | | |     `-IntegerLiteral 0x2007245a9e0 <col:25> 'int' 1
    | | |-IfStmt 0x2007245ab40 <line:701:9, line:702:20>
    | | | |-BinaryOperator 0x2007245aae8 <line:701:13, col:26> 'int' '&&'
    | | | | |-ImplicitCastExpr 0x2007245aab8 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x2007245aa78 <col:13> 'int' lvalue Var 0x20072461af8 'clienterr' 'int'
    | | | | `-ImplicitCastExpr 0x2007245aad0 <col:26> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2007245aa98 <col:26> 'int' lvalue Var 0x20072461ba0 'servererr' 'int'
    | | | `-ReturnStmt 0x2007245ab30 <line:702:13, col:20>
    | | |   `-IntegerLiteral 0x2007245ab08 <col:20> 'int' 0
    | | `-IfStmt 0x2007245ad58 <line:703:9, line:706:9>
    | |   |-BinaryOperator 0x2007245abd0 <line:703:13, line:595:21> 'int' '=='
    | |   | |-UnaryOperator 0x2007245ab90 <line:703:13, col:15> 'int' prefix '++'
    | |   | | `-DeclRefExpr 0x2007245ab58 <col:15> 'int' lvalue Var 0x20072461a10 'abortctr' 'int'
    | |   | `-IntegerLiteral 0x2007245aba8 <line:595:21> 'int' 100000
    | |   `-CompoundStmt 0x2007245ad38 <line:703:37, line:706:9>
    | |     |-CallExpr 0x2007245aca8 <line:704:13, col:40> 'int'
    | |     | |-ImplicitCastExpr 0x2007245ac90 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x2007245abf0 <col:13> 'int (const char *, ...)' Function 0x2007249e658 'printf' 'int (const char *, ...)'
    | |     | `-ImplicitCastExpr 0x2007245ace8 <col:20> 'const char *' <NoOp>
    | |     |   `-ImplicitCastExpr 0x2007245acd0 <col:20> 'char *' <ArrayToPointerDecay>
    | |     |     `-StringLiteral 0x2007245ac48 <col:20> 'char [18]' lvalue "No progress made\n"
    | |     `-ReturnStmt 0x2007245ad28 <line:705:13, col:20>
    | |       `-IntegerLiteral 0x2007245ad00 <col:20> 'int' 0
    | `-BinaryOperator 0x2007245aea0 <line:707:14, col:34> 'int' '||'
    |   |-BinaryOperator 0x2007245ae00 <col:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x2007245ade8 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x2007245ada0 <col:14> 'int' lvalue Var 0x20072461810 'retc' 'int'
    |   | `-IntegerLiteral 0x2007245adc0 <col:21> 'int' 0
    |   `-BinaryOperator 0x2007245ae80 <col:26, col:34> 'int' '<='
    |     |-ImplicitCastExpr 0x2007245ae68 <col:26> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x2007245ae20 <col:26> 'int' lvalue Var 0x200724618d0 'rets' 'int'
    |     `-IntegerLiteral 0x2007245ae40 <col:34> 'int' 0
    `-ReturnStmt 0x2007245af08 <line:709:5, col:12>
      `-IntegerLiteral 0x2007245aee0 <col:12> 'int' 1
