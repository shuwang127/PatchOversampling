TranslationUnitDecl 0x18061c02718 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x18061c02fb0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x18061c02cb0 '__int128'
|-TypedefDecl 0x18061c03020 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x18061c02cd0 'unsigned __int128'
|-TypedefDecl 0x18061c03358 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x18061c03110 'struct __NSConstantString_tag'
|   `-Record 0x18061c03078 '__NSConstantString_tag'
|-TypedefDecl 0x18061c033c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x18061c028f0 'unsigned long long'
|-TypedefDecl 0x18061c03460 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x18061c03420 'char *'
|   `-BuiltinType 0x18061c027b0 'char'
|-TypedefDecl 0x18061c034d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x18061c03420 'char *'
|   `-BuiltinType 0x18061c027b0 'char'
|-TypedefDecl 0x18061c03590 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x18061c028f0 'unsigned long long'
|-TypedefDecl 0x18061c03600 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x18061c03420 'char *'
|   `-BuiltinType 0x18061c027b0 'char'
|-FunctionDecl 0x1806377b410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1806377b4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1806377b520 <col:21> Implicit
|-FunctionDecl 0x1806377b578 prev 0x1806377b410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1806377b2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1806377b668 <col:21> Inherited Implicit
|-TypedefDecl 0x1806377b6a8 prev 0x18061c033c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x18061c028f0 'unsigned long long'
|-TypedefDecl 0x1806377b750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1806377b720 'size_t' sugar
|   |-Typedef 0x1806377b6a8 'size_t'
|   `-BuiltinType 0x18061c028f0 'unsigned long long'
|-TypedefDecl 0x1806377b7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x18061c02850 'long long'
|-TypedefDecl 0x1806377b830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x18061c02850 'long long'
|-TypedefDecl 0x1806377b8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x18061c02890 'unsigned short'
|-TypedefDecl 0x1806377b910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x18061c02890 'unsigned short'
|-TypedefDecl 0x1806377b980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x18061c02890 'unsigned short'
|-TypedefDecl 0x1806377b9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x18061c02810 'int'
|-TypedefDecl 0x1806377ba60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x18061c02830 'long'
|-TypedefDecl 0x1806377bad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x18061c02850 'long long'
|-TypedefDecl 0x1806377bb60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1806377bb30 '__time64_t' sugar
|   |-Typedef 0x1806377bad0 '__time64_t'
|   `-BuiltinType 0x18061c02850 'long long'
|-FunctionDecl 0x1806377bcd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1806377bef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x180637b1cd0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1806377c038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1806377c0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1806377c128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1806377c1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x180637b1a70 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x180637b1db0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x180637b1e70 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x180637b1fe0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x180637b1f90 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x180637b1f30 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x180637b1e50 'struct threadlocaleinfostruct'
|       `-Record 0x180637bfb50 'threadlocaleinfostruct'
|-TypedefDecl 0x180637b20f0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x180637b20a0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x180637b2040 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x180637b1f10 'struct threadmbcinfostruct'
|       `-Record 0x180637b1e70 'threadmbcinfostruct'
|-RecordDecl 0x180637b2148 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x180637b2200 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x180637b22c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x180637b2350 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x180637b23e0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x180637b2498 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x180637b2440 'struct localeinfo_struct' sugar
|   `-RecordType 0x180637b22a0 'struct localeinfo_struct'
|     `-Record 0x180637b2200 'localeinfo_struct'
|-TypedefDecl 0x180637b2570 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x180637b2520 'struct localeinfo_struct *'
|   `-ElaboratedType 0x180637b2440 'struct localeinfo_struct' sugar
|     `-RecordType 0x180637b22a0 'struct localeinfo_struct'
|       `-Record 0x180637b2200 'localeinfo_struct'
|-RecordDecl 0x180637b25e8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x180637b26a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x180637b2718 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x180637b27d8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x180637b2870 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x180637b28e0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x180637b2998 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x180637b2940 'struct localerefcount' sugar
|   `-RecordType 0x180637b2680 'struct localerefcount'
|     `-Record 0x180637b25e8 'localerefcount'
|-RecordDecl 0x180637bfb50 prev 0x180637b1db0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x180637bfbd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x180637bfc48 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x180637bfcb8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x180637bfd28 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x180637bfd98 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x180637bff58 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x180637bffc8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x180637c0038 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x180637c00a8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x180637c0118 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x180637c0188 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x180637c01e0 parent 0x18061c02718 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x180637c0370 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x180637c03e0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x180637c0450 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x180637c04c0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x180637c0560 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x180637c05d0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x180637c06e0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x180637c0818 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x180637c08c8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x180637c0870 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x180637b1e50 'struct threadlocaleinfostruct'
|     `-Record 0x180637bfb50 'threadlocaleinfostruct'
|-FunctionDecl 0x180637c0d70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x180637c0950 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x180637c0a00 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x180637c0a80 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x180637c0b60 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c1138 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x180637c11d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x180637c1240 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x180637c12a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637c1328 prev 0x180637c1138 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x180637c0e60 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x180637c0ee0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x180637c0f58 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c16e8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x180637c1410 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x180637c1490 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x180637c1508 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c1bc0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x180637c17d0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x180637c1850 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x180637c18c8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637c1960 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637c1ec8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x180637c1f68 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x180637c1fd0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x180637c2038 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637c20b8 prev 0x180637c1ec8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x180637c1cb0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x180637c1d30 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x180637c1da8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c2478 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x180637c2518 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x180637c2580 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x180637c25e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637c2668 prev 0x180637c2478 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x180637c21a0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x180637c2220 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x180637c2298 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637bab00 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x180637c2778 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x180637c2810 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x180637c2890 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x180637c2908 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x180637baec8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x180637baf68 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x180637bafd0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x180637bb038 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637bb0b8 prev 0x180637baec8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x180637babf0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x180637bac70 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x180637bace8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637bb538 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x180637bb5d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x180637bb640 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x180637bb6a8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x180637bb710 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637bb798 prev 0x180637bb538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x180637bb280 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x180637bb300 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x180637bb380 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x180637bb3f8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x180637bb858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x180637c6d58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x180637bba20 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x180637c6bc0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x180637c6c38 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x180637c6e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x180637c7200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x180637c6f38 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x180637c6fb0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637c7030 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x180637c75d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x180637c73e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x180637c7460 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x180637c7680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637c7a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x180637c77c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x180637c7840 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x180637c78c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x180637c3e50 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x180637c3ef0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x180637c3f58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637c3fd0 prev 0x180637c3e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x180637c3c68 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x180637c3ce8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x180637c4080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637c43d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x180637c41c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x180637c4240 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x180637c42c0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x180637c4700 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x180637c47a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x180637c4808 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637c4880 prev 0x180637c4700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x180637c4580 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x180637c4600 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x180637c4930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637c5c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x180637c5d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637c5d88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637c5e00 prev 0x180637c5c80 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x180637c4a78 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x180637c4af8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x180637c6050 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x180637c60f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637c6160 prev 0x180637c6050 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x180637c5ee0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x180637c6458 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x180637c6238 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x180637c62b0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c66a8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x180637c6538 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x180637c65b0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x180637c69d8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x180637c69c8 <line:132:5, col:51>
|     `-ConditionalOperator 0x180637c6998 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x180637c6808 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x180637c67e8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x180637c67b8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x180637c6770 <col:13> 'const char *' lvalue ParmVar 0x180637c6538 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x180637c67d0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x180637c6790 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x180637c6980 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x180637c6828 <col:24> 'int' 0
|       `-CallExpr 0x180637c6920 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x180637c6908 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x180637c6850 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x180637c6458 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x180637c6950 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x180637c6870 <col:36> 'const char *' lvalue ParmVar 0x180637c6538 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x180637c6968 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x180637c6890 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x180637c65b0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c8d18 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x180637c6a08 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x180637c6a80 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x180637c6b00 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x180637c8be0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x180637c9020 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x180637c90c0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x180637c9128 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x180637c9190 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637c9210 prev 0x180637c9020 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x180637c8e08 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x180637c8e88 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x180637c8f00 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637c9448 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x180637c92f8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x180637c9710 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x180637c97b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637c9818 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x180637c9890 prev 0x180637c9710 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x180637c9520 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x180637c95a0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x180637c9af0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x180637c9970 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x180637c99f0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x180637c7d50 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x180637c7bd0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x180637c7c50 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x180637c8108 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x180637c7e30 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x180637c7eb0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x180637c7f28 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637c8370 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x180637c81f0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x180637c8270 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x180637c8668 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x180637c8450 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x180637c84d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x180637c8548 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637c88d0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x180637c8750 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x180637c87d0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x180637c9bf0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x180637c89b0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x180637c8a30 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x180637c8aa8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637c9fa8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x180637c9cd8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x180637c9d58 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x180637c9dd0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637ca410 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x180637ca090 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x180637ca110 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x180637ca188 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637ca200 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637ca718 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x180637ca500 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x180637ca580 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x180637ca5f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637caab0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x180637ca800 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x180637ca880 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x180637ca8f8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637ca970 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637c4dc8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x180637c4e68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637c4ed0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637c4f48 prev 0x180637c4dc8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x180637c4ba0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x180637c4c20 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x180637c5200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x180637c5120 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x180637c52a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637c5680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x180637c53f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x180637c5468 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637c54e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x180637c5998 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x180637c5a38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x180637c5aa8 prev 0x180637c5998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x180637c5860 <col:90> col:93 'int'
| `-DeprecatedAttr 0x180637c5b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637caf10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x180637cad00 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x180637cad78 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637cadf8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x180637cb218 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x180637caff8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x180637cb070 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x180637cb508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x180637cb3b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x180637cb5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637cb9c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x180637cb6f8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x180637cb770 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637cb7e8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637cedf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x180637cbb68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x180637cec40 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x180637ceea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637cf358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x180637cefe8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x180637cf060 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x180637cf0e0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x180637cf158 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x180637cf7d8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x180637cf878 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x180637cf8e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cf948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637cf9c8 prev 0x180637cf7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x180637cf508 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x180637cf588 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x180637cf600 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x180637cfa80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637cbdc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x180637cbe60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x180637cbec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cbf30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637cbfb0 prev 0x180637cbdc0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x180637cfbc8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x180637cbc28 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x180637cbca0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637cc2b0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x180637cc098 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x180637cc118 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x180637cc190 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637cc648 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x180637cc398 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x180637cc418 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x180637cc490 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180637cc508 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180637cc9e0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x180637cc738 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x180637cc7b0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x180637cc830 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x180637cc8a8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x180637cddc8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x180637cde68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x180637cded0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cdf38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x180637cdfb8 prev 0x180637cddc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x180637ccb90 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x180637cdc30 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x180637cdca8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x180637ce070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637ce528 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x180637ce1b8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x180637ce230 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x180637ce2b0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x180637ce328 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180637ce9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x180637ce6d8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x180637ce758 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x180637ce7d0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x180637cea60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180637ccd90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x180637cce30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cce98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637ccf10 prev 0x180637ccd90 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x180637ceba8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x180637ccc20 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x180637cd170 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x180637cd210 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cd278 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x180637cd2f0 prev 0x180637cd170 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x180637ccff0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x180637cd070 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x180637cd4b0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x180637cd3d0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x180637cd700 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x180637cd7a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x180637cd808 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180637cd880 prev 0x180637cd700 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x180637cd588 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x180637cd608 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x180637cdae0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x180637cdb80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18063843f90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18063844008 prev 0x180637cdae0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x180637cd960 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x180637cd9e0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x18063844328 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x180638443c8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x18063844430 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180638444a8 prev 0x18063844328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x180638441a8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x18063844228 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x18063844558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063844938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x180638446a0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x18063844720 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x180638447a0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x18063844b90 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x18063844a20 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x18063844a98 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18063844e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18063844d30 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x18063844eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180638462b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x180638460b0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x18063846128 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180638461a0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180638465d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x18063846460 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x180638464d8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18063846688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063846aa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x18063846b40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18063846ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18063846c10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18063846c90 prev 0x18063846aa0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x180638467d0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x18063846850 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x180638468c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180638470f8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063846d78 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x18063846df8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x18063846e70 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063846ee8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180638473a0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x18063847440 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x180638474b0 prev 0x180638473a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x180638472c0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x18063847558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x180638478a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18063847720 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x180638477a0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x18063847950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x18063847c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18063847b18 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x18063847b98 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x18063847d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1806384a028 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18063847f10 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1806384a0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1806384a4e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1806384a2d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1806384a350 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1806384a3c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806384a5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1806384a980 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1806384a768 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1806384a7e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1806384a860 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806384aa38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1806384ace0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1806384ac00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1806384ad88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x180638450a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1806384af50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x18063844fa0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x18063845150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x180638453f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18063845318 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x180638454a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x18063845730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x180638455c0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x18063845ac0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x18063845800 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18063845878 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x180638458f0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x18063845e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063845c60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18063845cd8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x18063845f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180638482e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x18063848388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x180638483f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x18063848468 prev 0x180638482e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x180638480c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18063848140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x18063848760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x18063848800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x18063848868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x180638488e0 prev 0x18063848760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x18063848540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x180638485b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x18063848bc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x180638489b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18063848a30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x18063848aa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x18063848ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063848d60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18063848dd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x18063848f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063843298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063843078 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x180638430f0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x180638434e0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x18063843580 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x180638435f0 prev 0x180638434e0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x18063843370 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x180638438d8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x180638436c0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18063843738 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18063843b20 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x180638439b0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x18063843a28 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x18063843eb8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x18063843ea8 <line:307:5, col:56>
|     `-ConditionalOperator 0x18063843e78 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x18063843ce0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x18063843cc0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x18063843c90 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x18063843be8 <col:13> 'const wchar_t *' lvalue ParmVar 0x180638439b0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x18063843ca8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x18063843c70 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x18063843c48 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x18063843c08 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x18063843e60 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x18063843d00 <col:29> 'int' 0
|       `-CallExpr 0x18063843e00 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x18063843de8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x18063843d28 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x180638438d8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x18063843e30 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x18063843d48 <col:41> 'const wchar_t *' lvalue ParmVar 0x180638439b0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x18063843e48 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x18063843d68 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x18063843a28 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1806384f338 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x18063843ee0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1806384f040 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1806384f0b8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1806384f130 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1806384f7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1806384f4e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1806384f558 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1806384f5d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806384f858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1806384fc68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1806384fd08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1806384fd70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1806384fdd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1806384fe58 prev 0x1806384fc68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1806384f998 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1806384fa10 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1806384fa88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1806384b1b0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1806384ff38 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1806384ffb0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1806384b000 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1806384b078 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1806384b560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1806384b358 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1806384b3d0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1806384b448 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806384b618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1806384b978 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1806384b758 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1806384b7d0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1806384bbc0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1806384ba50 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1806384bac8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1806384be08 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1806384bc98 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1806384bd10 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1806384e090 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1806384bee0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1806384bf58 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1806384e398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1806384e228 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1806384e2a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1806384e448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1806384e8b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1806384e588 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1806384e600 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1806384e6e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1806384ebd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1806384ea58 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1806384ec78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1806384c080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1806384edb8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1806384ee30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1806384eeb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1806384c330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1806384c258 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1806384c3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1806384c7a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1806384c518 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1806384c590 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1806384c608 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1806384c9f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1806384c880 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1806384c8f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1806384cd98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1806384cad0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1806384cb48 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1806384cbc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063849068 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1806384ce78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1806384cef0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1806384cf68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180638494c0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063849148 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638491c0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18063849238 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180638492b0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063849918 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x180638495a8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18063849620 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18063849698 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x18063849710 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18063849d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x18063849ac0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x18063849b38 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x18063849bb0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18063849e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x180638561c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x18063849f78 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x18063856550 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x18063856290 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18063856308 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063856380 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x18063856908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x180638566f0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x18063856768 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x180638569b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063856d18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x18063856af8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x18063856b70 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x18063856f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18063856eb0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x18063857030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063851420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063851158 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x180638511d0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063851248 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180638517d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x180638515c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x18063851638 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18063851888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063851b38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x180638519c8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x18063851a40 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18063851da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18063851cd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x18063851e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063857250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063851f90 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x180638570c0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063857138 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063857560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x180638573f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x18063857468 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18063857610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18063857a10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18063857750 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x180638577c8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18063857840 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18063857e58 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063857af0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18063857b68 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18063857be0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063857c58 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063852070 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063857f40 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x18063857fb8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x18063852358 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18063852148 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638521c0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18063852238 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x180638525b0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063852438 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x180638524b0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x18063852898 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18063852688 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18063852700 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18063852778 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063852b88 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18063852978 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638529f0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18063852a68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18063852f10 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063852c68 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18063852ce0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18063852d58 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18063852dd0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063858268 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18063852ff8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638580d0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18063858148 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x180638585f0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18063858348 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638583c0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18063858438 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x180638584b0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18063858850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x18063858778 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x180638588f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x18063858c30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063858ab8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18063858b30 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x18063858ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1806385a0f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18063858ea0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18063858f18 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18063858f90 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806385a1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1806385a570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1806385a368 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1806385a3e0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1806385a458 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1806385a628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1806385a8c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1806385a7e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1806385a968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1806385ac98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1806385ab28 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1806385aba0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1806385ad48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1806385afe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1806385af08 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1806385b088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x180638532d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x180638531f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x18063853378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x180638536b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18063853538 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x180638535b0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x18063853760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x18063853d80 <.//openssl//file_jk/before\test/ssltestlib.h:15:1, line:18:42> line:15:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x18063853888 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x18063853908 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x18063853988 <line:16:25, col:29> col:29 min_proto_version 'int'
| |-ParmVarDecl 0x18063853a08 <col:48, col:52> col:52 max_proto_version 'int'
| |-ParmVarDecl 0x18063853ab8 <line:17:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x18063853b40 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x18063853bc0 <col:57, col:63> col:63 certfile 'char *'
| `-ParmVarDecl 0x18063853c40 <line:18:25, col:31> col:31 privkeyfile 'char *'
|-FunctionDecl 0x1806385c2c0 <line:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x18063853e78 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x18063853ef8 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x18063853f80 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x18063854008 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x1806385c128 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x1806385c1a8 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x1806385c500 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x1806385c3a8 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x1806385c428 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x1806385c680 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x1806385c7b8 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x1806385c910 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x1806385ca48 <line:28:1, col:36> col:6 bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x1806385ce20 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x1806385cb18 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x1806385cb98 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x1806385cc18 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x1806385cc98 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x1806385cd18 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x1806385cee8 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x1806385cff8 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x1806385cfa0 'struct mempacket_st' sugar
|   `-RecordType 0x1806385cf80 'struct mempacket_st'
|     `-Record 0x18063808060 'mempacket_st'
|-FunctionDecl 0x1806385d1b0 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x1806385d0a0 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-FunctionDecl 0x1806385d350 <.//openssl//file_jk/before\test\ssltestlib.c:15:1, col:32> col:12 invalid tls_dump_new 'int (int *)' static
| `-ParmVarDecl 0x1806385d288 <col:25, col:30> col:30 invalid bi 'int *'
|-FunctionDecl 0x1806385d4a8 <line:16:1, col:32> col:12 invalid tls_dump_free 'int (int *)' static
| `-ParmVarDecl 0x1806385d410 <col:26, col:31> col:31 invalid a 'int *'
|-FunctionDecl 0x1806385d750 <line:17:1, col:53> col:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1806385d568 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x1806385d5e8 <col:34, col:40> col:40 out 'char *'
| `-ParmVarDecl 0x1806385d668 <col:45, col:49> col:49 outl 'int'
|-FunctionDecl 0x1806385da10 <line:18:1, col:58> col:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1806385d820 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x1806385d8a0 <col:35, col:47> col:47 in 'const char *'
| `-ParmVarDecl 0x1806385d920 <col:51, col:55> col:55 inl 'int'
|-FunctionDecl 0x1806385dd60 <line:19:1, col:63> col:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1806385dae0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x1806385db60 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x1806385dbe0 <col:44, col:49> col:49 num 'long'
| `-ParmVarDecl 0x1806385dc60 <col:54, col:60> col:60 ptr 'void *'
|-FunctionDecl 0x1806385dfe0 <line:20:1, col:54> col:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1806385de38 <col:26, col:31> col:31 invalid bp 'int *'
| |-ParmVarDecl 0x1806385deb8 <col:35, col:41> col:41 buf 'char *'
| `-ParmVarDecl 0x1806385df38 <col:46, col:50> col:50 size 'int'
|-FunctionDecl 0x18063860240 <line:21:1, col:50> col:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1806385e0b0 <col:26, col:31> col:31 invalid bp 'int *'
| `-ParmVarDecl 0x18063860168 <col:35, col:47> col:47 str 'const char *'
|-VarDecl 0x18063860308 <line:28:1, col:20> col:20 invalid method_tls_dump 'int *' static
|-VarDecl 0x18063860410 <line:29:1, col:20> col:20 invalid method_mempacket_test 'int *' static
|-FunctionDecl 0x180638605a0 <line:32:1, line:48:1> line:32:19 invalid bio_f_tls_dump_filter 'const int *(void)'
| `-CompoundStmt 0x1806385e1a8 <line:33:1, line:48:1>
|   `-IfStmt 0x1806385e190 <line:34:5, line:46:5>
|     |-OpaqueValueExpr 0x1806385e178 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1806385e160 <line:34:34, line:46:5>
|       `-IfStmt 0x1806385e148 <line:37:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x1806385e130 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x18063861138 <.//openssl//file_jk/before\test\ssltestlib.c:45:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x18063861120 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x18063861100 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x180638610d8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x18063861098 <col:26> 'int' 0
|-FunctionDecl 0x1806385e258 prev 0x1806385c7b8 <.//openssl//file_jk/before\test\ssltestlib.c:50:1, line:53:1> line:50:6 bio_f_tls_dump_filter_free 'void (void)'
| `-CompoundStmt 0x1806385e408 <line:51:1, line:53:1>
|-FunctionDecl 0x1806385e4c8 <line:55:1, line:59:1> line:55:12 invalid tls_dump_new 'int (int *)' static
| |-ParmVarDecl 0x1806385e430 <col:25, col:30> col:30 invalid bio 'int *'
| `-CompoundStmt 0x1806385e6f8 <line:56:1, line:59:1>
|   `-ReturnStmt 0x1806385e6e8 <line:58:5, col:12>
|     `-IntegerLiteral 0x1806385e6c0 <col:12> 'int' 1
|-FunctionDecl 0x1806385e7c0 <line:61:1, line:66:1> line:61:12 invalid tls_dump_free 'int (int *)' static
| |-ParmVarDecl 0x1806385e728 <col:26, col:31> col:31 invalid bio 'int *'
| `-CompoundStmt 0x1806385e900 <line:62:1, line:66:1>
|   `-ReturnStmt 0x1806385e8f0 <line:65:5, col:12>
|     `-IntegerLiteral 0x1806385e8c8 <col:12> 'int' 1
|-FunctionDecl 0x1806385e9f8 <line:68:1, line:76:1> line:68:13 invalid copy_flags 'void (int *)' static
| |-ParmVarDecl 0x1806385e930 <col:24, col:29> col:29 invalid bio 'int *'
| `-CompoundStmt 0x1806385efe8 <line:69:1, line:76:1>
|   `-DeclStmt 0x1806385eb38 <line:70:5, col:14>
|     `-VarDecl 0x1806385ead0 <col:5, col:9> col:9 used flags 'int'
|-FunctionDecl 0x1806385f1a8 <line:102:1, line:176:1> line:102:13 used dump_data 'void (const char *, int)' static
| |-ParmVarDecl 0x1806385f018 <col:23, col:35> col:35 used data 'const char *'
| |-ParmVarDecl 0x1806385f098 <col:41, col:45> col:45 used len 'int'
| `-CompoundStmt 0x18063807400 <line:103:1, line:176:1>
|   |-DeclStmt 0x1806385f6b8 <line:104:5, col:65>
|   | |-VarDecl 0x1806385f288 <col:5, col:9> col:9 used rem 'int'
|   | |-VarDecl 0x1806385f308 <col:5, col:14> col:14 used i 'int'
|   | |-VarDecl 0x1806385f388 <col:5, col:17> col:17 used content 'int'
|   | |-VarDecl 0x1806385f408 <col:5, col:26> col:26 used reclen 'int'
|   | |-VarDecl 0x1806385f488 <col:5, col:34> col:34 used msglen 'int'
|   | |-VarDecl 0x1806385f508 <col:5, col:42> col:42 used fragoff 'int'
|   | |-VarDecl 0x1806385f588 <col:5, col:51> col:51 used fraglen 'int'
|   | `-VarDecl 0x1806385f608 <col:5, col:60> col:60 used epoch 'int'
|   |-DeclStmt 0x1806385f778 <line:105:5, col:23>
|   | `-VarDecl 0x1806385f710 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-CallExpr 0x1806385fa50 <line:107:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1806385fa38 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1806385f940 <col:5> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x1806385fa90 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1806385fa78 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1806385f9b8 <col:12> 'char [27]' lvalue "---- START OF PACKET ----\n"
|   |-BinaryOperator 0x1806385fb18 <line:109:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1806385faa8 <col:5> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   | `-ImplicitCastExpr 0x1806385fb00 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1806385fae0 <col:11> 'int' lvalue ParmVar 0x1806385f098 'len' 'int'
|   |-BinaryOperator 0x1806385fbe8 <line:110:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1806385fb38 <col:5> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   | `-CStyleCastExpr 0x1806385fbc0 <col:11, col:28> 'unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x1806385fba8 <col:28> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1806385fb70 <col:28> 'const char *' lvalue ParmVar 0x1806385f018 'data' 'const char *'
|   |-WhileStmt 0x180638071f8 <line:112:5, line:173:5>
|   | |-BinaryOperator 0x1806385fc68 <line:112:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x1806385fc50 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1806385fc08 <col:12> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   | | `-IntegerLiteral 0x1806385fc28 <col:18> 'int' 0
|   | `-CompoundStmt 0x18063807178 <col:21, line:173:5>
|   |   |-IfStmt 0x1806385fe20 <line:113:9, line:114:25>
|   |   | |-BinaryOperator 0x1806385fcf8 <line:113:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1806385fcc8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1806385fc88 <col:13> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   |   | | `-ImplicitCastExpr 0x1806385fce0 <col:20> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1806385fca8 <col:20> 'int' lvalue ParmVar 0x1806385f098 'len' 'int'
|   |   | `-CallExpr 0x1806385fdc8 <line:114:13, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x1806385fdb0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1806385fd18 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |   `-ImplicitCastExpr 0x1806385fe08 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x1806385fdf0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x1806385fd78 <col:20> 'char [3]' lvalue "*\n"
|   |   |-CallExpr 0x1806385ff00 <line:115:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x1806385fee8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806385fe38 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1806385ff40 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1806385ff28 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1806385fe98 <col:16> 'char [28]' lvalue "*---- START OF RECORD ----\n"
|   |   |-IfStmt 0x180638600d8 <line:116:9, line:119:9>
|   |   | |-OpaqueValueExpr 0x180638600c0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x180638600a0 <line:116:43, line:119:9>
|   |   |   |-CallExpr 0x18063860040 <line:117:13, col:51> 'int'
|   |   |   | |-ImplicitCastExpr 0x18063860028 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1806385ff78 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x18063860080 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x18063860068 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1806385ffd8 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |   |   `-BreakStmt 0x18063860098 <line:118:13>
|   |   |-BinaryOperator 0x1806380b0b0 <line:120:9, col:42> 'int' '='
|   |   | |-DeclRefExpr 0x180638600f0 <col:9> 'int' lvalue Var 0x1806385f388 'content' 'int'
|   |   | `-ImplicitCastExpr 0x1806380b098 <col:19, col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1806380b080 <col:19, col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x1806380b060 <col:19, col:42> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x1806380b048 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x1806380b000 <col:19> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x1806380b020 <line:78:33> 'int' 0
|   |   |-CallExpr 0x1806380b178 <line:121:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x1806380b160 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806380b0d0 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1806380b1c0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1806380b1a8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1806380b0f0 <col:16> 'char [28]' lvalue "** Record Content-type: %d\n"
|   |   | `-ImplicitCastExpr 0x1806380b1d8 <col:48> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1806380b128 <col:48> 'int' lvalue Var 0x1806385f388 'content' 'int'
|   |   |-CallExpr 0x1806380b378 <line:122:9, line:123:62> 'int'
|   |   | |-ImplicitCastExpr 0x1806380b360 <line:122:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806380b1f0 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1806380b3c8 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1806380b3b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1806380b210 <col:16> 'char [29]' lvalue "** Record Version: %02x%02x\n"
|   |   | |-ImplicitCastExpr 0x1806380b3f8 <line:123:16, col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1806380b3e0 <col:16, col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x1806380b2a8 <col:16, col:37> 'unsigned char' lvalue
|   |   | |     |-ImplicitCastExpr 0x1806380b290 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1806380b248 <col:16> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   | |     `-IntegerLiteral 0x1806380b268 <line:79:33> 'int' 1
|   |   | `-ImplicitCastExpr 0x1806380b428 <line:123:40, col:61> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1806380b410 <col:40, col:61> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x1806380b328 <col:40, col:61> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x1806380b310 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x1806380b2c8 <col:40> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x1806380b2e8 <line:80:33> 'int' 2
|   |   |-BinaryOperator 0x1806380b660 <line:124:9, col:66> 'int' '='
|   |   | |-DeclRefExpr 0x1806380b440 <col:9> 'int' lvalue Var 0x1806385f608 'epoch' 'int'
|   |   | `-BinaryOperator 0x1806380b640 <col:17, col:66> 'int' '|'
|   |   |   |-ParenExpr 0x1806380b570 <col:17, col:43> 'int'
|   |   |   | `-BinaryOperator 0x1806380b550 <col:18, col:42> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x1806380b538 <col:18, col:37> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x1806380b520 <col:18, col:37> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x1806380b4d8 <col:18, col:37> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x1806380b4c0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x1806380b478 <col:18> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x1806380b498 <line:81:33> 'int' 3
|   |   |   |   `-IntegerLiteral 0x1806380b4f8 <line:124:42> 'int' 8
|   |   |   `-ImplicitCastExpr 0x1806380b628 <col:47, col:66> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1806380b610 <col:47, col:66> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x1806380b5f0 <col:47, col:66> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x1806380b5d8 <col:47> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x1806380b590 <col:47> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x1806380b5b0 <line:82:33> 'int' 4
|   |   |-CallExpr 0x1806380b758 <line:125:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x1806380b740 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806380b680 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1806380b7a0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1806380b788 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1806380b6d8 <col:16> 'char [21]' lvalue "** Record Epoch: %d\n"
|   |   | `-ImplicitCastExpr 0x1806380b7b8 <col:41> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1806380b708 <col:41> 'int' lvalue Var 0x1806385f608 'epoch' 'int'
|   |   |-CallExpr 0x1806380b850 <line:126:9, col:38> 'int'
|   |   | |-ImplicitCastExpr 0x1806380b838 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806380b7d0 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1806380b890 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1806380b878 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1806380b7f0 <col:16> 'char [21]' lvalue "** Record Sequence: "
|   |   |-ForStmt 0x1806380bba8 <line:127:9, line:128:34>
|   |   | |-BinaryOperator 0x1806380b908 <line:127:14, line:83:33> 'int' '='
|   |   | | |-DeclRefExpr 0x1806380b8a8 <line:127:14> 'int' lvalue Var 0x1806385f308 'i' 'int'
|   |   | | `-IntegerLiteral 0x1806380b8e0 <line:83:33> 'int' 5
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1806380b988 <line:127:41, line:84:33> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1806380b970 <line:127:41> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1806380b928 <col:41> 'int' lvalue Var 0x1806385f308 'i' 'int'
|   |   | | `-IntegerLiteral 0x1806380b948 <line:84:33> 'int' 10
|   |   | |-UnaryOperator 0x1806380b9c8 <line:127:67, col:68> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1806380b9a8 <col:67> 'int' lvalue Var 0x1806385f308 'i' 'int'
|   |   | `-CallExpr 0x1806380bb18 <line:128:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1806380bb00 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1806380b9e0 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x1806380bb60 <col:20> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x1806380bb48 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x1806380ba38 <col:20> 'char [5]' lvalue "%02x"
|   |   |   `-ImplicitCastExpr 0x1806380bb90 <col:28, col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1806380bb78 <col:28, col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x1806380bac8 <col:28, col:33> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x1806380ba98 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x1806380ba58 <col:28> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         `-ImplicitCastExpr 0x1806380bab0 <col:32> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1806380ba78 <col:32> 'int' lvalue Var 0x1806385f308 'i' 'int'
|   |   |-BinaryOperator 0x1806380be00 <line:129:9, col:63> 'int' '='
|   |   | |-DeclRefExpr 0x1806380bbe0 <col:9> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |   | `-BinaryOperator 0x1806380bde0 <col:18, col:63> 'int' '|'
|   |   |   |-ParenExpr 0x1806380bd10 <col:18, col:42> 'int'
|   |   |   | `-BinaryOperator 0x1806380bcf0 <col:19, col:41> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x1806380bcd8 <col:19, col:36> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x1806380bcc0 <col:19, col:36> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x1806380bc78 <col:19, col:36> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x1806380bc60 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x1806380bc18 <col:19> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x1806380bc38 <line:85:33> 'int' 11
|   |   |   |   `-IntegerLiteral 0x1806380bc98 <line:129:41> 'int' 8
|   |   |   `-ImplicitCastExpr 0x1806380bdc8 <col:46, col:63> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1806380bdb0 <col:46, col:63> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x1806380bd90 <col:46, col:63> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x1806380bd78 <col:46> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x1806380bd30 <col:46> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x1806380bd50 <line:86:33> 'int' 12
|   |   |-CallExpr 0x1806380bef8 <line:130:9, col:50> 'int'
|   |   | |-ImplicitCastExpr 0x1806380bee0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806380be20 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x1806380bf40 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1806380bf28 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1806380be78 <col:16> 'char [23]' lvalue "\n** Record Length: %d\n"
|   |   | `-ImplicitCastExpr 0x1806380bf58 <col:44> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1806380bea8 <col:44> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |   |-IfStmt 0x1806380cd60 <line:135:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x1806380cd48 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1806380cd28 <line:135:43, line:164:9>
|   |   |   |-CallExpr 0x1806380e0e0 <line:136:13, col:71> 'int'
|   |   |   | |-ImplicitCastExpr 0x1806380e0c8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1806380bfd0 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x1806380e120 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1806380e108 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1806380e068 <col:20> 'char [49]' lvalue "**---- START OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   |   `-IfStmt 0x1806380cd00 <line:137:13, line:163:13> has_else
|   |   |     |-BinaryOperator 0x1806380e198 <line:137:17, col:25> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x1806380e180 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1806380e138 <col:17> 'int' lvalue Var 0x1806385f608 'epoch' 'int'
|   |   |     | `-IntegerLiteral 0x1806380e158 <col:25> 'int' 0
|   |   |     |-CompoundStmt 0x1806380e2f0 <col:28, line:139:13>
|   |   |     | `-CallExpr 0x1806380e298 <line:138:17, col:76> 'int'
|   |   |     |   |-ImplicitCastExpr 0x1806380e280 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x1806380e1b8 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |     |   `-ImplicitCastExpr 0x1806380e2d8 <col:24> 'const char *' <NoOp>
|   |   |     |     `-ImplicitCastExpr 0x1806380e2c0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |     |       `-StringLiteral 0x1806380e218 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT ENCRYPTED ----\n"
|   |   |     `-IfStmt 0x1806380ccd8 <line:139:20, line:163:13> has_else
|   |   |       |-OpaqueValueExpr 0x1806380ccc0 <<invalid sloc>> '_Bool'
|   |   |       |-CompoundStmt 0x1806380e440 <line:140:57, line:142:13>
|   |   |       | `-CallExpr 0x1806380e3e8 <line:141:17, col:76> 'int'
|   |   |       |   |-ImplicitCastExpr 0x1806380e3d0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x1806380e348 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |       |   `-ImplicitCastExpr 0x1806380e428 <col:24> 'const char *' <NoOp>
|   |   |       |     `-ImplicitCastExpr 0x1806380e410 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |       |       `-StringLiteral 0x1806380e368 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |       `-CompoundStmt 0x1806380cc68 <line:142:20, line:163:13>
|   |   |         |-CallExpr 0x1806380e598 <line:143:17, col:63> 'int'
|   |   |         | |-ImplicitCastExpr 0x1806380e580 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1806380e458 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x1806380e5e0 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1806380e5c8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1806380e4b8 <col:24> 'char [22]' lvalue "*** Message Type: %d\n"
|   |   |         | `-ImplicitCastExpr 0x1806380e610 <col:50, col:62> 'int' <IntegralCast>
|   |   |         |   `-ImplicitCastExpr 0x1806380e5f8 <col:50, col:62> 'unsigned char' <LValueToRValue>
|   |   |         |     `-ArraySubscriptExpr 0x1806380e548 <col:50, col:62> 'unsigned char' lvalue
|   |   |         |       |-ImplicitCastExpr 0x1806380e530 <col:50> 'unsigned char *' <LValueToRValue>
|   |   |         |       | `-DeclRefExpr 0x1806380e4e8 <col:50> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |       `-IntegerLiteral 0x1806380e508 <line:88:33> 'int' 0
|   |   |         |-BinaryOperator 0x1806380e980 <line:144:17, line:145:42> 'int' '='
|   |   |         | |-DeclRefExpr 0x1806380e628 <line:144:17> 'int' lvalue Var 0x1806385f488 'msglen' 'int'
|   |   |         | `-BinaryOperator 0x1806380e960 <col:26, line:145:42> 'int' '|'
|   |   |         |   |-BinaryOperator 0x1806380e890 <line:144:26, col:74> 'int' '|'
|   |   |         |   | |-ParenExpr 0x1806380e758 <col:26, col:48> 'int'
|   |   |         |   | | `-BinaryOperator 0x1806380e738 <col:27, col:46> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x1806380e720 <col:27, col:41> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x1806380e708 <col:27, col:41> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x1806380e6c0 <col:27, col:41> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x1806380e6a8 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x1806380e660 <col:27> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x1806380e680 <line:89:33> 'int' 1
|   |   |         |   | |   `-IntegerLiteral 0x1806380e6e0 <line:144:46> 'int' 16
|   |   |         |   | `-ParenExpr 0x1806380e870 <col:52, col:74> 'int'
|   |   |         |   |   `-BinaryOperator 0x1806380e850 <col:53, col:73> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x1806380e838 <col:53, col:68> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x1806380e820 <col:53, col:68> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x1806380e7d8 <col:53, col:68> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x1806380e7c0 <col:53> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x1806380e778 <col:53> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x1806380e798 <line:90:33> 'int' 2
|   |   |         |   |     `-IntegerLiteral 0x1806380e7f8 <line:144:73> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x1806380e948 <line:145:28, col:42> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x1806380e930 <col:28, col:42> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x1806380e910 <col:28, col:42> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x1806380e8f8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x1806380e8b0 <col:28> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x1806380e8d0 <line:91:33> 'int' 3
|   |   |         |-CallExpr 0x1806380ea78 <line:146:17, col:58> 'int'
|   |   |         | |-ImplicitCastExpr 0x1806380ea60 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1806380e9a0 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x1806380eac0 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1806380eaa8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1806380e9f8 <col:24> 'char [24]' lvalue "*** Message Length: %d\n"
|   |   |         | `-ImplicitCastExpr 0x1806380ead8 <col:52> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x1806380ea28 <col:52> 'int' lvalue Var 0x1806385f488 'msglen' 'int'
|   |   |         |-CallExpr 0x1806380ed98 <line:147:17, line:148:64> 'int'
|   |   |         | |-ImplicitCastExpr 0x1806380ed80 <line:147:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1806380eaf0 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x1806380ede0 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1806380edc8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1806380eb48 <col:24> 'char [26]' lvalue "*** Message sequence: %d\n"
|   |   |         | `-BinaryOperator 0x1806380ed48 <line:148:24, col:63> 'int' '|'
|   |   |         |   |-ParenExpr 0x1806380ec78 <col:24, col:45> 'int'
|   |   |         |   | `-BinaryOperator 0x1806380ec58 <col:25, col:44> 'int' '<<'
|   |   |         |   |   |-ImplicitCastExpr 0x1806380ec40 <col:25, col:39> 'int' <IntegralCast>
|   |   |         |   |   | `-ImplicitCastExpr 0x1806380ec28 <col:25, col:39> 'unsigned char' <LValueToRValue>
|   |   |         |   |   |   `-ArraySubscriptExpr 0x1806380ebe0 <col:25, col:39> 'unsigned char' lvalue
|   |   |         |   |   |     |-ImplicitCastExpr 0x1806380ebc8 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |         |   |   |     | `-DeclRefExpr 0x1806380eb80 <col:25> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   |   |     `-IntegerLiteral 0x1806380eba0 <line:92:33> 'int' 4
|   |   |         |   |   `-IntegerLiteral 0x1806380ec00 <line:148:44> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x1806380ed30 <col:49, col:63> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x1806380ed18 <col:49, col:63> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x1806380ecf8 <col:49, col:63> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x1806380ece0 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x1806380ec98 <col:49> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x1806380ecb8 <line:93:33> 'int' 5
|   |   |         |-BinaryOperator 0x1806380c140 <line:149:17, line:151:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x1806380edf8 <line:149:17> 'int' lvalue Var 0x1806385f508 'fragoff' 'int'
|   |   |         | `-BinaryOperator 0x1806380c120 <col:27, line:151:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x1806380c050 <line:149:27, line:150:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x1806380ef28 <line:149:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x1806380ef08 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x1806380eef0 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x1806380eed8 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x1806380ee90 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x1806380ee78 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x1806380ee30 <col:28> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x1806380ee50 <line:94:33> 'int' 6
|   |   |         |   | |   `-IntegerLiteral 0x1806380eeb0 <line:149:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x1806380c030 <line:150:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x1806380c010 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x1806380f008 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x1806380eff0 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x1806380efa8 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x1806380ef90 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x1806380ef48 <col:30> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x1806380ef68 <line:95:33> 'int' 7
|   |   |         |   |     `-IntegerLiteral 0x1806380efc8 <line:150:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x1806380c108 <line:151:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x1806380c0f0 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x1806380c0d0 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x1806380c0b8 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x1806380c070 <col:29> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x1806380c090 <line:96:33> 'int' 8
|   |   |         |-CallExpr 0x1806380c240 <line:152:17, col:68> 'int'
|   |   |         | |-ImplicitCastExpr 0x1806380c228 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1806380c160 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x1806380c288 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1806380c270 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1806380c1b8 <col:24> 'char [33]' lvalue "*** Message Fragment offset: %d\n"
|   |   |         | `-ImplicitCastExpr 0x1806380c2a0 <col:61> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x1806380c1f0 <col:61> 'int' lvalue Var 0x1806385f508 'fragoff' 'int'
|   |   |         |-BinaryOperator 0x1806380c610 <line:153:17, line:155:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x1806380c2b8 <line:153:17> 'int' lvalue Var 0x1806385f588 'fraglen' 'int'
|   |   |         | `-BinaryOperator 0x1806380c5f0 <col:27, line:155:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x1806380c520 <line:153:27, line:154:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x1806380c3e8 <line:153:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x1806380c3c8 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x1806380c3b0 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x1806380c398 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x1806380c350 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x1806380c338 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x1806380c2f0 <col:28> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x1806380c310 <line:97:33> 'int' 9
|   |   |         |   | |   `-IntegerLiteral 0x1806380c370 <line:153:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x1806380c500 <line:154:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x1806380c4e0 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x1806380c4c8 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x1806380c4b0 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x1806380c468 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x1806380c450 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x1806380c408 <col:30> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x1806380c428 <line:98:33> 'int' 10
|   |   |         |   |     `-IntegerLiteral 0x1806380c488 <line:154:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x1806380c5d8 <line:155:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x1806380c5c0 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x1806380c5a0 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x1806380c588 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x1806380c540 <col:29> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x1806380c560 <line:99:33> 'int' 11
|   |   |         |-CallExpr 0x1806380c710 <line:156:17, col:65> 'int'
|   |   |         | |-ImplicitCastExpr 0x1806380c6f8 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1806380c630 <col:17> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x1806380c758 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1806380c740 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1806380c688 <col:24> 'char [30]' lvalue "*** Message Fragment len: %d\n"
|   |   |         | `-ImplicitCastExpr 0x1806380c770 <col:58> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x1806380c6c0 <col:58> 'int' lvalue Var 0x1806385f588 'fraglen' 'int'
|   |   |         `-IfStmt 0x1806380cc40 <line:157:17, line:162:77> has_else
|   |   |           |-BinaryOperator 0x1806380c850 <line:157:21, col:41> 'int' '>'
|   |   |           | |-BinaryOperator 0x1806380c7f8 <col:21, col:31> 'int' '+'
|   |   |           | | |-ImplicitCastExpr 0x1806380c7c8 <col:21> 'int' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 0x1806380c788 <col:21> 'int' lvalue Var 0x1806385f508 'fragoff' 'int'
|   |   |           | | `-ImplicitCastExpr 0x1806380c7e0 <col:31> 'int' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x1806380c7a8 <col:31> 'int' lvalue Var 0x1806385f588 'fraglen' 'int'
|   |   |           | `-ImplicitCastExpr 0x1806380c838 <col:41> 'int' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 0x1806380c818 <col:41> 'int' lvalue Var 0x1806385f488 'msglen' 'int'
|   |   |           |-CallExpr 0x1806380c908 <line:158:21, col:79> 'int'
|   |   |           | |-ImplicitCastExpr 0x1806380c8f0 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | `-DeclRefExpr 0x1806380c870 <col:21> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |           | `-ImplicitCastExpr 0x1806380c948 <col:28> 'const char *' <NoOp>
|   |   |           |   `-ImplicitCastExpr 0x1806380c930 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |           |     `-StringLiteral 0x1806380c890 <col:28> 'char [49]' lvalue "***---- HANDSHAKE MESSAGE FRAGMENT INVALID ----\n"
|   |   |           `-IfStmt 0x1806380cc18 <line:159:22, line:162:77> has_else
|   |   |             |-BinaryOperator 0x1806380c9d0 <line:159:25, col:34> 'int' '<'
|   |   |             | |-ImplicitCastExpr 0x1806380c9a0 <col:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x1806380c960 <col:25> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |   |             | `-ImplicitCastExpr 0x1806380c9b8 <col:34> 'int' <LValueToRValue>
|   |   |             |   `-DeclRefExpr 0x1806380c980 <col:34> 'int' lvalue Var 0x1806385f588 'fraglen' 'int'
|   |   |             |-CallExpr 0x1806380ca90 <line:160:21, col:80> 'int'
|   |   |             | |-ImplicitCastExpr 0x1806380ca78 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             | | `-DeclRefExpr 0x1806380c9f0 <col:21> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |             | `-ImplicitCastExpr 0x1806380cad0 <col:28> 'const char *' <NoOp>
|   |   |             |   `-ImplicitCastExpr 0x1806380cab8 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |             |     `-StringLiteral 0x1806380ca10 <col:28> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |             `-CallExpr 0x1806380cbc0 <line:162:21, col:77> 'int'
|   |   |               |-ImplicitCastExpr 0x1806380cba8 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |               | `-DeclRefExpr 0x1806380cae8 <col:21> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |               `-ImplicitCastExpr 0x1806380cc00 <col:28> 'const char *' <NoOp>
|   |   |                 `-ImplicitCastExpr 0x1806380cbe8 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |                   `-StringLiteral 0x1806380cb48 <col:28> 'char [47]' lvalue "**---- END OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   `-IfStmt 0x18063807150 <line:165:9, line:172:9> has_else
|   |     |-BinaryOperator 0x1806380cde8 <line:165:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1806380cdb8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1806380cd78 <col:13> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   |     | `-ImplicitCastExpr 0x1806380cdd0 <col:19> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1806380cd98 <col:19> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |     |-CompoundStmt 0x1806380cf50 <col:27, line:168:9>
|   |     | |-CallExpr 0x1806380ce90 <line:166:13, col:51> 'int'
|   |     | | |-ImplicitCastExpr 0x1806380ce78 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x1806380ce08 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |     | | `-ImplicitCastExpr 0x1806380ced0 <col:20> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x1806380ceb8 <col:20> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x1806380ce28 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |     | `-BinaryOperator 0x1806380cf30 <line:167:13, col:19> 'int' '='
|   |     |   |-DeclRefExpr 0x1806380cee8 <col:13> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   |     |   `-IntegerLiteral 0x1806380cf08 <col:19> 'int' 0
|   |     `-CompoundStmt 0x18063807128 <line:168:16, line:172:9>
|   |       |-CompoundAssignOperator 0x1806380cfc8 <line:169:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x1806380cf70 <col:13> 'unsigned char *' lvalue Var 0x1806385f710 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x1806380cfb0 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1806380cf90 <col:20> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |       |-CompoundAssignOperator 0x18063807018 <line:170:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x18063806fc0 <col:13> 'int' lvalue Var 0x1806385f288 'rem' 'int'
|   |       | `-ImplicitCastExpr 0x18063807000 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18063806fe0 <col:20> 'int' lvalue Var 0x1806385f408 'reclen' 'int'
|   |       `-CallExpr 0x180638070d0 <line:171:13, col:48> 'int'
|   |         |-ImplicitCastExpr 0x180638070b8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x18063807048 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |         `-ImplicitCastExpr 0x18063807110 <col:20> 'const char *' <NoOp>
|   |           `-ImplicitCastExpr 0x180638070f8 <col:20> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x18063807068 <col:20> 'char [26]' lvalue "*---- END OF RECORD ----\n"
|   `-CallExpr 0x18063807298 <line:174:5, col:41> 'int'
|     |-ImplicitCastExpr 0x18063807280 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x18063807210 <col:5> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x180638072d8 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x180638072c0 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x18063807230 <col:12> 'char [26]' lvalue "---- END OF PACKET ----\n\n"
|-FunctionDecl 0x1806385f7c8 <line:107:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1806385f868 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1806385f8d8 <col:5> Implicit printf 1 2
|-FunctionDecl 0x18063807608 <line:178:1, line:191:1> line:178:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18063807460 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x180638074e0 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x18063807560 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x18063807b60 <line:179:1, line:191:1>
|   |-DeclStmt 0x18063807758 <line:180:5, col:12>
|   | `-VarDecl 0x180638076f0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x18063807b00 <line:186:5, line:188:5>
|   | |-BinaryOperator 0x180638079a8 <line:186:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x18063807990 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063807948 <col:9> 'int' lvalue Var 0x180638076f0 'ret' 'int'
|   | | `-IntegerLiteral 0x18063807968 <col:15> 'int' 0
|   | `-CompoundStmt 0x18063807ae8 <col:18, line:188:5>
|   |   `-CallExpr 0x18063807a70 <line:187:9, col:27> 'void'
|   |     |-ImplicitCastExpr 0x18063807a58 <col:9> 'void (*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x180638079c8 <col:9> 'void (const char *, int)' Function 0x1806385f1a8 'dump_data' 'void (const char *, int)'
|   |     |-ImplicitCastExpr 0x18063807ab8 <col:19> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x18063807aa0 <col:19> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x180638079e8 <col:19> 'char *' lvalue ParmVar 0x180638074e0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x18063807ad0 <col:24> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x18063807a08 <col:24> 'int' lvalue Var 0x180638076f0 'ret' 'int'
|   `-ReturnStmt 0x18063807b50 <line:190:5, col:12>
|     `-ImplicitCastExpr 0x18063807b38 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x18063807b18 <col:12> 'int' lvalue Var 0x180638076f0 'ret' 'int'
|-FunctionDecl 0x18063807d48 <line:193:1, line:202:1> line:193:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x18063807ba0 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x18063807c20 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x18063807ca0 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x1806380f1e0 <line:194:1, line:202:1>
|   |-DeclStmt 0x18063807e98 <line:195:5, col:12>
|   | `-VarDecl 0x18063807e30 <col:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x1806380f1d0 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x1806380f1b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1806380f198 <col:12> 'int' lvalue Var 0x18063807e30 'ret' 'int'
|-FunctionDecl 0x1806380f448 <line:204:1, line:221:1> line:204:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1806380f218 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x1806380f298 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x1806380f318 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x1806380f398 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x1806380fa40 <line:205:1, line:221:1>
|   |-DeclStmt 0x1806380f5a0 <line:206:5, col:13>
|   | `-VarDecl 0x1806380f538 <col:5, col:10> col:10 used ret 'long'
|   |-IfStmt 0x1806380f6c8 <line:209:5, line:210:16>
|   | |-OpaqueValueExpr 0x1806380f6b0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1806380f6a0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1806380f688 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1806380f660 <col:16> 'int' 0
|   |-SwitchStmt 0x1806380f730 <line:212:5, line:219:5>
|   | |-ImplicitCastExpr 0x1806380f718 <line:212:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1806380f6e0 <col:13> 'int' lvalue ParmVar 0x1806380f298 'cmd' 'int'
|   | `-CompoundStmt 0x1806380f9c8 <col:18, line:219:5>
|   |   |-BinaryOperator 0x1806380f7b0 <line:214:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1806380f750 <col:9> 'long' lvalue Var 0x1806380f538 'ret' 'long'
|   |   | `-IntegerLiteral 0x1806380f788 <col:15> 'long' 0
|   |   |-BreakStmt 0x1806380f7d0 <line:215:9>
|   |   |-DefaultStmt 0x1806380f9a0 <line:216:5, col:12>
|   |   | `-NullStmt 0x1806380f998 <col:12>
|   |   `-BreakStmt 0x1806380f9c0 <line:218:9>
|   `-ReturnStmt 0x1806380fa30 <line:220:5, col:12>
|     `-ImplicitCastExpr 0x1806380fa18 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1806380f9f8 <col:12> 'long' lvalue Var 0x1806380f538 'ret' 'long'
|-FunctionDecl 0x1806380fc30 <line:223:1, line:227:1> line:223:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1806380fa88 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x1806380fb08 <col:36, col:42> col:42 buf 'char *'
| |-ParmVarDecl 0x1806380fb88 <col:47, col:51> col:51 size 'int'
| `-CompoundStmt 0x1806380fd50 <line:224:1, line:227:1>
|   `-ReturnStmt 0x1806380fd40 <line:226:5, col:13>
|     `-UnaryOperator 0x1806380fd28 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1806380fd00 <col:13> 'int' 1
|-FunctionDecl 0x1806380fed0 <line:229:1, line:232:1> line:229:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1806380fdb0 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x1806380fe30 <col:36, col:48> col:48 used str 'const char *'
| `-CompoundStmt 0x18063808050 <line:230:1, line:232:1>
|-RecordDecl 0x18063808060 prev 0x1806385cee8 <line:235:1, line:240:1> line:235:8 struct mempacket_st definition
| |-FieldDecl 0x180638080f8 <line:236:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x18063808168 <line:237:5, col:9> col:9 referenced len 'int'
| |-FieldDecl 0x180638081d8 <line:238:5, col:18> col:18 referenced num 'unsigned int'
| `-FieldDecl 0x18063808248 <line:239:5, col:18> col:18 referenced type 'unsigned int'
|-FunctionDecl 0x18063808418 <line:242:1, line:247:1> line:242:13 used mempacket_free 'void (MEMPACKET *)' static
| |-ParmVarDecl 0x18063808308 <col:28, col:39> col:39 used pkt 'MEMPACKET *'
| `-CompoundStmt 0x180638088c0 <line:243:1, line:247:1>
|   |-IfStmt 0x18063808810 <line:244:5, line:245:31>
|   | |-BinaryOperator 0x180638085f8 <line:244:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x180638085c8 <.//openssl//file_jk/before\test\ssltestlib.c:244:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x18063808510 <col:9, col:14> 'unsigned char *' lvalue ->data 0x180638080f8
|   | | |   `-ImplicitCastExpr 0x180638084f8 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x180638084d8 <col:9> 'MEMPACKET *' lvalue ParmVar 0x18063808308 'pkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x180638085e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x180638085a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18063808580 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18063808540 <col:26> 'int' 0
|   | `-CallExpr 0x180638087d0 <.//openssl//file_jk/before\test\ssltestlib.c:245:9, col:31> 'int'
|   |   |-ImplicitCastExpr 0x180638087b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x18063808708 <col:9> 'int ()' Function 0x18063808640 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x180638087f8 <col:22, col:27> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x18063808760 <col:22, col:27> 'unsigned char *' lvalue ->data 0x180638080f8
|   |       `-ImplicitCastExpr 0x18063808748 <col:22> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x18063808728 <col:22> 'MEMPACKET *' lvalue ParmVar 0x18063808308 'pkt' 'MEMPACKET *'
|   `-CallExpr 0x18063808880 <line:246:5, col:21> 'int'
|     |-ImplicitCastExpr 0x18063808868 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x18063808828 <col:5> 'int ()' Function 0x18063808640 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x180638088a8 <col:18> 'MEMPACKET *' <LValueToRValue>
|       `-DeclRefExpr 0x18063808848 <col:18> 'MEMPACKET *' lvalue ParmVar 0x18063808308 'pkt' 'MEMPACKET *'
|-RecordDecl 0x180638088e0 <line:249:9, line:256:1> line:249:16 invalid struct mempacket_test_ctx_st definition
| |-FieldDecl 0x18063808a48 <line:250:5, <invalid sloc>> col:5 invalid STACK_OF 'int (MEMPACKET)'
| |-FieldDecl 0x18063808ab8 <line:251:5, col:18> col:18 referenced epoch 'unsigned int'
| |-FieldDecl 0x18063808b28 <line:252:5, col:18> col:18 referenced currrec 'unsigned int'
| |-FieldDecl 0x18063808b98 <line:253:5, col:18> col:18 referenced currpkt 'unsigned int'
| |-FieldDecl 0x18063808c08 <line:254:5, col:18> col:18 referenced lastpkt 'unsigned int'
| `-FieldDecl 0x18063808c78 <line:255:5, col:18> col:18 referenced noinject 'unsigned int'
|-TypedefDecl 0x18063808d28 <line:249:1, line:256:3> col:3 referenced MEMPACKET_TEST_CTX 'struct mempacket_test_ctx_st':'struct mempacket_test_ctx_st'
| `-ElaboratedType 0x18063808cd0 'struct mempacket_test_ctx_st' sugar
|   `-RecordType 0x18063808980 'struct mempacket_test_ctx_st'
|     `-Record 0x180638088e0 'mempacket_test_ctx_st'
|-FunctionDecl 0x18063808e48 <line:258:1, col:38> col:12 invalid mempacket_test_new 'int (int *)' static
| `-ParmVarDecl 0x18063808db0 <col:31, col:36> col:36 invalid bi 'int *'
|-FunctionDecl 0x18063810050 <line:259:1, col:38> col:12 invalid mempacket_test_free 'int (int *)' static
| `-ParmVarDecl 0x18063808f08 <col:32, col:37> col:37 invalid a 'int *'
|-FunctionDecl 0x180638102b8 <line:260:1, col:59> col:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18063810110 <col:32, col:37> col:37 invalid b 'int *'
| |-ParmVarDecl 0x18063810190 <col:40, col:46> col:46 out 'char *'
| `-ParmVarDecl 0x18063810210 <col:51, col:55> col:55 outl 'int'
|-FunctionDecl 0x18063810530 <line:261:1, col:64> col:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x18063810388 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x18063810408 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x18063810488 <col:57, col:61> col:61 inl 'int'
|-FunctionDecl 0x18063810830 <line:262:1, col:69> col:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x18063810600 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x18063810680 <col:41, col:45> col:45 cmd 'int'
| |-ParmVarDecl 0x18063810700 <col:50, col:55> col:55 num 'long'
| `-ParmVarDecl 0x18063810780 <col:60, col:66> col:66 ptr 'void *'
|-FunctionDecl 0x18063810ab0 <line:263:1, col:60> col:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18063810908 <col:32, col:37> col:37 invalid bp 'int *'
| |-ParmVarDecl 0x18063810988 <col:41, col:47> col:47 buf 'char *'
| `-ParmVarDecl 0x18063810a08 <col:52, col:56> col:56 size 'int'
|-FunctionDecl 0x18063810ca0 <line:264:1, col:56> col:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x18063810b80 <col:32, col:37> col:37 invalid bp 'int *'
| `-ParmVarDecl 0x18063810c00 <col:41, col:53> col:53 str 'const char *'
|-FunctionDecl 0x18063810df0 <line:266:1, line:282:1> line:266:19 invalid bio_s_mempacket_test 'const int *(void)'
| `-CompoundStmt 0x18063809230 <line:267:1, line:282:1>
|   `-IfStmt 0x18063809218 <line:268:5, line:280:5>
|     |-OpaqueValueExpr 0x18063809200 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x180638091e8 <line:268:40, line:280:5>
|       `-IfStmt 0x180638091d0 <line:271:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x180638091b8 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x180638091a8 <.//openssl//file_jk/before\test\ssltestlib.c:279:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x18063809190 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x18063809170 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x18063809148 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x18063809108 <col:26> 'int' 0
|-FunctionDecl 0x180638092e0 prev 0x1806385ca48 <.//openssl//file_jk/before\test\ssltestlib.c:284:1, line:287:1> line:284:6 bio_s_mempacket_test_free 'void (void)'
| `-CompoundStmt 0x180638093a0 <line:285:1, line:287:1>
|-FunctionDecl 0x18063809460 <line:289:1, line:302:1> line:289:12 invalid mempacket_test_new 'int (int *)' static
| |-ParmVarDecl 0x180638093c8 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x18063809e90 <line:290:1, line:302:1>
|   |-DeclStmt 0x18063809808 <line:291:5, col:59>
|   | `-VarDecl 0x180638095a8 <col:5, col:58> col:25 used ctx 'MEMPACKET_TEST_CTX *' cinit
|   |   `-ImplicitCastExpr 0x180638097f0 <col:31, col:58> 'MEMPACKET_TEST_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x180638097c8 <col:31, col:58> 'int'
|   |       |-ImplicitCastExpr 0x180638097b0 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x18063809700 <col:31> 'int ()' Function 0x18063809638 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x18063809790 <col:46, col:57> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x18063809770 <col:52, col:57> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue
|   |           `-UnaryOperator 0x18063809758 <col:53, col:54> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x18063809740 <col:54> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x18063809720 <col:54> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638095a8 'ctx' 'MEMPACKET_TEST_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x18063809968 <line:292:5, line:293:16>
|   | |-BinaryOperator 0x18063809910 <line:292:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x180638098e0 <.//openssl//file_jk/before\test\ssltestlib.c:292:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063809820 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638095a8 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x180638098f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x180638098c0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18063809898 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18063809858 <col:26> 'int' 0
|   | `-ReturnStmt 0x18063809958 <.//openssl//file_jk/before\test\ssltestlib.c:293:9, col:16>
|   |   `-IntegerLiteral 0x18063809930 <col:16> 'int' 0
|   |-IfStmt 0x18063809cc8 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x18063809cb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063809c90 <line:295:28, line:298:5>
|   |   |-CallExpr 0x18063809c18 <line:296:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x18063809c00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063809bc0 <col:9> 'int ()' Function 0x18063808640 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x18063809c40 <col:22> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18063809be0 <col:22> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638095a8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |   `-ReturnStmt 0x18063809c80 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x18063809c58 <col:16> 'int' 0
|   `-ReturnStmt 0x18063809e80 <line:301:5, col:12>
|     `-IntegerLiteral 0x18063809e58 <col:12> 'int' 1
|-FunctionDecl 0x18063811060 <line:304:1, line:314:1> line:304:12 invalid mempacket_test_free 'int (int *)' static
| |-ParmVarDecl 0x18063809ed8 <col:32, col:37> col:37 invalid bio 'int *'
| `-CompoundStmt 0x18063811600 <line:305:1, line:314:1>
|   |-DeclStmt 0x180638112a8 <line:306:5, col:48>
|   | `-VarDecl 0x18063811130 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-CallExpr 0x18063811498 <line:309:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x18063811480 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18063811440 <col:5> 'int ()' Function 0x18063808640 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x180638114c0 <col:18> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x18063811460 <col:18> 'MEMPACKET_TEST_CTX *' lvalue Var 0x18063811130 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x180638115f0 <line:313:5, col:12>
|     `-IntegerLiteral 0x180638115c8 <col:12> 'int' 1
|-FunctionDecl 0x180638117e8 <line:325:1, line:387:1> line:325:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18063811640 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x180638116c0 <col:42, col:48> col:48 used out 'char *'
| |-ParmVarDecl 0x18063811740 <col:53, col:57> col:57 used outl 'int'
| `-CompoundStmt 0x18063819da8 <line:326:1, line:387:1>
|   |-DeclStmt 0x18063811950 <line:327:5, col:48>
|   | `-VarDecl 0x180638118c8 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x180638119e0 <line:328:5, col:23>
|   | `-VarDecl 0x18063811978 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-DeclStmt 0x18063811a78 <line:329:5, col:23>
|   | `-VarDecl 0x18063811a10 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-DeclStmt 0x18063811b10 <line:330:5, col:12>
|   | `-VarDecl 0x18063811aa8 <col:5, col:9> col:9 used rem 'int'
|   |-DeclStmt 0x18063811d50 <line:331:5, col:41>
|   | |-VarDecl 0x18063811b40 <col:5, col:18> col:18 used seq 'unsigned int'
|   | |-VarDecl 0x18063811bc0 <col:5, col:23> col:23 used offset 'unsigned int'
|   | |-VarDecl 0x18063811c40 <col:5, col:31> col:31 used len 'unsigned int'
|   | `-VarDecl 0x18063811cc0 <col:5, col:36> col:36 used epoch 'unsigned int'
|   |-IfStmt 0x18063816440 <line:336:5, line:340:5>
|   | |-BinaryOperator 0x180638162a8 <line:336:9, col:49> 'int' '||'
|   | | |-BinaryOperator 0x18063816168 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x18063816138 <.//openssl//file_jk/before\test\ssltestlib.c:336:9> 'MEMPACKET *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x18063812038 <col:9> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   | | | `-ImplicitCastExpr 0x18063816150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | | |   `-ParenExpr 0x18063816118 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x180638160f0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x180638160b0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x18063816288 <.//openssl//file_jk/before\test\ssltestlib.c:336:28, col:49> 'int' '!='
|   | |   |-ImplicitCastExpr 0x18063816258 <col:28, col:37> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x180638161c0 <col:28, col:37> 'unsigned int' lvalue ->num 0x180638081d8
|   | |   |   `-ImplicitCastExpr 0x180638161a8 <col:28> 'MEMPACKET *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x18063816188 <col:28> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   | |   `-ImplicitCastExpr 0x18063816270 <col:44, col:49> 'unsigned int' <LValueToRValue>
|   | |     `-MemberExpr 0x18063816228 <col:44, col:49> 'unsigned int' lvalue ->currpkt 0x18063808b98
|   | |       `-ImplicitCastExpr 0x18063816210 <col:44> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x180638161f0 <col:44> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   | `-CompoundStmt 0x18063816428 <col:58, line:340:5>
|   |   `-ReturnStmt 0x18063816418 <line:339:9, col:17>
|   |     `-UnaryOperator 0x18063816400 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x180638163d8 <col:17> 'int' 1
|   |-UnaryOperator 0x18063816608 <line:342:5, col:17> 'unsigned int' postfix '++'
|   | `-MemberExpr 0x180638165d8 <col:5, col:10> 'unsigned int' lvalue ->currpkt 0x18063808b98
|   |   `-ImplicitCastExpr 0x180638165c0 <col:5> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     `-DeclRefExpr 0x180638165a0 <col:5> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-IfStmt 0x180638167d0 <line:344:5, line:345:25>
|   | |-BinaryOperator 0x180638166f0 <line:344:9, col:25> 'int' '>'
|   | | |-ImplicitCastExpr 0x180638166c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063816620 <col:9> 'int' lvalue ParmVar 0x18063811740 'outl' 'int'
|   | | `-ImplicitCastExpr 0x180638166d8 <col:16, col:25> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x18063816690 <col:16, col:25> 'int' lvalue ->len 0x18063808168
|   | |     `-ImplicitCastExpr 0x18063816678 <col:16> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x18063816658 <col:16> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   | `-BinaryOperator 0x180638167b0 <line:345:9, col:25> 'int' '='
|   |   |-DeclRefExpr 0x18063816710 <col:9> 'int' lvalue ParmVar 0x18063811740 'outl' 'int'
|   |   `-ImplicitCastExpr 0x18063816798 <col:16, col:25> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x18063816768 <col:16, col:25> 'int' lvalue ->len 0x18063808168
|   |       `-ImplicitCastExpr 0x18063816750 <col:16> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x18063816730 <col:16> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   |-IfStmt 0x18063819a20 <line:347:5, line:380:5>
|   | |-BinaryOperator 0x180638168a8 <line:347:9, .//openssl//file_jk/before\test/ssltestlib.h:32:41> 'int' '!='
|   | | |-ImplicitCastExpr 0x18063816878 <.//openssl//file_jk/before\test\ssltestlib.c:347:9, col:18> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x18063816820 <col:9, col:18> 'unsigned int' lvalue ->type 0x18063808248
|   | | |   `-ImplicitCastExpr 0x18063816808 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x180638167e8 <col:9> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x18063816890 <.//openssl//file_jk/before\test/ssltestlib.h:32:41> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x18063816850 <col:41> 'int' 2
|   | `-CompoundStmt 0x180638199f8 <.//openssl//file_jk/before\test\ssltestlib.c:347:56, line:380:5>
|   |   |-BinaryOperator 0x18063816980 <line:354:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x180638168c8 <col:9> 'int' lvalue Var 0x18063811aa8 'rem' 'int'
|   |   | `-ImplicitCastExpr 0x18063816968 <col:15, col:24> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x18063816938 <col:15, col:24> 'int' lvalue ->len 0x18063808168
|   |   |     `-ImplicitCastExpr 0x18063816920 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18063816900 <col:15> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   |   |-BinaryOperator 0x18063816a58 <line:355:9, col:24> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x180638169a0 <col:9> 'unsigned char *' lvalue Var 0x18063811a10 'rec' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x18063816a40 <col:15, col:24> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x18063816a10 <col:15, col:24> 'unsigned char *' lvalue ->data 0x180638080f8
|   |   |     `-ImplicitCastExpr 0x180638169f8 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x180638169d8 <col:15> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   |   `-WhileStmt 0x180638199e0 <line:356:9, line:379:9>
|   |     |-BinaryOperator 0x18063816ad8 <line:356:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x18063816ac0 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x18063816a78 <col:16> 'int' lvalue Var 0x18063811aa8 'rem' 'int'
|   |     | `-IntegerLiteral 0x18063816a98 <col:22> 'int' 0
|   |     `-CompoundStmt 0x18063819988 <col:25, line:379:9>
|   |       |-IfStmt 0x18063816b98 <line:357:13, line:359:13>
|   |       | |-OpaqueValueExpr 0x18063816b80 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x18063816b68 <line:357:47, line:359:13>
|   |       |   `-ReturnStmt 0x18063816b58 <line:358:17, col:25>
|   |       |     `-UnaryOperator 0x18063816b40 <col:24, col:25> 'int' prefix '-'
|   |       |       `-IntegerLiteral 0x18063816b18 <col:25> 'int' 1
|   |       |-BinaryOperator 0x18063816de8 <line:360:13, col:56> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x18063816bb0 <col:13> 'unsigned int' lvalue Var 0x18063811cc0 'epoch' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x18063816dd0 <col:21, col:56> 'unsigned int' <IntegralCast>
|   |       |   `-BinaryOperator 0x18063816db0 <col:21, col:56> 'int' '|'
|   |       |     |-ParenExpr 0x18063816ce0 <col:21, col:40> 'int'
|   |       |     | `-BinaryOperator 0x18063816cc0 <col:22, col:39> 'int' '<<'
|   |       |     |   |-ImplicitCastExpr 0x18063816ca8 <col:22, col:34> 'int' <IntegralCast>
|   |       |     |   | `-ImplicitCastExpr 0x18063816c90 <col:22, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |   |   `-ArraySubscriptExpr 0x18063816c48 <col:22, col:34> 'unsigned char' lvalue
|   |       |     |   |     |-ImplicitCastExpr 0x18063816c30 <col:22> 'unsigned char *' <LValueToRValue>
|   |       |     |   |     | `-DeclRefExpr 0x18063816be8 <col:22> 'unsigned char *' lvalue Var 0x18063811a10 'rec' 'unsigned char *'
|   |       |     |   |     `-IntegerLiteral 0x18063816c08 <line:317:25> 'int' 4
|   |       |     |   `-IntegerLiteral 0x18063816c68 <line:360:39> 'int' 8
|   |       |     `-ImplicitCastExpr 0x18063816d98 <col:44, col:56> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x18063816d80 <col:44, col:56> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x18063816d60 <col:44, col:56> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x18063816d48 <col:44> 'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x18063816d00 <col:44> 'unsigned char *' lvalue Var 0x18063811a10 'rec' 'unsigned char *'
|   |       |           `-IntegerLiteral 0x18063816d20 <line:318:25> 'int' 5
|   |       |-IfStmt 0x18063817088 <line:361:13, line:364:13>
|   |       | |-BinaryOperator 0x18063816ec0 <line:361:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x18063816e90 <col:17> 'unsigned int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x18063816e08 <col:17> 'unsigned int' lvalue Var 0x18063811cc0 'epoch' 'unsigned int'
|   |       | | `-ImplicitCastExpr 0x18063816ea8 <col:26, col:31> 'unsigned int' <LValueToRValue>
|   |       | |   `-MemberExpr 0x18063816e60 <col:26, col:31> 'unsigned int' lvalue ->epoch 0x18063808ab8
|   |       | |     `-ImplicitCastExpr 0x18063816e48 <col:26> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x18063816e28 <col:26> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       | `-CompoundStmt 0x18063817068 <col:38, line:364:13>
|   |       |   |-BinaryOperator 0x18063816f80 <line:362:17, col:30> 'unsigned int' '='
|   |       |   | |-MemberExpr 0x18063816f18 <col:17, col:22> 'unsigned int' lvalue ->epoch 0x18063808ab8
|   |       |   | | `-ImplicitCastExpr 0x18063816f00 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x18063816ee0 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |   | `-ImplicitCastExpr 0x18063816f68 <col:30> 'unsigned int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x18063816f48 <col:30> 'unsigned int' lvalue Var 0x18063811cc0 'epoch' 'unsigned int'
|   |       |   `-BinaryOperator 0x18063817048 <line:363:17, col:32> 'unsigned int' '='
|   |       |     |-MemberExpr 0x18063816fd8 <col:17, col:22> 'unsigned int' lvalue ->currrec 0x18063808b28
|   |       |     | `-ImplicitCastExpr 0x18063816fc0 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x18063816fa0 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |     `-ImplicitCastExpr 0x18063817030 <col:32> 'unsigned int' <IntegralCast>
|   |       |       `-IntegerLiteral 0x18063817008 <col:32> 'int' 0
|   |       |-BinaryOperator 0x18063819198 <line:365:13, col:24> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x180638190e0 <col:13> 'unsigned int' lvalue Var 0x18063811b40 'seq' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x18063819180 <col:19, col:24> 'unsigned int' <LValueToRValue>
|   |       |   `-MemberExpr 0x18063819150 <col:19, col:24> 'unsigned int' lvalue ->currrec 0x18063808b28
|   |       |     `-ImplicitCastExpr 0x18063819138 <col:19> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x18063819118 <col:19> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-BinaryOperator 0x18063819230 <line:366:13, col:22> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x180638191b8 <col:13> 'unsigned int' lvalue Var 0x18063811bc0 'offset' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x18063819218 <col:22> 'unsigned int' <IntegralCast>
|   |       |   `-IntegerLiteral 0x180638191f0 <col:22> 'int' 0
|   |       |-DoStmt 0x18063819598 <line:367:13, line:371:29>
|   |       | |-CompoundStmt 0x180638194d8 <line:367:16, line:371:13>
|   |       | | |-BinaryOperator 0x180638193f0 <line:368:17, col:55> 'unsigned char' '='
|   |       | | | |-ArraySubscriptExpr 0x18063819320 <col:17, col:45> 'unsigned char' lvalue
|   |       | | | | |-ImplicitCastExpr 0x18063819308 <col:17> 'unsigned char *' <LValueToRValue>
|   |       | | | | | `-DeclRefExpr 0x18063819250 <col:17> 'unsigned char *' lvalue Var 0x18063811a10 'rec' 'unsigned char *'
|   |       | | | | `-BinaryOperator 0x180638192e8 <line:319:25, line:368:39> 'unsigned int' '-'
|   |       | | | |   |-ImplicitCastExpr 0x180638192d0 <line:319:25> 'unsigned int' <IntegralCast>
|   |       | | | |   | `-IntegerLiteral 0x18063819270 <col:25> 'int' 10
|   |       | | | |   `-ImplicitCastExpr 0x180638192b8 <line:368:39> 'unsigned int' <LValueToRValue>
|   |       | | | |     `-DeclRefExpr 0x18063819298 <col:39> 'unsigned int' lvalue Var 0x18063811bc0 'offset' 'unsigned int'
|   |       | | | `-ImplicitCastExpr 0x180638193d8 <col:49, col:55> 'unsigned char' <IntegralCast>
|   |       | | |   `-BinaryOperator 0x180638193b8 <col:49, col:55> 'unsigned int' '&'
|   |       | | |     |-ImplicitCastExpr 0x18063819388 <col:49> 'unsigned int' <LValueToRValue>
|   |       | | |     | `-DeclRefExpr 0x18063819340 <col:49> 'unsigned int' lvalue Var 0x18063811b40 'seq' 'unsigned int'
|   |       | | |     `-ImplicitCastExpr 0x180638193a0 <col:55> 'unsigned int' <IntegralCast>
|   |       | | |       `-IntegerLiteral 0x18063819360 <col:55> 'int' 255
|   |       | | |-CompoundAssignOperator 0x18063819470 <line:369:17, col:25> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | | |-DeclRefExpr 0x18063819410 <col:17> 'unsigned int' lvalue Var 0x18063811b40 'seq' 'unsigned int'
|   |       | | | `-IntegerLiteral 0x18063819430 <col:25> 'int' 8
|   |       | | `-UnaryOperator 0x180638194c0 <line:370:17, col:23> 'unsigned int' postfix '++'
|   |       | |   `-DeclRefExpr 0x180638194a0 <col:17> 'unsigned int' lvalue Var 0x18063811bc0 'offset' 'unsigned int'
|   |       | `-BinaryOperator 0x18063819578 <line:371:22, col:28> 'int' '>'
|   |       |   |-ImplicitCastExpr 0x18063819548 <col:22> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x18063819500 <col:22> 'unsigned int' lvalue Var 0x18063811b40 'seq' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x18063819560 <col:28> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x18063819520 <col:28> 'int' 0
|   |       |-UnaryOperator 0x18063819620 <line:372:13, col:25> 'unsigned int' postfix '++'
|   |       | `-MemberExpr 0x180638195f0 <col:13, col:18> 'unsigned int' lvalue ->currrec 0x18063808b28
|   |       |   `-ImplicitCastExpr 0x180638195d8 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x180638195b8 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638118c8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-CompoundAssignOperator 0x180638198d0 <line:377:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x18063819878 <col:13> 'unsigned char *' lvalue Var 0x18063811a10 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x180638198b8 <col:20> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18063819898 <col:20> 'unsigned int' lvalue Var 0x18063811c40 'len' 'unsigned int'
|   |       `-CompoundAssignOperator 0x18063819958 <line:378:13, col:20> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |         |-DeclRefExpr 0x18063819900 <col:13> 'int' lvalue Var 0x18063811aa8 'rem' 'int'
|   |         `-ImplicitCastExpr 0x18063819940 <col:20> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x18063819920 <col:20> 'unsigned int' lvalue Var 0x18063811c40 'len' 'unsigned int'
|   |-CallExpr 0x18063819ba0 <line:382:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x18063819b88 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18063819a38 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x180637c2668 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x18063819bf0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18063819bd8 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18063819a58 <col:12> 'char *' lvalue ParmVar 0x180638116c0 'out' 'char *'
|   | |-ImplicitCastExpr 0x18063819c20 <col:17, col:26> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18063819c08 <col:17, col:26> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x18063819ac8 <col:17, col:26> 'unsigned char *' lvalue ->data 0x180638080f8
|   | |     `-ImplicitCastExpr 0x18063819ab0 <col:17> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x18063819a90 <col:17> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x18063819c50 <col:32> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x18063819c38 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x18063819af8 <col:32> 'int' lvalue ParmVar 0x18063811740 'outl' 'int'
|   |-CallExpr 0x18063819d20 <line:384:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x18063819d08 <col:5> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18063819c68 <col:5> 'void (MEMPACKET *)' Function 0x18063808418 'mempacket_free' 'void (MEMPACKET *)'
|   | `-ImplicitCastExpr 0x18063819d48 <col:20> 'MEMPACKET *' <LValueToRValue>
|   |   `-DeclRefExpr 0x18063819c88 <col:20> 'MEMPACKET *' lvalue Var 0x18063811978 'thispkt' 'MEMPACKET *'
|   `-ReturnStmt 0x18063819d98 <line:386:5, col:12>
|     `-ImplicitCastExpr 0x18063819d80 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x18063819d60 <col:12> 'int' lvalue ParmVar 0x18063811740 'outl' 'int'
|-FunctionDecl 0x180638120c0 <line:389:1, line:468:1> line:389:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x18063819e30 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x18063819eb0 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x18063819f30 <col:53, col:57> col:57 used inl 'int'
| |-ParmVarDecl 0x18063819fb0 <col:62, col:66> col:66 used pktnum 'int'
| |-ParmVarDecl 0x1806381a030 <line:390:27, col:31> col:31 used type 'int'
| `-CompoundStmt 0x1806381a9f8 <line:391:1, line:468:1>
|   |-DeclStmt 0x18063812238 <line:392:5, col:48>
|   | `-VarDecl 0x180638121b0 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x180638123d8 <line:393:5, col:43>
|   | |-VarDecl 0x18063812260 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   | |-VarDecl 0x180638122d8 <col:5, col:26> col:26 used looppkt 'MEMPACKET *'
|   | `-VarDecl 0x18063812350 <col:5, col:36> col:36 used nextpkt 'MEMPACKET *'
|   |-DeclStmt 0x18063812470 <line:394:5, col:10>
|   | `-VarDecl 0x18063812408 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x180638125e8 <line:396:5, line:397:17>
|   | |-BinaryOperator 0x18063812578 <line:396:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18063812548 <.//openssl//file_jk/before\test\ssltestlib.c:396:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063812488 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638121b0 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x18063812560 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x18063812528 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18063812500 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x180638124c0 <col:26> 'int' 0
|   | `-ReturnStmt 0x180638125d8 <.//openssl//file_jk/before\test\ssltestlib.c:397:9, col:17>
|   |   `-UnaryOperator 0x180638125c0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x18063812598 <col:17> 'int' 1
|   |-IfStmt 0x18063812878 <line:400:5, line:405:5> has_else
|   | |-BinaryOperator 0x18063812678 <line:400:9, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x18063812660 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063812600 <col:9> 'int' lvalue ParmVar 0x18063819fb0 'pktnum' 'int'
|   | | `-IntegerLiteral 0x18063812638 <col:19> 'int' 0
|   | |-CompoundStmt 0x18063812780 <col:22, line:403:5>
|   | | `-IfStmt 0x18063812768 <line:401:9, line:402:21>
|   | |   |-ImplicitCastExpr 0x18063812700 <line:401:13, col:18> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x180638126d0 <col:13, col:18> 'unsigned int' lvalue ->noinject 0x18063808c78
|   | |   |   `-ImplicitCastExpr 0x180638126b8 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x18063812698 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638121b0 'ctx' 'MEMPACKET_TEST_CTX *'
|   | |   `-ReturnStmt 0x18063812758 <line:402:13, col:21>
|   | |     `-UnaryOperator 0x18063812740 <col:20, col:21> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x18063812718 <col:21> 'int' 1
|   | `-CompoundStmt 0x18063812860 <line:403:12, line:405:5>
|   |   `-BinaryOperator 0x18063812840 <line:404:9, col:25> 'unsigned int' '='
|   |     |-MemberExpr 0x180638127d0 <col:9, col:14> 'unsigned int' lvalue ->noinject 0x18063808c78
|   |     | `-ImplicitCastExpr 0x180638127b8 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x18063812798 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638121b0 'ctx' 'MEMPACKET_TEST_CTX *'
|   |     `-ImplicitCastExpr 0x18063812828 <col:25> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x18063812800 <col:25> 'int' 1
|   |-BinaryOperator 0x18063812a70 <line:407:5, col:47> 'MEMPACKET *' '='
|   | |-DeclRefExpr 0x180638128a0 <col:5> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x18063812a58 <col:15, col:47> 'MEMPACKET *' <IntegralToPointer>
|   |   `-CallExpr 0x18063812a30 <col:15, col:47> 'int'
|   |     |-ImplicitCastExpr 0x18063812a18 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x180638129c8 <col:15> 'int ()' Function 0x18063812900 'OPENSSL_malloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x180638129f8 <col:30, col:46> 'unsigned long long' sizeof 'MEMPACKET':'struct mempacket_st'
|   |-IfStmt 0x18063812bd8 <line:408:5, line:409:17>
|   | |-BinaryOperator 0x18063812b68 <line:408:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18063812b38 <.//openssl//file_jk/before\test\ssltestlib.c:408:9> 'MEMPACKET *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18063812a90 <col:9> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x18063812b50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | |   `-ParenExpr 0x18063812b18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18063812af0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18063812ab0 <col:26> 'int' 0
|   | `-ReturnStmt 0x18063812bc8 <.//openssl//file_jk/before\test\ssltestlib.c:409:9, col:17>
|   |   `-UnaryOperator 0x18063812bb0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x18063812b88 <col:17> 'int' 1
|   |-BinaryOperator 0x18063812d20 <line:411:5, col:39> 'unsigned char *' '='
|   | |-MemberExpr 0x18063812c28 <col:5, col:14> 'unsigned char *' lvalue ->data 0x180638080f8
|   | | `-ImplicitCastExpr 0x18063812c10 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18063812bf0 <col:5> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x18063812d08 <col:21, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x18063812cc8 <col:21, col:39> 'int'
|   |     |-ImplicitCastExpr 0x18063812cb0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x18063812c58 <col:21> 'int ()' Function 0x18063812900 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x18063812cf0 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x18063812c78 <col:36> 'int' lvalue ParmVar 0x18063819f30 'inl' 'int'
|   |-IfStmt 0x18063812f88 <line:412:5, line:415:5>
|   | |-BinaryOperator 0x18063812e60 <line:412:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18063812e30 <.//openssl//file_jk/before\test\ssltestlib.c:412:9, col:18> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x18063812d78 <col:9, col:18> 'unsigned char *' lvalue ->data 0x180638080f8
|   | | |   `-ImplicitCastExpr 0x18063812d60 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x18063812d40 <col:9> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x18063812e48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x18063812e10 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18063812de8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18063812da8 <col:26> 'int' 0
|   | `-CompoundStmt 0x18063812f68 <.//openssl//file_jk/before\test\ssltestlib.c:412:32, line:415:5>
|   |   |-CallExpr 0x18063812ed8 <line:413:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x18063812ec0 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063812e80 <col:9> 'void (MEMPACKET *)' Function 0x18063808418 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x18063812f00 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18063812ea0 <col:24> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x18063812f58 <line:414:9, col:17>
|   |     `-UnaryOperator 0x18063812f40 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x18063812f18 <col:17> 'int' 1
|   |-CallExpr 0x18063813100 <line:417:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x180638130e8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18063812fa0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x180637c2668 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x18063813150 <col:12, col:21> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18063813138 <col:12, col:21> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x18063812ff8 <col:12, col:21> 'unsigned char *' lvalue ->data 0x180638080f8
|   | |     `-ImplicitCastExpr 0x18063812fe0 <col:12> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x18063812fc0 <col:12> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | |-ImplicitCastExpr 0x18063813180 <col:27> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18063813168 <col:27> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18063813028 <col:27> 'const char *' lvalue ParmVar 0x18063819eb0 'in' 'const char *'
|   | `-ImplicitCastExpr 0x180638131b0 <col:31> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x18063813198 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x18063813080 <col:31> 'int' lvalue ParmVar 0x18063819f30 'inl' 'int'
|   |-BinaryOperator 0x18063813268 <line:418:5, col:20> 'int' '='
|   | |-MemberExpr 0x18063813200 <col:5, col:14> 'int' lvalue ->len 0x18063808168
|   | | `-ImplicitCastExpr 0x180638131e8 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x180638131c8 <col:5> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x18063813250 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x18063813230 <col:20> 'int' lvalue ParmVar 0x18063819f30 'inl' 'int'
|   |-BinaryOperator 0x180638134b8 <line:419:5, col:64> 'unsigned int' '='
|   | |-MemberExpr 0x180638132c0 <col:5, col:14> 'unsigned int' lvalue ->num 0x180638081d8
|   | | `-ImplicitCastExpr 0x180638132a8 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18063813288 <col:5> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | `-ConditionalOperator 0x18063813488 <col:20, col:64> 'unsigned int'
|   |   |-ParenExpr 0x18063813370 <col:20, col:32> 'int'
|   |   | `-BinaryOperator 0x18063813350 <col:21, col:31> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x18063813338 <col:21> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x180638132f0 <col:21> 'int' lvalue ParmVar 0x18063819fb0 'pktnum' 'int'
|   |   |   `-IntegerLiteral 0x18063813310 <col:31> 'int' 0
|   |   |-CStyleCastExpr 0x180638133e0 <col:36, col:50> 'unsigned int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x180638133c8 <col:50> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x18063813390 <col:50> 'int' lvalue ParmVar 0x18063819fb0 'pktnum' 'int'
|   |   `-ImplicitCastExpr 0x18063813470 <col:59, col:64> 'unsigned int' <LValueToRValue>
|   |     `-MemberExpr 0x18063813440 <col:59, col:64> 'unsigned int' lvalue ->lastpkt 0x18063808c08
|   |       `-ImplicitCastExpr 0x18063813428 <col:59> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x18063813408 <col:59> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638121b0 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-BinaryOperator 0x180638135a8 <line:420:5, col:21> 'unsigned int' '='
|   | |-MemberExpr 0x18063813510 <col:5, col:14> 'unsigned int' lvalue ->type 0x18063808248
|   | | `-ImplicitCastExpr 0x180638134f8 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x180638134d8 <col:5> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x18063813590 <col:21> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x18063813578 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x18063813540 <col:21> 'int' lvalue ParmVar 0x1806381a030 'type' 'int'
|   |-IfStmt 0x1806381a880 <line:459:5, line:462:5>
|   | |-OpaqueValueExpr 0x1806381a868 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1806381a848 <line:459:49, line:462:5>
|   |   |-CallExpr 0x1806381a7b8 <line:460:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x1806381a7a0 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1806381a760 <col:9> 'void (MEMPACKET *)' Function 0x18063808418 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x1806381a7e0 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1806381a780 <col:24> 'MEMPACKET *' lvalue Var 0x18063812260 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x1806381a838 <line:461:9, col:17>
|   |     `-UnaryOperator 0x1806381a820 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1806381a7f8 <col:17> 'int' 1
|   |-IfStmt 0x1806381a998 <line:464:5, line:465:21>
|   | |-BinaryOperator 0x1806381a8f8 <line:464:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x1806381a8e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1806381a898 <col:9> 'int' lvalue ParmVar 0x18063819fb0 'pktnum' 'int'
|   | | `-IntegerLiteral 0x1806381a8b8 <col:18> 'int' 0
|   | `-UnaryOperator 0x1806381a980 <line:465:9, col:21> 'unsigned int' postfix '++'
|   |   `-MemberExpr 0x1806381a950 <col:9, col:14> 'unsigned int' lvalue ->lastpkt 0x18063808c08
|   |     `-ImplicitCastExpr 0x1806381a938 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1806381a918 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x180638121b0 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x1806381a9e8 <line:467:5, col:12>
|     `-ImplicitCastExpr 0x1806381a9d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1806381a9b0 <col:12> 'int' lvalue ParmVar 0x18063819f30 'inl' 'int'
|-FunctionDecl 0x1806381ac48 <line:470:1, line:473:1> line:470:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1806381aaa0 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x1806381ab20 <col:43, col:55> col:55 used in 'const char *'
| |-ParmVarDecl 0x1806381aba0 <col:59, col:63> col:63 used inl 'int'
| `-CompoundStmt 0x1806381adf0 <line:471:1, line:473:1>
|-FunctionDecl 0x1806381b048 <line:475:1, line:513:1> line:475:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1806381ae18 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x1806381ae98 <col:43, col:47> col:47 used cmd 'int'
| |-ParmVarDecl 0x1806381af18 <col:52, col:57> col:57 used num 'long'
| |-ParmVarDecl 0x1806381af98 <col:62, col:68> col:68 ptr 'void *'
| `-CompoundStmt 0x18063815d90 <line:476:1, line:513:1>
|   |-DeclStmt 0x18063815198 <line:477:5, col:17>
|   | `-VarDecl 0x180638150f0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x18063815180 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x18063815158 <col:16> 'int' 1
|   |-DeclStmt 0x18063815248 <line:478:5, col:48>
|   | `-VarDecl 0x180638151c0 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x180638152d8 <line:479:5, col:23>
|   | `-VarDecl 0x18063815270 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-SwitchStmt 0x18063815340 <line:481:5, line:511:5>
|   | |-ImplicitCastExpr 0x18063815328 <line:481:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x180638152f0 <col:13> 'int' lvalue ParmVar 0x1806381ae98 'cmd' 'int'
|   | `-CompoundStmt 0x18063815ce0 <col:18, line:511:5>
|   |   |-BreakStmt 0x18063815520 <line:484:9>
|   |   |-BreakStmt 0x18063815658 <line:487:9>
|   |   |-BreakStmt 0x18063815800 <line:490:9>
|   |   |-BinaryOperator 0x18063815850 <line:492:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x18063815808 <col:9> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|   |   | `-IntegerLiteral 0x18063815828 <col:15> 'long' 0
|   |   |-BreakStmt 0x18063815870 <line:493:9>
|   |   |-IfStmt 0x18063815b80 <line:496:9, line:499:28> has_else
|   |   | |-BinaryOperator 0x18063815a08 <line:496:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x180638159d8 <.//openssl//file_jk/before\test\ssltestlib.c:496:13> 'MEMPACKET *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18063815930 <col:13> 'MEMPACKET *' lvalue Var 0x18063815270 'thispkt' 'MEMPACKET *'
|   |   | | `-ImplicitCastExpr 0x180638159f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   |   | |   `-ParenExpr 0x180638159b8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x18063815990 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x18063815950 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x18063815a88 <.//openssl//file_jk/before\test\ssltestlib.c:497:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x18063815a28 <col:13> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x18063815a70 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x18063815a48 <col:19> 'int' 0
|   |   | `-BinaryOperator 0x18063815b60 <line:499:13, col:28> 'long' '='
|   |   |   |-DeclRefExpr 0x18063815aa8 <col:13> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x18063815b48 <col:19, col:28> 'long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x18063815b30 <col:19, col:28> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x18063815b00 <col:19, col:28> 'int' lvalue ->len 0x18063808168
|   |   |         `-ImplicitCastExpr 0x18063815ae8 <col:19> 'MEMPACKET *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x18063815ac8 <col:19> 'MEMPACKET *' lvalue Var 0x18063815270 'thispkt' 'MEMPACKET *'
|   |   |-BreakStmt 0x18063815ba8 <line:500:9>
|   |   |-BinaryOperator 0x18063815c10 <line:502:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x18063815bb0 <col:9> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x18063815bf8 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x18063815bd0 <col:15> 'int' 1
|   |   |-BreakStmt 0x18063815c30 <line:503:9>
|   |   |-DefaultStmt 0x18063815cb8 <line:508:5, line:509:15>
|   |   | `-BinaryOperator 0x18063815c98 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x18063815c38 <col:9> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x18063815c80 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x18063815c58 <col:15> 'int' 0
|   |   `-BreakStmt 0x18063815cd8 <line:510:9>
|   `-ReturnStmt 0x18063815d80 <line:512:5, col:12>
|     `-ImplicitCastExpr 0x18063815d68 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x18063815d48 <col:12> 'long' lvalue Var 0x180638150f0 'ret' 'long'
|-FunctionDecl 0x18063815f88 <line:515:1, line:519:1> line:515:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18063815de0 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x18063815e60 <col:42, col:48> col:48 buf 'char *'
| |-ParmVarDecl 0x18063815ee0 <col:53, col:57> col:57 size 'int'
| `-CompoundStmt 0x180638170d0 <line:516:1, line:519:1>
|   `-ReturnStmt 0x180638170c0 <line:518:5, col:13>
|     `-UnaryOperator 0x18063816080 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x18063816058 <col:13> 'int' 1
|-FunctionDecl 0x18063817250 <line:521:1, line:524:1> line:521:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x18063817130 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x180638171b0 <col:42, col:54> col:54 used str 'const char *'
| `-CompoundStmt 0x18063817400 <line:522:1, line:524:1>
|-FunctionDecl 0x18063817888 <line:526:1, line:593:1> line:526:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x18063817428 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x180638174a8 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x18063817528 <line:527:25, col:29> col:29 used min_proto_version 'int'
| |-ParmVarDecl 0x180638175a8 <col:48, col:52> col:52 used max_proto_version 'int'
| |-ParmVarDecl 0x18063817630 <line:528:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x180638176b8 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x18063817738 <col:57, col:63> col:63 used certfile 'char *'
| |-ParmVarDecl 0x180638177b8 <line:529:25, col:31> col:31 used privkeyfile 'char *'
| `-CompoundStmt 0x18063814708 <line:530:1, line:593:1>
|   |-IfStmt 0x18063817f60 <line:537:5, line:540:5>
|   | |-OpaqueValueExpr 0x18063817f48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063817f28 <line:537:67, line:540:5>
|   |   |-CallExpr 0x18063817e68 <line:538:9, col:44> 'int'
|   |   | |-ImplicitCastExpr 0x18063817e50 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063817de0 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063817ea8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x18063817e90 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063817e00 <col:16> 'char [26]' lvalue "Failed to create SSL_CTX\n"
|   |   `-GotoStmt 0x18063817f10 <line:539:9, col:14> 'err' 0x18063817ec0
|   |-IfStmt 0x18063818358 <line:542:5, line:546:5>
|   | |-OpaqueValueExpr 0x18063818340 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063818320 <line:543:74, line:546:5>
|   |   |-CallExpr 0x180638182b0 <line:544:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x18063818298 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x180638181d8 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x180638182f0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x180638182d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063818238 <col:16> 'char [44]' lvalue "Unable to set server min protocol versions\n"
|   |   `-GotoStmt 0x18063818308 <line:545:9, col:14> 'err' 0x18063817ec0
|   |-IfStmt 0x18063818678 <line:547:5, line:551:5>
|   | |-OpaqueValueExpr 0x18063818660 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063818640 <line:548:74, line:551:5>
|   |   |-CallExpr 0x180638185d0 <line:549:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x180638185b8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063818538 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063818610 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x180638185f8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063818558 <col:16> 'char [44]' lvalue "Unable to set server max protocol versions\n"
|   |   `-GotoStmt 0x18063818628 <line:550:9, col:14> 'err' 0x18063817ec0
|   |-IfStmt 0x18063818b80 <line:553:5, line:564:5>
|   | |-OpaqueValueExpr 0x18063818b68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063818b48 <line:553:28, line:564:5>
|   |   |-IfStmt 0x18063818918 <line:554:9, line:558:9>
|   |   | |-OpaqueValueExpr 0x18063818900 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x180638188e0 <line:555:78, line:558:9>
|   |   |   |-CallExpr 0x18063818870 <line:556:13, col:66> 'int'
|   |   |   | |-ImplicitCastExpr 0x18063818858 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x180638187d8 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x180638188b0 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x18063818898 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x180638187f8 <col:20> 'char [44]' lvalue "Unable to set client max protocol versions\n"
|   |   |   `-GotoStmt 0x180638188c8 <line:557:13, col:18> 'err' 0x18063817ec0
|   |   `-IfStmt 0x18063818b30 <line:559:9, line:563:9>
|   |     |-OpaqueValueExpr 0x18063818b18 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x18063818af8 <line:560:78, line:563:9>
|   |       |-CallExpr 0x18063818a88 <line:561:13, col:66> 'int'
|   |       | |-ImplicitCastExpr 0x18063818a70 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x180638189f0 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x18063818ac8 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x18063818ab0 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x18063818a10 <col:20> 'char [44]' lvalue "Unable to set client min protocol versions\n"
|   |       `-GotoStmt 0x18063818ae0 <line:562:13, col:18> 'err' 0x18063817ec0
|   |-IfStmt 0x18063818e80 <line:566:5, line:570:5>
|   | |-OpaqueValueExpr 0x18063818e68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063818e48 <line:567:62, line:570:5>
|   |   |-CallExpr 0x18063818dd8 <line:568:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x18063818dc0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063818d08 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063818e18 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x18063818e00 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063818d68 <col:16> 'char [35]' lvalue "Failed to load server certificate\n"
|   |   `-GotoStmt 0x18063818e30 <line:569:9, col:14> 'err' 0x18063817ec0
|   |-IfStmt 0x180638140f0 <line:571:5, line:574:5>
|   | |-OpaqueValueExpr 0x180638140d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x180638140c0 <line:572:61, line:574:5>
|   |   `-CallExpr 0x18063819098 <line:573:9, col:53> 'int'
|   |     |-ImplicitCastExpr 0x18063819080 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x18063819008 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x180638140a8 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x18063814090 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x18063819028 <col:16> 'char [35]' lvalue "Failed to load server private key\n"
|   |-IfStmt 0x18063814370 <line:575:5, line:578:5>
|   | |-OpaqueValueExpr 0x18063814358 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063814338 <line:575:52, line:578:5>
|   |   |-CallExpr 0x180638142c8 <line:576:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x180638142b0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063814240 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063814308 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x180638142f0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063814260 <col:16> 'char [29]' lvalue "Failed to check private key\n"
|   |   `-GotoStmt 0x18063814320 <line:577:9, col:14> 'err' 0x18063817ec0
|   |-ReturnStmt 0x18063814570 <line:588:5, col:12>
|   | `-IntegerLiteral 0x18063814548 <col:12> 'int' 1
|   |-LabelStmt 0x18063814698 <line:589:2, col:5> 'err'
|   | `-NullStmt 0x18063814690 <col:5>
|   `-ReturnStmt 0x180638146f8 <line:592:5, col:12>
|     `-IntegerLiteral 0x180638146d0 <col:12> 'int' 0
|-FunctionDecl 0x18063814ad0 <line:600:1, line:670:1> line:600:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x18063814780 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x18063814800 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x18063814888 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x18063814910 <line:601:27, col:33> col:33 invalid cssl 'int **'
| |-ParmVarDecl 0x18063814990 <col:39, col:44> col:44 invalid s_to_c_fbio 'int *'
| |-ParmVarDecl 0x18063814a10 <col:57, col:62> col:62 invalid c_to_s_fbio 'int *'
| `-CompoundStmt 0x18063822720 <line:602:1, line:670:1>
|   |-IfStmt 0x18063821270 <line:615:5, line:618:5>
|   | |-OpaqueValueExpr 0x18063821258 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063821238 <line:615:49, line:618:5>
|   |   |-CallExpr 0x18063821178 <line:616:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x18063821160 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063815018 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x180638211b8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x180638211a0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063815038 <col:16> 'char [29]' lvalue "Failed to create SSL object\n"
|   |   `-GotoStmt 0x18063821220 <line:617:9, col:14> 'error' 0x180638211d0
|   |-IfStmt 0x18063821760 <line:620:5, line:626:5> has_else
|   | |-OpaqueValueExpr 0x18063821748 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x180638214c8 <line:620:33, line:623:5>
|   | `-CompoundStmt 0x18063821738 <col:12, line:626:5>
|   |-IfStmt 0x180638219c8 <line:627:5, line:630:5>
|   | |-OpaqueValueExpr 0x180638219b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063821990 <line:627:51, line:630:5>
|   |   |-CallExpr 0x18063821920 <line:628:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x18063821908 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063821898 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063821960 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x18063821948 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x180638218b8 <col:16> 'char [27]' lvalue "Failed to create mem BIOs\n"
|   |   `-GotoStmt 0x18063821978 <line:629:9, col:14> 'error' 0x180638211d0
|   |-IfStmt 0x18063821e98 <line:636:5, line:639:5>
|   | |-OpaqueValueExpr 0x18063821e80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x18063821e60 <line:636:51, line:639:5>
|   |   |-CallExpr 0x18063821df0 <line:637:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x18063821dd8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18063821d30 <col:9> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x18063821e30 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x18063821e18 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x18063821d88 <col:16> 'char [31]' lvalue "Failed to create chained BIOs\n"
|   |   `-GotoStmt 0x18063821e48 <line:638:9, col:14> 'error' 0x180638211d0
|   |-ReturnStmt 0x18063822418 <line:659:5, col:12>
|   | `-IntegerLiteral 0x180638223f0 <col:12> 'int' 1
|   |-LabelStmt 0x18063822540 <line:661:2, col:7> 'error'
|   | `-NullStmt 0x18063822538 <col:7>
|   `-ReturnStmt 0x18063822710 <line:669:5, col:12>
|     `-IntegerLiteral 0x180638226e8 <col:12> 'int' 0
`-FunctionDecl 0x180638228a0 <line:672:1, line:710:1> line:672:5 invalid create_ssl_connection 'int (int *, int *)'
  |-ParmVarDecl 0x18063822780 <col:27, col:32> col:32 invalid serverssl 'int *'
  |-ParmVarDecl 0x18063822800 <col:43, col:48> col:48 invalid clientssl 'int *'
  `-CompoundStmt 0x1806381f0b8 <line:673:1, line:710:1>
    |-DeclStmt 0x18063822c38 <line:674:5, col:48>
    | |-VarDecl 0x18063822980 <col:5, col:17> col:9 used retc 'int' cinit
    | | `-UnaryOperator 0x18063822a10 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x180638229e8 <col:17> 'int' 1
    | |-VarDecl 0x18063822a40 <col:5, col:28> col:20 used rets 'int' cinit
    | | `-UnaryOperator 0x18063822ad0 <col:27, col:28> 'int' prefix '-'
    | |   `-IntegerLiteral 0x18063822aa8 <col:28> 'int' 1
    | |-VarDecl 0x18063822b00 <col:5, col:31> col:31 used err 'int'
    | `-VarDecl 0x18063822b80 <col:5, col:47> col:36 used abortctr 'int' cinit
    |   `-IntegerLiteral 0x18063822be8 <col:47> 'int' 0
    |-DeclStmt 0x18063822db8 <line:675:5, col:37>
    | |-VarDecl 0x18063822c68 <col:5, col:21> col:9 used clienterr 'int' cinit
    | | `-IntegerLiteral 0x18063822cd0 <col:21> 'int' 0
    | `-VarDecl 0x18063822d10 <col:5, col:36> col:24 used servererr 'int' cinit
    |   `-IntegerLiteral 0x18063822d78 <col:36> 'int' 0
    |-DoStmt 0x1806381f060 <line:677:5, line:707:35>
    | |-CompoundStmt 0x1806381ef10 <line:677:8, line:707:5>
    | | |-IfStmt 0x1806381e558 <line:685:9, line:688:9>
    | | | |-OpaqueValueExpr 0x1806381e540 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x1806381e520 <line:685:68, line:688:9>
    | | |   |-CallExpr 0x1806381e420 <line:686:13, col:62> 'int'
    | | |   | |-ImplicitCastExpr 0x1806381e408 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x1806381e358 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x1806381e470 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x1806381e458 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x1806381e378 <col:20> 'char [29]' lvalue "SSL_connect() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x1806381e488 <col:53> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x1806381e3b0 <col:53> 'int' lvalue Var 0x18063822980 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x1806381e4a0 <col:59> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x1806381e3d0 <col:59> 'int' lvalue Var 0x18063822b00 'err' 'int'
    | | |   `-BinaryOperator 0x1806381e500 <line:687:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x1806381e4b8 <col:13> 'int' lvalue Var 0x18063822c68 'clienterr' 'int'
    | | |     `-IntegerLiteral 0x1806381e4d8 <col:25> 'int' 1
    | | |-IfStmt 0x1806381ec00 <line:697:9, line:700:9>
    | | | |-OpaqueValueExpr 0x1806381ebe8 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x1806381ebc8 <line:697:68, line:700:9>
    | | |   |-CallExpr 0x1806381eac8 <line:698:13, col:61> 'int'
    | | |   | |-ImplicitCastExpr 0x1806381eab0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x1806381ea00 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x1806381eb18 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x1806381eb00 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x1806381ea20 <col:20> 'char [28]' lvalue "SSL_accept() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x1806381eb30 <col:52> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x1806381ea58 <col:52> 'int' lvalue Var 0x18063822980 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x1806381eb48 <col:58> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x1806381ea78 <col:58> 'int' lvalue Var 0x18063822b00 'err' 'int'
    | | |   `-BinaryOperator 0x1806381eba8 <line:699:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x1806381eb60 <col:13> 'int' lvalue Var 0x18063822d10 'servererr' 'int'
    | | |     `-IntegerLiteral 0x1806381eb80 <col:25> 'int' 1
    | | |-IfStmt 0x1806381ece0 <line:701:9, line:702:20>
    | | | |-BinaryOperator 0x1806381ec88 <line:701:13, col:26> 'int' '&&'
    | | | | |-ImplicitCastExpr 0x1806381ec58 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x1806381ec18 <col:13> 'int' lvalue Var 0x18063822c68 'clienterr' 'int'
    | | | | `-ImplicitCastExpr 0x1806381ec70 <col:26> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1806381ec38 <col:26> 'int' lvalue Var 0x18063822d10 'servererr' 'int'
    | | | `-ReturnStmt 0x1806381ecd0 <line:702:13, col:20>
    | | |   `-IntegerLiteral 0x1806381eca8 <col:20> 'int' 0
    | | `-IfStmt 0x1806381eef8 <line:703:9, line:706:9>
    | |   |-BinaryOperator 0x1806381ed70 <line:703:13, line:595:21> 'int' '=='
    | |   | |-UnaryOperator 0x1806381ed30 <line:703:13, col:15> 'int' prefix '++'
    | |   | | `-DeclRefExpr 0x1806381ecf8 <col:15> 'int' lvalue Var 0x18063822b80 'abortctr' 'int'
    | |   | `-IntegerLiteral 0x1806381ed48 <line:595:21> 'int' 100000
    | |   `-CompoundStmt 0x1806381eed8 <line:703:37, line:706:9>
    | |     |-CallExpr 0x1806381ee48 <line:704:13, col:40> 'int'
    | |     | |-ImplicitCastExpr 0x1806381ee30 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x1806381ed90 <col:13> 'int (const char *, ...)' Function 0x1806385f7c8 'printf' 'int (const char *, ...)'
    | |     | `-ImplicitCastExpr 0x1806381ee88 <col:20> 'const char *' <NoOp>
    | |     |   `-ImplicitCastExpr 0x1806381ee70 <col:20> 'char *' <ArrayToPointerDecay>
    | |     |     `-StringLiteral 0x1806381ede8 <col:20> 'char [18]' lvalue "No progress made\n"
    | |     `-ReturnStmt 0x1806381eec8 <line:705:13, col:20>
    | |       `-IntegerLiteral 0x1806381eea0 <col:20> 'int' 0
    | `-BinaryOperator 0x1806381f040 <line:707:14, col:34> 'int' '||'
    |   |-BinaryOperator 0x1806381efa0 <col:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x1806381ef88 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1806381ef40 <col:14> 'int' lvalue Var 0x18063822980 'retc' 'int'
    |   | `-IntegerLiteral 0x1806381ef60 <col:21> 'int' 0
    |   `-BinaryOperator 0x1806381f020 <col:26, col:34> 'int' '<='
    |     |-ImplicitCastExpr 0x1806381f008 <col:26> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1806381efc0 <col:26> 'int' lvalue Var 0x18063822a40 'rets' 'int'
    |     `-IntegerLiteral 0x1806381efe0 <col:34> 'int' 0
    `-ReturnStmt 0x1806381f0a8 <line:709:5, col:12>
      `-IntegerLiteral 0x1806381f080 <col:12> 'int' 1
