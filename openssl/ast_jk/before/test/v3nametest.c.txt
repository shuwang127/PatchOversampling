TranslationUnitDecl 0x237a3032778 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x237a3033010 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x237a3032d10 '__int128'
|-TypedefDecl 0x237a3033080 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x237a3032d30 'unsigned __int128'
|-TypedefDecl 0x237a30333b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x237a3033170 'struct __NSConstantString_tag'
|   `-Record 0x237a30330d8 '__NSConstantString_tag'
|-TypedefDecl 0x237a3033428 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x237a3032950 'unsigned long long'
|-TypedefDecl 0x237a30334c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x237a3033480 'char *'
|   `-BuiltinType 0x237a3032810 'char'
|-TypedefDecl 0x237a3033530 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x237a3033480 'char *'
|   `-BuiltinType 0x237a3032810 'char'
|-TypedefDecl 0x237a30335d0 <D:\Microsoft Visual Studio 12.0\VC\include\sys/types.h:40:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x237a3032890 'long'
|-TypedefDecl 0x237a3033640 <line:45:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x237a30328b0 'long long'
|-TypedefDecl 0x237a30336d0 <line:53:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x237a30336a0 '__time64_t' sugar
|   |-Typedef 0x237a3033640 '__time64_t'
|   `-BuiltinType 0x237a30328b0 'long long'
|-TypedefDecl 0x237a489df40 <line:61:1, col:24> col:24 _ino_t 'unsigned short'
| `-BuiltinType 0x237a30328f0 'unsigned short'
|-TypedefDecl 0x237a489dfb0 <line:65:1, col:24> col:24 ino_t 'unsigned short'
| `-BuiltinType 0x237a30328f0 'unsigned short'
|-TypedefDecl 0x237a489e020 <line:74:1, col:22> col:22 _dev_t 'unsigned int'
| `-BuiltinType 0x237a3032910 'unsigned int'
|-TypedefDecl 0x237a489e090 <line:78:1, col:22> col:22 dev_t 'unsigned int'
| `-BuiltinType 0x237a3032910 'unsigned int'
|-TypedefDecl 0x237a489e100 <line:87:1, col:14> col:14 _off_t 'long'
| `-BuiltinType 0x237a3032890 'long'
|-TypedefDecl 0x237a489e170 <line:91:1, col:14> col:14 off_t 'long'
| `-BuiltinType 0x237a3032890 'long'
|-TypedefDecl 0x237a489e290 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x237a3032950 'unsigned long long'
|-TypedefDecl 0x237a489e300 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x237a3033480 'char *'
|   `-BuiltinType 0x237a3032810 'char'
|-FunctionDecl 0x237a489e550 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x237a489e5f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x237a489e660 <col:21> Implicit
|-FunctionDecl 0x237a489e6b8 prev 0x237a489e550 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x237a489e3e8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x237a489e7a8 <col:21> Inherited Implicit
|-TypedefDecl 0x237a489e7e8 prev 0x237a3033428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x237a3032950 'unsigned long long'
|-TypedefDecl 0x237a489e890 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x237a489e860 'size_t' sugar
|   |-Typedef 0x237a489e7e8 'size_t'
|   `-BuiltinType 0x237a3032950 'unsigned long long'
|-TypedefDecl 0x237a489e900 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x237a30328b0 'long long'
|-TypedefDecl 0x237a489e970 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x237a30328b0 'long long'
|-TypedefDecl 0x237a489e9e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x237a30328f0 'unsigned short'
|-TypedefDecl 0x237a489ea50 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x237a30328f0 'unsigned short'
|-TypedefDecl 0x237a489eac0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x237a30328f0 'unsigned short'
|-TypedefDecl 0x237a489eb30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x237a3032870 'int'
|-FunctionDecl 0x237a489eca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x237a49b19b0 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x237a49b1f60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x237a49b1af8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x237a49b1b70 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x237a49b1be8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x237a49b1c68 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x237a49b1d00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x237a49b2040 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x237a49b2100 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x237a49b2270 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x237a49b2220 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x237a49b21c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x237a49b20e0 'struct threadlocaleinfostruct'
|       `-Record 0x237a49c2db8 'threadlocaleinfostruct'
|-TypedefDecl 0x237a49b2380 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x237a49b2330 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x237a49b22d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x237a49b21a0 'struct threadmbcinfostruct'
|       `-Record 0x237a49b2100 'threadmbcinfostruct'
|-RecordDecl 0x237a49b23d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x237a49b2490 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x237a49b2550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x237a49b25e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x237a49b2670 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x237a49b2728 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x237a49b26d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x237a49b2530 'struct localeinfo_struct'
|     `-Record 0x237a49b2490 'localeinfo_struct'
|-TypedefDecl 0x237a49b2800 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x237a49b27b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x237a49b26d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x237a49b2530 'struct localeinfo_struct'
|       `-Record 0x237a49b2490 'localeinfo_struct'
|-RecordDecl 0x237a49b2878 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x237a49b2930 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x237a49c2ac0 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x237a49c2b88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x237a49c2c20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x237a49c2c90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x237a49c2d48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x237a49c2cf0 'struct localerefcount' sugar
|   `-RecordType 0x237a49b2910 'struct localerefcount'
|     `-Record 0x237a49b2878 'localerefcount'
|-RecordDecl 0x237a49c2db8 prev 0x237a49b2040 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x237a49c2e38 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x237a49c2eb0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x237a49c2f20 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x237a49c2f90 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x237a49c3000 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x237a49c31c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x237a49c3238 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x237a49c32a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x237a49c3318 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x237a49c3388 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x237a49c33f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x237a49c3450 parent 0x237a3032778 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x237a49c35e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x237a49c3650 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x237a49c36c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x237a49c3730 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x237a49c37d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x237a49c3840 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x237a49c3950 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x237a49bda70 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x237a49bdb28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x237a49bdad0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x237a49b20e0 'struct threadlocaleinfostruct'
|     `-Record 0x237a49c2db8 'threadlocaleinfostruct'
|-FunctionDecl 0x237a49bdf60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x237a49bdbb0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x237a49bdc60 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x237a49bdce0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x237a49bdd58 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49be328 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x237a49be3c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x237a49be430 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x237a49be498 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49be518 prev 0x237a49be328 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x237a49be050 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x237a49be0d0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x237a49be148 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49be8d8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x237a49be600 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x237a49be680 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x237a49be6f8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49bbd70 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49be9c0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x237a49bba50 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x237a49bbac8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49bbb60 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49bc078 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49bc118 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x237a49bc180 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x237a49bc1e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49bc268 prev 0x237a49bc078 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x237a49bbe60 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x237a49bbee0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x237a49bbf58 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49bc628 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49bc6c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x237a49bc730 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x237a49bc798 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49bc818 prev 0x237a49bc628 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x237a49bc350 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x237a49bc3d0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x237a49bc448 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49c0d18 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x237a49bc928 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x237a49bc9c0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a49c0aa0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x237a49c0b18 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a49c10d8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x237a49c1178 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x237a49c11e0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x237a49c1248 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49c12c8 prev 0x237a49c10d8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x237a49c0e08 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x237a49c0e88 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x237a49c0f00 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49c1748 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x237a49c17e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x237a49c1850 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x237a49c18b8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x237a49c1920 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49c19a8 prev 0x237a49c1748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x237a49c1490 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x237a49c1510 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x237a49c1590 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x237a49c1608 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49bca60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x237a49bce40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x237a49bcc28 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x237a49bcca8 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x237a49bcd20 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49bcef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x237a49bd2f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x237a49bd020 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x237a49bd098 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49bd118 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x237a49bd6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x237a49bd4d0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x237a49bd550 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x237a49bd770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49c4c00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x237a49bd8b8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x237a49bd930 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x237a49bd9b0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x237a49c4fd0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x237a49c5070 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x237a49c50d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49c5150 prev 0x237a49c4fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x237a49c4de0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x237a49c4e60 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x237a49c5200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49c5558 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x237a49c5348 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x237a49c53c0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x237a49c5440 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x237a49c5880 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x237a49c5920 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x237a49c5988 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49c5a00 prev 0x237a49c5880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x237a49c5700 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x237a49c5780 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x237a49bea80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49bedb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x237a49bee50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49beeb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49bef30 prev 0x237a49bedb0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49bebc8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x237a49bec48 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x237a49bf180 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x237a49bf220 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49bf290 prev 0x237a49bf180 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x237a49bf010 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x237a49bf588 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x237a49bf368 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x237a49bf3e0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49bf7d8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x237a49bf668 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x237a49bf6e0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x237a49c1b38 <line:131:1, line:133:1>
|   `-ReturnStmt 0x237a49c1b28 <line:132:5, col:51>
|     `-ConditionalOperator 0x237a49c1af8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x237a49bf938 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x237a49bf918 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x237a49bf8e8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x237a49bf8a0 <col:13> 'const char *' lvalue ParmVar 0x237a49bf668 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x237a49bf900 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x237a49bf8c0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x237a49c1ae0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x237a49bf958 <col:24> 'int' 0
|       `-CallExpr 0x237a49bfa50 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x237a49bfa38 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x237a49bf980 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x237a49bf588 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x237a49c1ab0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x237a49bf9a0 <col:36> 'const char *' lvalue ParmVar 0x237a49bf668 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x237a49c1ac8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x237a49bf9c0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x237a49bf6e0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49c1e10 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x237a49c1b68 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x237a49c1be0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a49c1c60 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x237a49c1cd8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a49c2118 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49c21b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x237a49c2220 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x237a49c2288 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49c2308 prev 0x237a49c2118 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x237a49c1f00 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x237a49c1f80 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x237a49c1ff8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49c2538 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x237a49c23f0 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x237a49c2800 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x237a49c28a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49c2908 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x237a49c2980 prev 0x237a49c2800 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x237a49c2610 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x237a49c2690 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x237a49c3c50 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49c3ad0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x237a49c3b50 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x237a49c3eb0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49c3d30 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x237a49c3db0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x237a49c4268 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x237a49c3f90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c4010 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x237a49c4088 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49c44d0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49c4350 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x237a49c43d0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x237a49c47c8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x237a49c45b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c4630 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x237a49c46a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49c4a30 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49c48b0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x237a49c4930 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x237a49c5d48 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x237a49c5b30 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c5bb0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x237a49c5c28 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49c6108 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x237a49c5e30 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c5eb0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x237a49c5f28 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49c6570 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49c61f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c6270 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x237a49c62e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49c6360 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49c6878 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x237a49c6660 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c66e0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x237a49c6758 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49bfbd0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49c6960 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x237a49c69e0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x237a49c6a58 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49bfa90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49bfee8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x237a49bff88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49bfff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49c0068 prev 0x237a49bfee8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x237a49bfcc0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x237a49bfd40 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x237a49c0320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x237a49c0240 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x237a49c03c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49c07a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x237a49c0510 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x237a49c0588 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49c0608 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x237a496f2b8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x237a496f358 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x237a496f3c8 prev 0x237a496f2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x237a49c0980 <col:90> col:93 'int'
| `-DeprecatedAttr 0x237a496f470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a496f7c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x237a496f5b8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x237a496f630 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a496f6b0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x237a496fac8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x237a496f8b0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x237a496f928 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a496fdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x237a496fc68 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x237a496fe60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f1cb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a496ffa8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x237a4970020 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4970098 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49f2080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x237a49f1e58 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x237a49f1ed0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x237a49f2130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f25e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x237a49f2278 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x237a49f22f0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a49f2370 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x237a49f23e8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a49f2a68 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49f2b08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x237a49f2b70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f2bd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49f7d10 prev 0x237a49f2a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x237a49f2798 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x237a49f2818 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x237a49f2890 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49f7dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f8128 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49f81c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x237a49f8230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f8298 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49f8318 prev 0x237a49f8128 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x237a49f7f10 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x237a49f7f90 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x237a49f8008 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49f8618 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x237a49f8400 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x237a49f8480 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x237a49f84f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49f89b0 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49f8700 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x237a49f8780 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x237a49f87f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49f8870 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49f8d68 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x237a49f8aa0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x237a49f8b18 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a49f8b98 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x237a49f8c10 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a49f9130 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49f91d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x237a49f9238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f92a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49f9320 prev 0x237a49f9130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x237a49f8f18 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x237a49f8f98 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x237a49f9010 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49f93d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f9898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x237a49f9520 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x237a49f9598 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x237a49f9618 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x237a49f9690 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49f6d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x237a49f9a48 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x237a49f9ac8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x237a49f9b40 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49f6db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f70f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x237a49f7190 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f71f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49f7270 prev 0x237a49f70f0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x237a49f6f00 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x237a49f6f80 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x237a49f74d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x237a49f7570 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f75d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x237a49f7650 prev 0x237a49f74d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x237a49f7350 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x237a49f73d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x237a49f7810 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x237a49f7730 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x237a49f7a60 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x237a49f7b00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f7b68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49f7be0 prev 0x237a49f7a60 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x237a49f78e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x237a49f7968 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x237a49f9eb0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x237a49f9f50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f9fb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49fa030 prev 0x237a49f9eb0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x237a49f9d30 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x237a49f9db0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x237a49fa350 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x237a49fa3f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x237a49fa458 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49fa4d0 prev 0x237a49fa350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x237a49fa1d0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x237a49fa250 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x237a49fa580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49fa968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x237a49fa6c8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x237a49fa748 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x237a49fa7c8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x237a49fabc0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x237a49faa50 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x237a49faac8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49f2e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x237a49f2d98 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x237a49f2f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f3270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49f3068 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x237a49f30e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49f3158 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49f3590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x237a49f3418 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x237a49f3490 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x237a49f3640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f3a50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x237a49f3af0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x237a49f3b58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a49f3bc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a49f5cf0 prev 0x237a49f3a50 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x237a49f3788 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x237a49f3808 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x237a49f3880 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49f6148 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49f5dd8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x237a49f5e58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x237a49f5ed0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49f5f48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49f63f0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x237a49f6490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a49f6500 prev 0x237a49f63f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x237a49f6310 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x237a49f65a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x237a49f68f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49f6770 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x237a49f67f0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x237a49f69a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x237a49fad40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x237a49f6b68 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x237a49f6be8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x237a49fadf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x237a49fb098 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x237a49fafb8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x237a49fb140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x237a49fb558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x237a49fb340 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x237a49fb3c0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x237a49fb438 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49fb610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x237a49fb9f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x237a49fb7d8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x237a49fb858 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x237a49fb8d0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49fbaa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x237a49f3d08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x237a49fbc70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x237a49f3db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x237a49f40f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x237a49f3f78 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x237a49f3ff8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x237a49f41a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x237a49f4450 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x237a49f4370 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x237a49f44f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x237a49f4790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x237a49f4618 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x237a49f4b20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x237a49f4860 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a49f48d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x237a49f4950 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x237a49f4ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a49f4ce0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x237a49f4d58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x237a49f4fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49f5308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x237a49f53a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x237a49f5410 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x237a49f5488 prev 0x237a49f5308 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x237a49f50e8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a49f5160 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x237a49f5780 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x237a49f5820 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x237a49f5888 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x237a49f5900 prev 0x237a49f5780 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x237a49f5560 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x237a49f55d8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x237a49f5be0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x237a49f59d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a49f5a50 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x237a49f5ac8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x237a4a01ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a01e80 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x237a4a01ef8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x237a4a020a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a023f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a021e0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a4a02258 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x237a4a02640 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x237a4a026e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x237a4a02750 prev 0x237a4a02640 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x237a4a024d0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x237a4a02a38 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a02820 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x237a4a02898 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a02c80 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x237a4a02b10 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x237a4a02b88 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x237a4a03028 <line:306:1, line:308:1>
|   `-ReturnStmt 0x237a4a03018 <line:307:5, col:56>
|     `-ConditionalOperator 0x237a4a02fe8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x237a4a02e58 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x237a4a02e38 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x237a4a02e08 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x237a4a02d48 <col:13> 'const wchar_t *' lvalue ParmVar 0x237a4a02b10 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x237a4a02e20 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x237a4a02de8 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x237a4a02dc0 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x237a4a02d68 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x237a4a02fd0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x237a4a02e78 <col:29> 'int' 0
|       `-CallExpr 0x237a4a02f70 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x237a4a02f58 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x237a4a02ea0 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x237a4a02a38 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x237a4a02fa0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x237a4a02ec0 <col:41> 'const wchar_t *' lvalue ParmVar 0x237a4a02b10 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x237a4a02fb8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x237a4a02ee0 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x237a4a02b88 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a033b8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x237a4a03050 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a4a030c8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a4a03140 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x237a4a031b8 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a4a03820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a03560 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x237a4a035d8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x237a4a03650 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a4a038d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a03ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x237a4a00da0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x237a4a00e08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x237a4a00e70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x237a4a00ef0 prev 0x237a4a03ce8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x237a4a03a18 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a03a90 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a4a03b08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a01270 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x237a4a00fd0 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a4a01048 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x237a4a010c0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x237a4a01138 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x237a4a01620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a01418 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x237a4a01490 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x237a4a01508 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a4a016d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a01a38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a01818 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a4a01890 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x237a4a01c80 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x237a4a01b10 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a4a01b88 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x237a49fff00 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a49ffd90 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a49ffe08 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x237a4a00148 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a49fffd8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x237a4a00050 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x237a4a00450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a002e0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a00358 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x237a4a00500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a00960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x237a4a00640 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a006b8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x237a4a00790 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x237a4a00c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x237a4a00b08 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x237a4a00d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49fd120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x237a49fce58 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x237a49fced0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49fcf50 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x237a49fd3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x237a49fd2f8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x237a49fd478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49fd840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x237a49fd5b8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x237a49fd630 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49fd6a8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x237a49fda98 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a49fd920 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x237a49fd998 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x237a49fde58 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x237a49fdb70 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a49fdbe8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a49fdc60 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49fe148 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a49fdf38 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a49fdfb0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a49fe028 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49fe5a0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a49fe228 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a49fe2a0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x237a49fe318 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49fe390 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a49fe9f8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x237a49fe688 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a49fe700 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x237a49fe778 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x237a49fe7f0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a49fbe70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x237a49feba0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a49fec18 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x237a49fec90 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a49fbf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a49fc1e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x237a49fc068 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x237a49fc570 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x237a49fc2b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a49fc328 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a49fc3a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x237a49fc928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x237a49fc710 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a49fc788 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x237a49fc9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a0ae40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x237a49fcb18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x237a49fcb90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a0b0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x237a4a0afd8 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x237a4a0b158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a0b560 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a4a0b298 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a0b310 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4a0b388 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a0b918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x237a4a0b700 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x237a4a0b778 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x237a4a0b9c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a0bc78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a0bb08 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x237a4a0bb80 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a06ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x237a4a06e00 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x237a4a06f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a072c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a4a070c0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a07138 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4a071b0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a075d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x237a4a07468 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x237a4a074e0 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x237a4a07688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x237a4a07a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a077c8 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a4a07840 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x237a4a078b8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a03eb8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a4a07b70 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x237a4a07be8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x237a4a07c60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4a07cd8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a04118 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a03fa0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x237a4a04018 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x237a4a04400 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x237a4a041f0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a04268 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a4a042e0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a04658 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a044e0 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x237a4a04558 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x237a4a04940 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x237a4a04730 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a047a8 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a4a04820 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a04c30 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a04a20 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a04a98 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a4a04b10 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a09050 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a4a04d10 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a08e20 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x237a4a08e98 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4a08f10 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a09348 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a09138 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a091b0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x237a4a09228 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x237a4a096d0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x237a4a09428 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a094a0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x237a4a09518 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x237a4a09590 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x237a4a09930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x237a4a09858 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x237a4a099d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x237a4a09d10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a09b98 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a09c10 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x237a4a09dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x237a4a08198 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x237a4a07f88 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a08000 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x237a4a08078 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a4a08250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x237a4a08618 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x237a4a08410 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a08488 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x237a4a08500 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x237a4a086d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x237a4a08968 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x237a4a08890 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x237a4a08a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x237a4a08d40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x237a4a08bd0 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x237a4a08c48 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x237a4a05df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x237a4a06088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x237a4a05fb0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x237a4a06130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x237a4a063c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x237a4a062f0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x237a4a06470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x237a4a067a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x237a4a06630 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x237a4a066a8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x237a4a06858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x237a4a069f0 <.//openssl//file_jk/before\test\v3nametest.c:15:1, line:32:1> line:15:26 used names 'const char *const [52]' static cinit
| `-InitListExpr 0x237a4a05958 <col:36, line:32:1> 'const char *const [52]'
|   |-ImplicitCastExpr 0x237a4a059b0 <line:16:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05998 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06a98 <col:5> 'char [2]' lvalue "a"
|   |-ImplicitCastExpr 0x237a4a059e8 <col:10> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a059d0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06ab8 <col:10> 'char [2]' lvalue "b"
|   |-ImplicitCastExpr 0x237a4a05a28 <col:15> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05a10 <col:15> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06ad8 <col:15> 'char [2]' lvalue "."
|   |-ImplicitCastExpr 0x237a4a05a78 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05a60 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06af8 <col:20> 'char [2]' lvalue "*"
|   |-ImplicitCastExpr 0x237a4a05aa8 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05a90 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06b18 <col:25> 'char [2]' lvalue "@"
|   |-ImplicitCastExpr 0x237a4a05b18 <line:17:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05b00 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06b78 <col:5> 'char [3]' lvalue ".a"
|   |-ImplicitCastExpr 0x237a4a05b48 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05b30 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06b98 <col:11> 'char [3]' lvalue "a."
|   |-ImplicitCastExpr 0x237a4a05b78 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05b60 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06bb8 <col:17> 'char [3]' lvalue ".b"
|   |-ImplicitCastExpr 0x237a4a05ba8 <col:23> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05b90 <col:23> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06bd8 <col:23> 'char [3]' lvalue "b."
|   |-ImplicitCastExpr 0x237a4a05c58 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05c40 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06bf8 <col:29> 'char [3]' lvalue ".*"
|   |-ImplicitCastExpr 0x237a4a05c88 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05c70 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06c18 <col:35> 'char [3]' lvalue "*."
|   |-ImplicitCastExpr 0x237a4a05cb8 <col:41> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05ca0 <col:41> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06c38 <col:41> 'char [3]' lvalue "*@"
|   |-ImplicitCastExpr 0x237a4a05ce8 <col:47> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05cd0 <col:47> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06c58 <col:47> 'char [3]' lvalue "@*"
|   |-ImplicitCastExpr 0x237a4a05d18 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05d00 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06c78 <col:53> 'char [3]' lvalue "a@"
|   |-ImplicitCastExpr 0x237a4a05d48 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05d30 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06c98 <col:59> 'char [3]' lvalue "@a"
|   |-ImplicitCastExpr 0x237a4a05d78 <col:65> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05d60 <col:65> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06cb8 <col:65> 'char [3]' lvalue "b@"
|   |-ImplicitCastExpr 0x237a4a05da8 <col:71> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a05d90 <col:71> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06cd8 <col:71> 'char [3]' lvalue ".."
|   |-ImplicitCastExpr 0x237a4a0ef98 <line:18:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0ef80 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06d38 <col:5> 'char [13]' lvalue "-example.com"
|   |-ImplicitCastExpr 0x237a4a0efc8 <col:21> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0efb0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06d60 <col:21> 'char [13]' lvalue "example-.com"
|   |-ImplicitCastExpr 0x237a4a0eff8 <line:19:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0efe0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06d88 <col:5> 'char [3]' lvalue "@@"
|   |-ImplicitCastExpr 0x237a4a0f028 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f010 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a06da8 <col:11> 'char [3]' lvalue "**"
|   |-ImplicitCastExpr 0x237a4a0f058 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f040 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04e18 <col:17> 'char [6]' lvalue "*.com"
|   |-ImplicitCastExpr 0x237a4a0f088 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f070 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04e78 <col:26> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x237a4a0f0b8 <col:34> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f0a0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04ed8 <col:34> 'char [8]' lvalue "*.*.com"
|   |-ImplicitCastExpr 0x237a4a0f0e8 <col:45> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f0d0 <col:45> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04ef8 <col:45> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x237a4a0f118 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f100 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04f18 <col:53> 'char [5]' lvalue "com*"
|   |-ImplicitCastExpr 0x237a4a0f148 <col:61> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f130 <col:61> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04f38 <col:61> 'char [13]' lvalue "*example.com"
|   |-ImplicitCastExpr 0x237a4a0f178 <line:20:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f160 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04f98 <col:5> 'char [14]' lvalue "*@example.com"
|   |-ImplicitCastExpr 0x237a4a0f1a8 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f190 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a04ff8 <col:22> 'char [19]' lvalue "test@*.example.com"
|   |-ImplicitCastExpr 0x237a4a0f1d8 <col:44> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f1c0 <col:44> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05068 <col:44> 'char [12]' lvalue "example.com"
|   |-ImplicitCastExpr 0x237a4a0f208 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f1f0 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a050c8 <col:59> 'char [16]' lvalue "www.example.com"
|   |-ImplicitCastExpr 0x237a4a0f238 <line:21:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f220 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05128 <col:5> 'char [21]' lvalue "test.www.example.com"
|   |-ImplicitCastExpr 0x237a4a0f268 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f250 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05158 <col:29> 'char [14]' lvalue "*.example.com"
|   |-ImplicitCastExpr 0x237a4a0f498 <col:46> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f480 <col:46> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a051b8 <col:46> 'char [18]' lvalue "*.www.example.com"
|   |-ImplicitCastExpr 0x237a4a0f4c8 <line:22:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f4b0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a051e8 <col:5> 'char [19]' lvalue "test.*.example.com"
|   |-ImplicitCastExpr 0x237a4a0f4f8 <col:27> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f4e0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05258 <col:27> 'char [10]' lvalue "www.*.com"
|   |-ImplicitCastExpr 0x237a4a0f528 <line:23:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f510 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a052b8 <col:5> 'char [17]' lvalue ".www.example.com"
|   |-ImplicitCastExpr 0x237a4a0f558 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f540 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a052e0 <col:25> 'char [17]' lvalue "*www.example.com"
|   |-ImplicitCastExpr 0x237a4a0f588 <line:24:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f570 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05308 <col:5> 'char [12]' lvalue "example.net"
|   |-ImplicitCastExpr 0x237a4a0f5b8 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f5a0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05368 <col:20> 'char [25]' lvalue "xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x237a4a0f5e8 <line:25:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f5d0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a053d8 <col:5> 'char [27]' lvalue "*.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x237a4a0f618 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f600 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05448 <col:35> 'char [29]' lvalue "www.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x237a4a0f648 <line:26:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f630 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a054b8 <col:5> 'char [20]' lvalue "*.good--example.com"
|   |-ImplicitCastExpr 0x237a4a0f678 <col:28> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f660 <col:28> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05528 <col:28> 'char [22]' lvalue "www.good--example.com"
|   |-ImplicitCastExpr 0x237a4a0f6a8 <line:27:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f690 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05558 <col:5> 'char [14]' lvalue "*.xn--bar.com"
|   |-ImplicitCastExpr 0x237a4a0f6d8 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f6c0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05580 <col:22> 'char [20]' lvalue "xn--foo.xn--bar.com"
|   |-ImplicitCastExpr 0x237a4a0f708 <line:28:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f6f0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a055b0 <col:5> 'char [14]' lvalue "a.example.com"
|   |-ImplicitCastExpr 0x237a4a0f738 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f720 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a055d8 <col:22> 'char [14]' lvalue "b.example.com"
|   |-ImplicitCastExpr 0x237a4a0f768 <line:29:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f750 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05638 <col:5> 'char [23]' lvalue "postmaster@example.com"
|   |-ImplicitCastExpr 0x237a4a0f798 <col:31> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f780 <col:31> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05668 <col:31> 'char [23]' lvalue "Postmaster@example.com"
|   |-ImplicitCastExpr 0x237a4a0f7c8 <line:30:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0f7b0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a05698 <col:5> 'char [23]' lvalue "postmaster@EXAMPLE.COM"
|   `-ImplicitCastExpr 0x237a4a0f7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x237a4a05730 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x237a4a05708 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x237a4a056c8 <col:26> 'int' 0
|-VarDecl 0x237a4a0f8a0 <.//openssl//file_jk/before\test\v3nametest.c:34:1, line:70:1> line:34:26 used exceptions 'const char *const [35]' static cinit
| `-InitListExpr 0x237a4a0dca0 <col:41, line:70:1> 'const char *const [35]'
|   |-ImplicitCastExpr 0x237a4a0dcf8 <line:35:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0dce0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0f948 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x237a4a0dd30 <line:36:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0dd18 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0f998 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x237a4a0dd70 <line:37:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0dd58 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fa28 <col:5> 'char [56]' lvalue "set CN: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x237a4a0ddc0 <line:38:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0dda8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fab8 <col:5> 'char [65]' lvalue "set CN: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x237a4a0ddf0 <line:39:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0ddd8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fb10 <col:5> 'char [65]' lvalue "set CN: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a0fe90 <line:40:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0de48 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fba8 <col:5> 'char [61]' lvalue "set CN: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a0fec0 <line:41:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0fea8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fc38 <col:5> 'char [59]' lvalue "set CN: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x237a4a0fef0 <line:42:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0fed8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fcc8 <col:5> 'char [64]' lvalue "set CN: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a0ff20 <line:43:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0ff08 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fd58 <col:5> 'char [82]' lvalue "set CN: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x237a4a0ffd0 <line:44:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0ffb8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0fe08 <col:5> 'char [60]' lvalue "set CN: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x237a4a10000 <line:45:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a0ffe8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0ce98 <col:5> 'char [68]' lvalue "set CN: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x237a4a10030 <line:46:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10018 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0cf38 <col:5> 'char [74]' lvalue "set CN: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10060 <line:47:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10048 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0cfd8 <col:5> 'char [77]' lvalue "set CN: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10090 <line:48:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10078 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d078 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x237a4a100c0 <line:49:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a100a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d0f0 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x237a4a100f0 <line:50:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a100d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d168 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x237a4a10120 <line:51:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10108 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d1e0 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x237a4a10250 <line:52:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10238 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d258 <col:5> 'char [61]' lvalue "set dnsName: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10280 <line:53:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10268 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d2b0 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x237a4a102b0 <line:54:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10298 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d308 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x237a4a102e0 <line:55:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a102c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d398 <col:5> 'char [70]' lvalue "set dnsName: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x237a4a10310 <line:56:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a102f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d3f8 <col:5> 'char [70]' lvalue "set dnsName: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10340 <line:57:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10328 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d498 <col:5> 'char [79]' lvalue "set dnsName: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10370 <line:58:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10358 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d500 <col:5> 'char [82]' lvalue "set dnsName: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a103a0 <line:59:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10388 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d5a8 <col:5> 'char [66]' lvalue "set dnsName: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a103d0 <line:60:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a103b8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d608 <col:5> 'char [64]' lvalue "set dnsName: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10400 <line:61:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a103e8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d698 <col:5> 'char [69]' lvalue "set dnsName: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x237a4a10430 <line:62:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10418 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d738 <col:5> 'char [87]' lvalue "set dnsName: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x237a4a10460 <line:63:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10448 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d7a8 <col:5> 'char [65]' lvalue "set dnsName: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x237a4a10490 <line:64:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10478 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d838 <col:5> 'char [73]' lvalue "set dnsName: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x237a4a104c0 <line:65:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a104a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d8d8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x237a4a104f0 <line:66:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a104d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d948 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x237a4a10520 <line:67:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10508 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0d9b8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x237a4a10750 <line:68:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x237a4a10738 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x237a4a0da28 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   `-ImplicitCastExpr 0x237a4a10768 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x237a4a0db00 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x237a4a0dad8 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x237a4a0da98 <col:26> 'int' 0
|-FunctionDecl 0x237a4a108f0 <.//openssl//file_jk/before\test\v3nametest.c:72:1, line:79:1> line:72:12 used is_exception 'int (const char *)' static
| |-ParmVarDecl 0x237a4a10810 <col:25, col:37> col:37 used msg 'const char *'
| `-CompoundStmt 0x237a4a10e08 <line:73:1, line:79:1>
|   |-DeclStmt 0x237a4a10a58 <line:74:5, col:25>
|   | `-VarDecl 0x237a4a109f0 <col:5, col:24> col:24 used p 'const char *const *'
|   |-ForStmt 0x237a4a10d98 <line:75:5, line:77:20>
|   | |-BinaryOperator 0x237a4a10ae0 <line:75:10, col:14> 'const char *const *' '='
|   | | |-DeclRefExpr 0x237a4a10a70 <col:10> 'const char *const *' lvalue Var 0x237a4a109f0 'p' 'const char *const *'
|   | | `-ImplicitCastExpr 0x237a4a10ac8 <col:14> 'const char *const *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x237a4a10aa8 <col:14> 'const char *const [35]' lvalue Var 0x237a4a0f8a0 'exceptions' 'const char *const [35]'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x237a4a10b50 <col:26, col:27> 'const char *' <LValueToRValue>
|   | | `-UnaryOperator 0x237a4a10b38 <col:26, col:27> 'const char *const' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x237a4a10b20 <col:27> 'const char *const *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x237a4a10b00 <col:27> 'const char *const *' lvalue Var 0x237a4a109f0 'p' 'const char *const *'
|   | |-UnaryOperator 0x237a4a10b88 <col:30, col:32> 'const char *const *' prefix '++'
|   | | `-DeclRefExpr 0x237a4a10b68 <col:32> 'const char *const *' lvalue Var 0x237a4a109f0 'p' 'const char *const *'
|   | `-IfStmt 0x237a4a10d80 <line:76:9, line:77:20>
|   |   |-BinaryOperator 0x237a4a10d28 <line:76:13, col:32> 'int' '=='
|   |   | |-CallExpr 0x237a4a10ca0 <col:13, col:27> 'int'
|   |   | | |-ImplicitCastExpr 0x237a4a10c88 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x237a4a10ba0 <col:13> 'int (const char *, const char *)' Function 0x237a49bef30 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x237a4a10cd0 <col:20> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x237a4a10bc0 <col:20> 'const char *' lvalue ParmVar 0x237a4a10810 'msg' 'const char *'
|   |   | | `-ImplicitCastExpr 0x237a4a10ce8 <col:25, col:26> 'const char *' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x237a4a10c18 <col:25, col:26> 'const char *const' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x237a4a10c00 <col:26> 'const char *const *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x237a4a10be0 <col:26> 'const char *const *' lvalue Var 0x237a4a109f0 'p' 'const char *const *'
|   |   | `-IntegerLiteral 0x237a4a10d00 <col:32> 'int' 0
|   |   `-ReturnStmt 0x237a4a10d70 <line:77:13, col:20>
|   |     `-IntegerLiteral 0x237a4a10d48 <col:20> 'int' 1
|   `-ReturnStmt 0x237a4a10df8 <line:78:5, col:12>
|     `-IntegerLiteral 0x237a4a10dd0 <col:12> 'int' 0
|-FunctionDecl 0x237a4a0bf28 <line:81:1, line:108:1> line:81:12 invalid set_cn 'int (int *, ...)' static
| |-ParmVarDecl 0x237a4a0be50 <col:19, col:25> col:25 invalid crt 'int *'
| `-CompoundStmt 0x237a4a0e480 <line:82:1, line:108:1>
|   |-DeclStmt 0x237a4a0c090 <line:83:5, col:16>
|   | `-VarDecl 0x237a4a0c000 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x237a4a0c068 <col:15> 'int' 0
|   |-DeclStmt 0x237a4a0c1a8 <line:85:5, col:15>
|   | `-VarDecl 0x237a4a0c140 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x237a4a0c738 <line:88:5, line:89:14>
|   | |-OpaqueValueExpr 0x237a4a0c720 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a0c708 <col:9, col:14> 'out' 0x237a4a0c6b8
|   |-WhileStmt 0x237a4a0ce20 <line:90:5, line:100:5>
|   | |-IntegerLiteral 0x237a4a0c750 <line:90:12> 'int' 1
|   | `-CompoundStmt 0x237a4a0cdf0 <col:15, line:100:5>
|   |   |-DeclStmt 0x237a4a0c7f8 <line:91:9, col:16>
|   |   | `-VarDecl 0x237a4a0c790 <col:9, col:13> col:13 used nid 'int'
|   |   |-DeclStmt 0x237a4a0c890 <line:92:9, col:25>
|   |   | `-VarDecl 0x237a4a0c828 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x237a4a0ca98 <line:94:9, line:95:13>
|   |   | |-BinaryOperator 0x237a4a0ca70 <line:94:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x237a4a0ca58 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x237a4a0ca10 <col:13> 'int' lvalue Var 0x237a4a0c790 'nid' 'int'
|   |   | | `-IntegerLiteral 0x237a4a0ca30 <col:20> 'int' 0
|   |   | `-BreakStmt 0x237a4a0ca90 <line:95:13>
|   |   `-IfStmt 0x237a4a0cdd8 <line:97:9, line:99:18>
|   |     |-OpaqueValueExpr 0x237a4a0cdc0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x237a4a0cda8 <col:13, col:18> 'out' 0x237a4a0c6b8
|   |-IfStmt 0x237a4a0dfb0 <line:101:5, line:102:14>
|   | |-OpaqueValueExpr 0x237a4a0df98 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a0df80 <col:9, col:14> 'out' 0x237a4a0c6b8
|   |-BinaryOperator 0x237a4a0e028 <line:103:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x237a4a0dfc8 <col:5> 'int' lvalue Var 0x237a4a0c000 'ret' 'int'
|   | `-IntegerLiteral 0x237a4a0e000 <col:11> 'int' 1
|   |-LabelStmt 0x237a4a0e160 <line:104:2, col:5> 'out'
|   | `-NullStmt 0x237a4a0e158 <col:5>
|   |-CallExpr 0x237a4a0e410 <line:106:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x237a4a0e3f8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x237a4a0e348 <col:5> 'void (__builtin_va_list &)' Function 0x237a4a0e1e0 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x237a4a0e380 <col:12> 'va_list':'char *' lvalue Var 0x237a4a0c140 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x237a4a0e470 <line:107:5, col:12>
|     `-ImplicitCastExpr 0x237a4a0e458 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x237a4a0e438 <col:12> 'int' lvalue Var 0x237a4a0c000 'ret' 'int'
|-FunctionDecl 0x237a4a0c2b8 <line:86:5> col:5 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x237a4a0c358 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x237a4a0c3c8 <col:5> Implicit
|-FunctionDecl 0x237a4a0e1e0 <line:106:5> col:5 implicit used va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x237a4a0e280 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x237a4a0e2f0 <col:5> Implicit
|-FunctionDecl 0x237a4a0e588 <line:117:1, line:165:1> line:117:12 invalid set_altname 'int (int *, ...)' static
| |-ParmVarDecl 0x237a4a0e4f0 <col:24, col:30> col:30 invalid crt 'int *'
| `-CompoundStmt 0x237a4a19f50 <line:118:1, line:165:1>
|   |-DeclStmt 0x237a4a0e6f0 <line:119:5, col:16>
|   | `-VarDecl 0x237a4a0e660 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x237a4a0e6c8 <col:15> 'int' 0
|   |-DeclStmt 0x237a4a0e918 <line:123:5, col:15>
|   | `-VarDecl 0x237a4a0e8b0 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x237a4a0ebd8 <line:126:5, line:127:14>
|   | |-OpaqueValueExpr 0x237a4a0ebc0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a0eba8 <col:9, col:14> 'out' 0x237a4a0eb58
|   |-WhileStmt 0x237a4a18840 <line:128:5, line:155:5>
|   | |-IntegerLiteral 0x237a4a0ebf0 <line:128:12> 'int' 1
|   | `-CompoundStmt 0x237a4a187f8 <col:15, line:155:5>
|   |   |-DeclStmt 0x237a4a0ec98 <line:129:9, col:17>
|   |   | `-VarDecl 0x237a4a0ec30 <col:9, col:13> col:13 used type 'int'
|   |   |-DeclStmt 0x237a4a0ed30 <line:130:9, col:25>
|   |   | `-VarDecl 0x237a4a0ecc8 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x237a4a0ee48 <line:132:9, line:133:13>
|   |   | |-BinaryOperator 0x237a4a0ee20 <line:132:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x237a4a0ee08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x237a4a0edc0 <col:13> 'int' lvalue Var 0x237a4a0ec30 'type' 'int'
|   |   | | `-IntegerLiteral 0x237a4a0ede0 <col:21> 'int' 0
|   |   | `-BreakStmt 0x237a4a0ee40 <line:133:13>
|   |   |-IfStmt 0x237a4a17ee8 <line:137:9, line:138:18>
|   |   | |-OpaqueValueExpr 0x237a4a17ed0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x237a4a17eb8 <col:13, col:18> 'out' 0x237a4a0eb58
|   |   |-IfStmt 0x237a4a18100 <line:140:9, line:141:18>
|   |   | |-OpaqueValueExpr 0x237a4a180e8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x237a4a180d0 <col:13, col:18> 'out' 0x237a4a0eb58
|   |   |-IfStmt 0x237a4a182b8 <line:142:9, line:143:18>
|   |   | |-OpaqueValueExpr 0x237a4a182a0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x237a4a18288 <col:13, col:18> 'out' 0x237a4a0eb58
|   |   `-SwitchStmt 0x237a4a18308 <line:144:9, line:152:9>
|   |     |-ImplicitCastExpr 0x237a4a182f0 <line:144:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x237a4a182d0 <col:17> 'int' lvalue Var 0x237a4a0ec30 'type' 'int'
|   |     `-CompoundStmt 0x237a4a18640 <col:23, line:152:9>
|   |       |-BreakStmt 0x237a4a184e0 <line:149:13>
|   |       `-DefaultStmt 0x237a4a18620 <line:150:9, line:151:19>
|   |         `-CallExpr 0x237a4a18600 <col:13, col:19> 'void'
|   |           `-ImplicitCastExpr 0x237a4a185e8 <col:13> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |             `-DeclRefExpr 0x237a4a18588 <col:13> 'void (void) __attribute__((noreturn))' Function 0x237a4a184e8 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x237a4a189e8 <line:156:5, line:157:14>
|   | |-OpaqueValueExpr 0x237a4a189d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a189b8 <col:9, col:14> 'out' 0x237a4a0eb58
|   |-BinaryOperator 0x237a4a18a60 <line:158:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x237a4a18a00 <col:5> 'int' lvalue Var 0x237a4a0e660 'ret' 'int'
|   | `-IntegerLiteral 0x237a4a18a38 <col:11> 'int' 1
|   |-LabelStmt 0x237a4a18b98 <line:159:2, col:5> 'out'
|   | `-NullStmt 0x237a4a18b90 <col:5>
|   |-CallExpr 0x237a4a19ee0 <line:163:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x237a4a19ec8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x237a4a19e88 <col:5> 'void (__builtin_va_list &)' Function 0x237a4a0e1e0 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x237a4a19ea8 <col:12> 'va_list':'char *' lvalue Var 0x237a4a0e8b0 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x237a4a19f40 <line:164:5, col:12>
|     `-ImplicitCastExpr 0x237a4a19f28 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x237a4a19f08 <col:12> 'int' lvalue Var 0x237a4a0e660 'ret' 'int'
|-FunctionDecl 0x237a4a184e8 <line:151:13> col:13 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x237a4a1a120 <line:167:1, line:170:1> line:167:12 invalid set_cn1 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a19fc0 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a1a040 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x237a4a1a248 <line:168:1, line:170:1>
|-FunctionDecl 0x237a4a1a390 <line:172:1, line:176:1> line:172:12 invalid set_cn_and_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a1a270 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a1a2f0 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x237a4a1a4e8 <line:173:1, line:176:1>
|-FunctionDecl 0x237a4a1a630 <line:178:1, line:182:1> line:178:12 invalid set_cn2 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a1a510 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a1a590 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x237a4a1a780 <line:179:1, line:182:1>
|-FunctionDecl 0x237a4a1a8c8 <line:184:1, line:188:1> line:184:12 invalid set_cn3 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a1a7a8 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a1a828 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x237a4a1aa18 <line:185:1, line:188:1>
|-FunctionDecl 0x237a4a1ab60 <line:190:1, line:193:1> line:190:12 invalid set_email1 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a1aa40 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a1aac0 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x237a4a15c50 <line:191:1, line:193:1>
|-FunctionDecl 0x237a4a15d98 <line:195:1, line:199:1> line:195:12 invalid set_email2 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a15c78 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a15cf8 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x237a4a15ef0 <line:196:1, line:199:1>
|-FunctionDecl 0x237a4a16038 <line:201:1, line:205:1> line:201:12 invalid set_email3 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a15f18 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a15f98 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x237a4a16190 <line:202:1, line:205:1>
|-FunctionDecl 0x237a4a162d8 <line:207:1, line:211:1> line:207:12 invalid set_email_and_cn 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a161b8 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a16238 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x237a4a16428 <line:208:1, line:211:1>
|-FunctionDecl 0x237a4a16570 <line:213:1, line:216:1> line:213:12 invalid set_altname_dns 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a16450 <col:28, col:34> col:34 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a164d0 <col:39, col:51> col:51 used name 'const char *'
| `-CompoundStmt 0x237a4a16698 <line:214:1, line:216:1>
|-FunctionDecl 0x237a4a167e0 <line:218:1, line:221:1> line:218:12 invalid set_altname_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x237a4a166c0 <col:30, col:36> col:36 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a16740 <col:41, col:53> col:53 used name 'const char *'
| `-CompoundStmt 0x237a4a16908 <line:219:1, line:221:1>
|-RecordDecl 0x237a4a16918 <line:223:1, line:228:1> line:223:8 struct set_name_fn definition
| |-FieldDecl 0x237a4a16ba0 <line:224:5, col:36> col:11 referenced fn 'int (*)(int *, const char *)'
| |-FieldDecl 0x237a4a1bcb0 <line:225:5, col:17> col:17 referenced name 'const char *'
| |-FieldDecl 0x237a4a1bd20 <line:226:5, col:9> col:9 referenced host 'int'
| `-FieldDecl 0x237a4a1bd90 <line:227:5, col:9> col:9 referenced email 'int'
|-VarDecl 0x237a4a1bea8 <line:230:1, col:42> col:33 used name_fns 'const struct set_name_fn []' static
|-FunctionDecl 0x237a4a1c610 <line:244:1, line:259:1> line:244:14 invalid make_cert 'int *()' static
| `-CompoundStmt 0x237a4a1ad00 <line:245:1, line:259:1>
|   |-IfStmt 0x237a4a1cab0 <line:250:5, line:251:14>
|   | |-OpaqueValueExpr 0x237a4a1ca98 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a1ca80 <col:9, col:14> 'out' 0x237a4a1ca30
|   |-IfStmt 0x237a4a1cc30 <line:252:5, line:253:14>
|   | |-OpaqueValueExpr 0x237a4a1cc18 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x237a4a1cc00 <col:9, col:14> 'out' 0x237a4a1ca30
|   `-LabelStmt 0x237a4a1ace8 <line:256:2, col:5> 'out'
|     `-NullStmt 0x237a4a1ace0 <col:5>
|-VarDecl 0x237a4a1ad40 <line:261:1, col:12> col:12 used errors 'int' static
|-FunctionDecl 0x237a4a1b208 <line:263:1, line:276:1> line:263:13 used check_message 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' static
| |-ParmVarDecl 0x237a4a1ae40 <col:27, col:53> col:53 used fn 'const struct set_name_fn *'
| |-ParmVarDecl 0x237a4a1aec0 <col:57, col:69> col:69 used op 'const char *'
| |-ParmVarDecl 0x237a4a1af40 <line:264:27, col:39> col:39 used nameincert 'const char *'
| |-ParmVarDecl 0x237a4a1afc0 <col:51, col:55> col:55 used match 'int'
| |-ParmVarDecl 0x237a4a1b040 <col:62, col:74> col:74 used name 'const char *'
| `-CompoundStmt 0x237a4a14c78 <line:265:1, line:276:1>
|   |-DeclStmt 0x237a4a1b3f0 <line:266:5, col:19>
|   | `-VarDecl 0x237a4a1b388 <col:5, col:18> col:10 used msg 'char [1024]'
|   |-IfStmt 0x237a4a1b498 <line:267:5, line:268:9>
|   | |-BinaryOperator 0x237a4a1b468 <line:267:9, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x237a4a1b450 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x237a4a1b408 <col:9> 'int' lvalue ParmVar 0x237a4a1afc0 'match' 'int'
|   | | `-IntegerLiteral 0x237a4a1b428 <col:17> 'int' 0
|   | `-ReturnStmt 0x237a4a1b488 <line:268:9>
|   |-CallExpr 0x237a4a1b908 <line:269:5, line:271:60> 'int'
|   | |-ImplicitCastExpr 0x237a4a1b8f0 <line:269:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x237a4a1b5a0 <col:5> 'int ()' Function 0x237a4a1b4d8 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x237a4a1b968 <col:18> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x237a4a1b5c0 <col:18> 'char [1024]' lvalue Var 0x237a4a1b388 'msg' 'char [1024]'
|   | |-UnaryExprOrTypeTraitExpr 0x237a4a1b638 <col:23, col:33> 'unsigned long long' sizeof
|   | | `-ParenExpr 0x237a4a1b618 <col:29, col:33> 'char [1024]' lvalue
|   | |   `-DeclRefExpr 0x237a4a1b5f8 <col:30> 'char [1024]' lvalue Var 0x237a4a1b388 'msg' 'char [1024]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x237a4a1b980 <col:36> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x237a4a1b658 <col:36> 'char [21]' lvalue "%s: %s: [%s] %s [%s]"
|   | |-ImplicitCastExpr 0x237a4a1b998 <line:270:18, col:22> 'const char *' <LValueToRValue>
|   | | `-MemberExpr 0x237a4a1b6c0 <col:18, col:22> 'const char *const' lvalue ->name 0x237a4a1bcb0
|   | |   `-ImplicitCastExpr 0x237a4a1b6a8 <col:18> 'const struct set_name_fn *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x237a4a1b688 <col:18> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a1ae40 'fn' 'const struct set_name_fn *'
|   | |-ImplicitCastExpr 0x237a4a1b9b0 <col:28> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x237a4a1b6f0 <col:28> 'const char *' lvalue ParmVar 0x237a4a1aec0 'op' 'const char *'
|   | |-ImplicitCastExpr 0x237a4a1b9c8 <col:32> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x237a4a1b710 <col:32> 'const char *' lvalue ParmVar 0x237a4a1af40 'nameincert' 'const char *'
|   | |-ConditionalOperator 0x237a4a1b8a0 <line:271:18, col:38> 'char *'
|   | | |-ImplicitCastExpr 0x237a4a1b798 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x237a4a1b730 <col:18> 'int' lvalue ParmVar 0x237a4a1afc0 'match' 'int'
|   | | |-ImplicitCastExpr 0x237a4a1b7b0 <col:26> 'char *' <ArrayToPointerDecay>
|   | | | `-StringLiteral 0x237a4a1b750 <col:26> 'char [8]' lvalue "matches"
|   | | `-ImplicitCastExpr 0x237a4a1b7c8 <col:38> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x237a4a1b770 <col:38> 'char [15]' lvalue "does not match"
|   | `-ImplicitCastExpr 0x237a4a1b9e0 <col:56> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x237a4a1b8d0 <col:56> 'const char *' lvalue ParmVar 0x237a4a1b040 'name' 'const char *'
|   |-IfStmt 0x237a4a1bae8 <line:272:5, line:273:9>
|   | |-CallExpr 0x237a4a1ba80 <line:272:9, col:25> 'int'
|   | | |-ImplicitCastExpr 0x237a4a1ba68 <col:9> 'int (*)(const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x237a4a1b9f8 <col:9> 'int (const char *)' Function 0x237a4a108f0 'is_exception' 'int (const char *)'
|   | | `-ImplicitCastExpr 0x237a4a1bac0 <col:22> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x237a4a1baa8 <col:22> 'char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x237a4a1ba18 <col:22> 'char [1024]' lvalue Var 0x237a4a1b388 'msg' 'char [1024]'
|   | `-ReturnStmt 0x237a4a1bad8 <line:273:9>
|   |-CallExpr 0x237a4a1bc48 <line:274:5, col:13> 'int'
|   | |-ImplicitCastExpr 0x237a4a1bc30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x237a4a1bbf0 <col:5> 'int ()' Function 0x237a4a1bb28 'puts' 'int ()'
|   | `-ImplicitCastExpr 0x237a4a1bc70 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x237a4a1bc10 <col:10> 'char [1024]' lvalue Var 0x237a4a1b388 'msg' 'char [1024]'
|   `-UnaryOperator 0x237a4a14c60 <line:275:5, col:7> 'int' prefix '++'
|     `-DeclRefExpr 0x237a4a14c40 <col:7> 'int' lvalue Var 0x237a4a1ad40 'errors' 'int'
|-FunctionDecl 0x237a4a14f08 <line:278:1, line:331:1> line:278:13 invalid run_cert 'void (int *, const char *, const struct set_name_fn *)' static
| |-ParmVarDecl 0x237a4a14cd0 <col:22, col:28> col:28 invalid crt 'int *'
| |-ParmVarDecl 0x237a4a14d50 <col:33, col:45> col:45 used nameincert 'const char *'
| |-ParmVarDecl 0x237a4a14de0 <line:279:22, col:48> col:48 used fn 'const struct set_name_fn *'
| `-CompoundStmt 0x237a4a23000 <line:280:1, line:331:1>
|   |-DeclStmt 0x237a4a15090 <line:281:5, col:37>
|   | `-VarDecl 0x237a4a14ff0 <col:5, col:32> col:24 used pname 'const char *const *' cinit
|   |   `-ImplicitCastExpr 0x237a4a15078 <col:32> 'const char *const *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x237a4a15058 <col:32> 'const char *const [52]' lvalue Var 0x237a4a069f0 'names' 'const char *const [52]'
|   `-WhileStmt 0x237a4a22fe8 <line:282:5, line:330:5>
|     |-ImplicitCastExpr 0x237a4a15110 <line:282:12, col:13> 'const char *' <LValueToRValue>
|     | `-UnaryOperator 0x237a4a150f8 <col:12, col:13> 'const char *const' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x237a4a150e0 <col:13> 'const char *const *' <LValueToRValue>
|     |     `-DeclRefExpr 0x237a4a150a8 <col:13> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|     `-CompoundStmt 0x237a4a22f58 <col:20, line:330:5>
|       |-DeclStmt 0x237a4a154d8 <line:283:9, col:59>
|       | `-VarDecl 0x237a4a15140 <col:9, col:58> col:13 used samename 'int' cinit
|       |   `-BinaryOperator 0x237a4a154b8 <col:24, col:58> 'int' '=='
|       |     |-CallExpr 0x237a4a15430 <col:24, col:53> 'int'
|       |     | |-ImplicitCastExpr 0x237a4a15418 <col:24> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x237a4a15328 <col:24> 'int (const char *, const char *)' Function 0x237a4a151a8 'strcasecmp' 'int (const char *, const char *)'
|       |     | |-ImplicitCastExpr 0x237a4a15460 <col:35> 'const char *' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x237a4a15360 <col:35> 'const char *' lvalue ParmVar 0x237a4a14d50 'nameincert' 'const char *'
|       |     | `-ImplicitCastExpr 0x237a4a15478 <col:47, col:48> 'const char *' <LValueToRValue>
|       |     |   `-UnaryOperator 0x237a4a153d0 <col:47, col:48> 'const char *const' lvalue prefix '*' cannot overflow
|       |     |     `-ImplicitCastExpr 0x237a4a153b8 <col:48> 'const char *const *' <LValueToRValue>
|       |     |       `-DeclRefExpr 0x237a4a15398 <col:48> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       |     `-IntegerLiteral 0x237a4a15490 <col:58> 'int' 0
|       |-DeclStmt 0x237a4a15670 <line:284:9, col:40>
|       | `-VarDecl 0x237a4a15500 <col:9, col:39> col:16 used namelen 'size_t':'unsigned long long' cinit
|       |   `-CallExpr 0x237a4a15630 <col:26, col:39> 'unsigned long long'
|       |     |-ImplicitCastExpr 0x237a4a15618 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x237a4a15568 <col:26> 'unsigned long long (const char *)' Function 0x237a49bf290 'strlen' 'unsigned long long (const char *)'
|       |     `-ImplicitCastExpr 0x237a4a15658 <col:33, col:34> 'const char *' <LValueToRValue>
|       |       `-UnaryOperator 0x237a4a155c0 <col:33, col:34> 'const char *const' lvalue prefix '*' cannot overflow
|       |         `-ImplicitCastExpr 0x237a4a155a8 <col:34> 'const char *const *' <LValueToRValue>
|       |           `-DeclRefExpr 0x237a4a15588 <col:34> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       |-DeclStmt 0x237a4a15978 <line:285:9, col:37>
|       | `-VarDecl 0x237a4a156a0 <col:9, col:36> col:15 used name 'char *' cinit
|       |   `-ImplicitCastExpr 0x237a4a15960 <col:22, col:36> 'char *' <BitCast>
|       |     `-CallExpr 0x237a4a15920 <col:22, col:36> 'void *'
|       |       |-ImplicitCastExpr 0x237a4a15908 <col:22> 'void *(*)(unsigned long long)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x237a4a15850 <col:22> 'void *(unsigned long long)' Function 0x237a4a15740 'malloc' 'void *(unsigned long long)'
|       |       `-ImplicitCastExpr 0x237a4a15948 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |         `-DeclRefExpr 0x237a4a15888 <col:29> 'size_t':'unsigned long long' lvalue Var 0x237a4a15500 'namelen' 'size_t':'unsigned long long'
|       |-DeclStmt 0x237a4a15aa8 <line:286:9, col:23>
|       | |-VarDecl 0x237a4a159a8 <col:9, col:13> col:13 used match 'int'
|       | `-VarDecl 0x237a4a15a28 <col:9, col:20> col:20 used ret 'int'
|       |-CallExpr 0x237a4a23d30 <line:287:9, col:37> 'void *'
|       | |-ImplicitCastExpr 0x237a4a15bf8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x237a4a15ac0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x237a49bc818 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x237a4a23d80 <col:16> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x237a4a23d68 <col:16> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x237a4a15ae0 <col:16> 'char *' lvalue Var 0x237a4a156a0 'name' 'char *'
|       | |-ImplicitCastExpr 0x237a4a23db0 <col:22, col:23> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x237a4a23d98 <col:22, col:23> 'const char *' <LValueToRValue>
|       | |   `-UnaryOperator 0x237a4a15b50 <col:22, col:23> 'const char *const' lvalue prefix '*' cannot overflow
|       | |     `-ImplicitCastExpr 0x237a4a15b38 <col:23> 'const char *const *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x237a4a15b18 <col:23> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       | `-ImplicitCastExpr 0x237a4a23dc8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x237a4a15b68 <col:30> 'size_t':'unsigned long long' lvalue Var 0x237a4a15500 'namelen' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x237a4a24090 <line:290:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x237a4a24018 <col:9> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-UnaryOperator 0x237a4a24078 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x237a4a24050 <col:18> 'int' 1
|       |-IfStmt 0x237a4a24838 <line:291:9, line:300:21> has_else
|       | |-BinaryOperator 0x237a4a24110 <line:291:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x237a4a240f8 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x237a4a240b0 <col:13> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       | | `-IntegerLiteral 0x237a4a240d0 <col:19> 'int' 0
|       | |-CompoundStmt 0x237a4a24360 <col:22, line:294:9>
|       | | `-UnaryOperator 0x237a4a24348 <line:293:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x237a4a24328 <col:15> 'int' lvalue Var 0x237a4a1ad40 'errors' 'int'
|       | `-IfStmt 0x237a4a24810 <line:294:16, line:300:21> has_else
|       |   |-ImplicitCastExpr 0x237a4a243f8 <line:294:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x237a4a243c8 <col:20, col:24> 'const int' lvalue ->host 0x237a4a1bd20
|       |   |   `-ImplicitCastExpr 0x237a4a243b0 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x237a4a24378 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x237a4a246f0 <col:30, line:299:9>
|       |   | |-IfStmt 0x237a4a24580 <line:295:13, line:296:25>
|       |   | | |-BinaryOperator 0x237a4a244f8 <line:295:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x237a4a24470 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x237a4a24458 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x237a4a24410 <col:17> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x237a4a24430 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x237a4a244e0 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x237a4a244c8 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x237a4a24490 <col:30> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       |   | | `-BinaryOperator 0x237a4a24560 <line:296:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x237a4a24518 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x237a4a24538 <col:25> 'int' 1
|       |   | `-IfStmt 0x237a4a246d8 <line:297:13, line:298:25>
|       |   |   |-BinaryOperator 0x237a4a24650 <line:297:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x237a4a245f8 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x237a4a245e0 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x237a4a24598 <col:17> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x237a4a245b8 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x237a4a24638 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x237a4a24618 <col:29> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       |   |   `-BinaryOperator 0x237a4a246b8 <line:298:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x237a4a24670 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |   |     `-IntegerLiteral 0x237a4a24690 <col:25> 'int' 0
|       |   `-IfStmt 0x237a4a247f8 <line:299:16, line:300:21>
|       |     |-BinaryOperator 0x237a4a24770 <line:299:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x237a4a24758 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x237a4a24710 <col:20> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |     | `-IntegerLiteral 0x237a4a24730 <col:27> 'int' 1
|       |     `-BinaryOperator 0x237a4a247d8 <line:300:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x237a4a24790 <col:13> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |       `-IntegerLiteral 0x237a4a247b0 <col:21> 'int' 1
|       |-CallExpr 0x237a4a249c0 <line:301:9, col:60> 'void'
|       | |-ImplicitCastExpr 0x237a4a249a8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x237a4a24860 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x237a4a1b208 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x237a4a24a08 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a24880 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x237a4a24a38 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x237a4a24a20 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x237a4a248a0 <col:27> 'char [5]' lvalue "host"
|       | |-ImplicitCastExpr 0x237a4a24a50 <col:35> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a248c0 <col:35> 'const char *' lvalue ParmVar 0x237a4a14d50 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x237a4a24a68 <col:47> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a248e0 <col:47> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-ImplicitCastExpr 0x237a4a24a80 <col:54, col:55> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x237a4a24938 <col:54, col:55> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x237a4a24920 <col:55> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x237a4a24900 <col:55> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       |-BinaryOperator 0x237a4a24c00 <line:305:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x237a4a24ba0 <col:9> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-UnaryOperator 0x237a4a24be8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x237a4a24bc0 <col:18> 'int' 1
|       |-IfStmt 0x237a4a201b0 <line:306:9, line:315:21> has_else
|       | |-BinaryOperator 0x237a4a24c80 <line:306:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x237a4a24c68 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x237a4a24c20 <col:13> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       | | `-IntegerLiteral 0x237a4a24c40 <col:19> 'int' 0
|       | |-CompoundStmt 0x237a4a1fd08 <col:22, line:309:9>
|       | | `-UnaryOperator 0x237a4a1fcf0 <line:308:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x237a4a24d00 <col:15> 'int' lvalue Var 0x237a4a1ad40 'errors' 'int'
|       | `-IfStmt 0x237a4a20188 <line:309:16, line:315:21> has_else
|       |   |-ImplicitCastExpr 0x237a4a1fd88 <line:309:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x237a4a1fd58 <col:20, col:24> 'const int' lvalue ->host 0x237a4a1bd20
|       |   |   `-ImplicitCastExpr 0x237a4a1fd40 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x237a4a1fd20 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x237a4a20068 <col:30, line:314:9>
|       |   | |-IfStmt 0x237a4a1fef8 <line:310:13, line:311:25>
|       |   | | |-BinaryOperator 0x237a4a1fe70 <line:310:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x237a4a1fe00 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x237a4a1fde8 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x237a4a1fda0 <col:17> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x237a4a1fdc0 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x237a4a1fe58 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x237a4a1fe40 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x237a4a1fe20 <col:30> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       |   | | `-BinaryOperator 0x237a4a1fed8 <line:311:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x237a4a1fe90 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x237a4a1feb0 <col:25> 'int' 1
|       |   | `-IfStmt 0x237a4a20050 <line:312:13, line:313:25>
|       |   |   |-BinaryOperator 0x237a4a1ffc8 <line:312:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x237a4a1ff70 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x237a4a1ff58 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x237a4a1ff10 <col:17> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x237a4a1ff30 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x237a4a1ffb0 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x237a4a1ff90 <col:29> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       |   |   `-BinaryOperator 0x237a4a20030 <line:313:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x237a4a1ffe8 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |   |     `-IntegerLiteral 0x237a4a20008 <col:25> 'int' 0
|       |   `-IfStmt 0x237a4a20170 <line:314:16, line:315:21>
|       |     |-BinaryOperator 0x237a4a200e8 <line:314:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x237a4a200d0 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x237a4a20088 <col:20> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |     | `-IntegerLiteral 0x237a4a200a8 <col:27> 'int' 1
|       |     `-BinaryOperator 0x237a4a20150 <line:315:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x237a4a20108 <col:13> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |       `-IntegerLiteral 0x237a4a20128 <col:21> 'int' 1
|       |-CallExpr 0x237a4a202f0 <line:316:9, col:73> 'void'
|       | |-ImplicitCastExpr 0x237a4a202d8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x237a4a201d8 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x237a4a1b208 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x237a4a20338 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a201f8 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x237a4a20368 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x237a4a20350 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x237a4a20218 <col:27> 'char [18]' lvalue "host-no-wildcards"
|       | |-ImplicitCastExpr 0x237a4a20380 <col:48> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a20248 <col:48> 'const char *' lvalue ParmVar 0x237a4a14d50 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x237a4a20398 <col:60> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a20268 <col:60> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-ImplicitCastExpr 0x237a4a203b0 <col:67, col:68> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x237a4a202c0 <col:67, col:68> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x237a4a202a8 <col:68> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x237a4a20288 <col:68> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       |-BinaryOperator 0x237a4a205c0 <line:319:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x237a4a20560 <col:9> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-UnaryOperator 0x237a4a205a8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x237a4a20580 <col:18> 'int' 1
|       |-IfStmt 0x237a4a20b60 <line:320:9, line:326:21> has_else
|       | |-ImplicitCastExpr 0x237a4a20648 <line:320:13, col:17> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x237a4a20618 <col:13, col:17> 'const int' lvalue ->email 0x237a4a1bd90
|       | |   `-ImplicitCastExpr 0x237a4a20600 <col:13> 'const struct set_name_fn *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x237a4a205e0 <col:13> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       | |-CompoundStmt 0x237a4a20a88 <col:24, line:325:9>
|       | | |-IfStmt 0x237a4a20770 <line:321:13, line:322:25>
|       | | | |-BinaryOperator 0x237a4a206e8 <line:321:17, col:25> 'int' '&&'
|       | | | | |-ImplicitCastExpr 0x237a4a206d0 <col:17> 'int' <LValueToRValue>
|       | | | | | `-DeclRefExpr 0x237a4a20660 <col:17> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       | | | | `-UnaryOperator 0x237a4a206b8 <col:24, col:25> 'int' prefix '!' cannot overflow
|       | | | |   `-ImplicitCastExpr 0x237a4a206a0 <col:25> 'int' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x237a4a20680 <col:25> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       | | | `-BinaryOperator 0x237a4a20750 <line:322:17, col:25> 'int' '='
|       | | |   |-DeclRefExpr 0x237a4a20708 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | | |   `-IntegerLiteral 0x237a4a20728 <col:25> 'int' 1
|       | | `-IfStmt 0x237a4a20a70 <line:323:13, line:324:25>
|       | |   |-BinaryOperator 0x237a4a209e8 <line:323:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '&&'
|       | |   | |-BinaryOperator 0x237a4a20810 <.//openssl//file_jk/before\test\v3nametest.c:323:17, col:25> 'int' '&&'
|       | |   | | |-UnaryOperator 0x237a4a207c0 <col:17, col:18> 'int' prefix '!' cannot overflow
|       | |   | | | `-ImplicitCastExpr 0x237a4a207a8 <col:18> 'int' <LValueToRValue>
|       | |   | | |   `-DeclRefExpr 0x237a4a20788 <col:18> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       | |   | | `-ImplicitCastExpr 0x237a4a207f8 <col:25> 'int' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x237a4a207d8 <col:25> 'int' lvalue Var 0x237a4a15140 'samename' 'int'
|       | |   | `-BinaryOperator 0x237a4a209c8 <col:37, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|       | |   |   |-CallExpr 0x237a4a208e0 <.//openssl//file_jk/before\test\v3nametest.c:323:37, col:59> 'char *'
|       | |   |   | |-ImplicitCastExpr 0x237a4a208c8 <col:37> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | |   |   | | `-DeclRefExpr 0x237a4a20830 <col:37> 'char *(const char *, int)' Function 0x237a49c2980 'strchr' 'char *(const char *, int)'
|       | |   |   | |-ImplicitCastExpr 0x237a4a20910 <col:44> 'const char *' <LValueToRValue>
|       | |   |   | | `-DeclRefExpr 0x237a4a20850 <col:44> 'const char *' lvalue ParmVar 0x237a4a14d50 'nameincert' 'const char *'
|       | |   |   | `-CharacterLiteral 0x237a4a20870 <col:56> 'int' 64
|       | |   |   `-ImplicitCastExpr 0x237a4a209b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|       | |   |     `-ParenExpr 0x237a4a20990 <col:17, col:27> 'void *'
|       | |   |       `-CStyleCastExpr 0x237a4a20968 <col:18, col:26> 'void *' <NullToPointer>
|       | |   |         `-IntegerLiteral 0x237a4a20928 <col:26> 'int' 0
|       | |   `-BinaryOperator 0x237a4a20a50 <.//openssl//file_jk/before\test\v3nametest.c:324:17, col:25> 'int' '='
|       | |     |-DeclRefExpr 0x237a4a20a08 <col:17> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | |     `-IntegerLiteral 0x237a4a20a28 <col:25> 'int' 0
|       | `-IfStmt 0x237a4a20b48 <line:325:16, line:326:21>
|       |   |-ImplicitCastExpr 0x237a4a20ac8 <line:325:20> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x237a4a20aa8 <col:20> 'int' lvalue Var 0x237a4a15a28 'ret' 'int'
|       |   `-BinaryOperator 0x237a4a20b28 <line:326:13, col:21> 'int' '='
|       |     |-DeclRefExpr 0x237a4a20ae0 <col:13> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       |     `-IntegerLiteral 0x237a4a20b00 <col:21> 'int' 1
|       |-CallExpr 0x237a4a20c90 <line:327:9, col:61> 'void'
|       | |-ImplicitCastExpr 0x237a4a20c78 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x237a4a20b88 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x237a4a1b208 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x237a4a20cd8 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a20ba8 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x237a4a14de0 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x237a4a22d38 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x237a4a22d20 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x237a4a20bc8 <col:27> 'char [6]' lvalue "email"
|       | |-ImplicitCastExpr 0x237a4a22d50 <col:36> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a20be8 <col:36> 'const char *' lvalue ParmVar 0x237a4a14d50 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x237a4a22d68 <col:48> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x237a4a20c08 <col:48> 'int' lvalue Var 0x237a4a159a8 'match' 'int'
|       | `-ImplicitCastExpr 0x237a4a22d80 <col:55, col:56> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x237a4a20c60 <col:55, col:56> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x237a4a20c48 <col:56> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x237a4a20c28 <col:56> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       |-UnaryOperator 0x237a4a22db8 <line:328:9, col:11> 'const char *const *' prefix '++'
|       | `-DeclRefExpr 0x237a4a22d98 <col:11> 'const char *const *' lvalue Var 0x237a4a14ff0 'pname' 'const char *const *'
|       `-CallExpr 0x237a4a22f18 <line:329:9, col:18> 'int'
|         |-ImplicitCastExpr 0x237a4a22f00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x237a4a22ec0 <col:9> 'int ()' Function 0x237a4a22df8 'free' 'int ()'
|         `-ImplicitCastExpr 0x237a4a22f40 <col:14> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x237a4a22ee0 <col:14> 'char *' lvalue Var 0x237a4a156a0 'name' 'char *'
|-FunctionDecl 0x237a4a151a8 <line:283:24> col:24 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x237a4a15248 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x237a4a152b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x237a4a15740 <line:285:22> col:22 implicit used malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x237a4a157e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
`-FunctionDecl 0x237a4a230f0 <line:333:1, line:355:1> line:333:5 main 'int (void)'
  `-CompoundStmt 0x237a4a23b10 <line:334:1, line:355:1>
    |-DeclStmt 0x237a4a23270 <line:335:5, col:45>
    | `-VarDecl 0x237a4a231d0 <col:5, col:37> col:31 used pfn 'const struct set_name_fn *' cinit
    |   `-ImplicitCastExpr 0x237a4a23258 <col:37> 'const struct set_name_fn *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x237a4a23238 <col:37> 'const struct set_name_fn []' lvalue Var 0x237a4a1bea8 'name_fns' 'const struct set_name_fn []'
    |-WhileStmt 0x237a4a239e8 <line:336:5, line:353:5>
    | |-ImplicitCastExpr 0x237a4a23308 <line:336:12, col:17> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x237a4a232d8 <col:12, col:17> 'const char *const' lvalue ->name 0x237a4a1bcb0
    | |   `-ImplicitCastExpr 0x237a4a232c0 <col:12> 'const struct set_name_fn *' <LValueToRValue>
    | |     `-DeclRefExpr 0x237a4a23288 <col:12> 'const struct set_name_fn *' lvalue Var 0x237a4a231d0 'pfn' 'const struct set_name_fn *'
    | `-CompoundStmt 0x237a4a239c0 <col:23, line:353:5>
    |   |-DeclStmt 0x237a4a233d8 <line:337:9, col:41>
    |   | `-VarDecl 0x237a4a23338 <col:9, col:36> col:28 used pname 'const char *const *' cinit
    |   |   `-ImplicitCastExpr 0x237a4a233c0 <col:36> 'const char *const *' <ArrayToPointerDecay>
    |   |     `-DeclRefExpr 0x237a4a233a0 <col:36> 'const char *const [52]' lvalue Var 0x237a4a069f0 'names' 'const char *const [52]'
    |   |-WhileStmt 0x237a4a23970 <line:338:9, line:351:9>
    |   | |-ImplicitCastExpr 0x237a4a23458 <line:338:16, col:17> 'const char *' <LValueToRValue>
    |   | | `-UnaryOperator 0x237a4a23440 <col:16, col:17> 'const char *const' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x237a4a23428 <col:17> 'const char *const *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x237a4a233f0 <col:17> 'const char *const *' lvalue Var 0x237a4a23338 'pname' 'const char *const *'
    |   | `-CompoundStmt 0x237a4a23948 <col:24, line:351:9>
    |   |   |-IfStmt 0x237a4a235b0 <line:340:13, line:343:13>
    |   |   | |-OpaqueValueExpr 0x237a4a23598 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x237a4a23580 <line:340:30, line:343:13>
    |   |   |   `-ReturnStmt 0x237a4a23570 <line:342:17, col:24>
    |   |   |     `-IntegerLiteral 0x237a4a23548 <col:24> 'int' 1
    |   |   |-IfStmt 0x237a4a23778 <line:344:13, line:347:13>
    |   |   | |-OpaqueValueExpr 0x237a4a23760 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x237a4a23748 <line:344:40, line:347:13>
    |   |   |   `-ReturnStmt 0x237a4a23738 <line:346:17, col:24>
    |   |   |     `-IntegerLiteral 0x237a4a23710 <col:24> 'int' 1
    |   |   `-UnaryOperator 0x237a4a23930 <line:350:13, col:15> 'const char *const *' prefix '++'
    |   |     `-DeclRefExpr 0x237a4a23910 <col:15> 'const char *const *' lvalue Var 0x237a4a23338 'pname' 'const char *const *'
    |   `-UnaryOperator 0x237a4a239a8 <line:352:9, col:11> 'const struct set_name_fn *' prefix '++'
    |     `-DeclRefExpr 0x237a4a23988 <col:11> 'const struct set_name_fn *' lvalue Var 0x237a4a231d0 'pfn' 'const struct set_name_fn *'
    `-ReturnStmt 0x237a4a23b00 <line:354:5, col:29>
      `-ConditionalOperator 0x237a4a23ad0 <col:12, col:29> 'int'
        |-BinaryOperator 0x237a4a23a60 <col:12, col:21> 'int' '>'
        | |-ImplicitCastExpr 0x237a4a23a48 <col:12> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x237a4a23a00 <col:12> 'int' lvalue Var 0x237a4a1ad40 'errors' 'int'
        | `-IntegerLiteral 0x237a4a23a20 <col:21> 'int' 0
        |-IntegerLiteral 0x237a4a23a80 <col:25> 'int' 1
        `-IntegerLiteral 0x237a4a23aa8 <col:29> 'int' 0
