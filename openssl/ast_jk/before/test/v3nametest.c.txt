TranslationUnitDecl 0x1dbbe1c3338 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1dbbe1c3bd0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1dbbe1c38d0 '__int128'
|-TypedefDecl 0x1dbbe1c3c40 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1dbbe1c38f0 'unsigned __int128'
|-TypedefDecl 0x1dbbe1c3f78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1dbbe1c3d30 'struct __NSConstantString_tag'
|   `-Record 0x1dbbe1c3c98 '__NSConstantString_tag'
|-TypedefDecl 0x1dbbe1c3fe8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1dbbe1c3510 'unsigned long long'
|-TypedefDecl 0x1dbbe1c4080 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1dbbe1c4040 'char *'
|   `-BuiltinType 0x1dbbe1c33d0 'char'
|-TypedefDecl 0x1dbbe1c40f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1dbbe1c4040 'char *'
|   `-BuiltinType 0x1dbbe1c33d0 'char'
|-TypedefDecl 0x1dbbe1c4190 <D:\Microsoft Visual Studio 12.0\VC\include\sys/types.h:40:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1dbbe1c3450 'long'
|-TypedefDecl 0x1dbbe1c4200 <line:45:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1dbbe1c3470 'long long'
|-TypedefDecl 0x1dbbe1c4290 <line:53:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1dbbe1c4260 '__time64_t' sugar
|   |-Typedef 0x1dbbe1c4200 '__time64_t'
|   `-BuiltinType 0x1dbbe1c3470 'long long'
|-TypedefDecl 0x1dbbfa12b40 <line:61:1, col:24> col:24 _ino_t 'unsigned short'
| `-BuiltinType 0x1dbbe1c34b0 'unsigned short'
|-TypedefDecl 0x1dbbfa12bb0 <line:65:1, col:24> col:24 ino_t 'unsigned short'
| `-BuiltinType 0x1dbbe1c34b0 'unsigned short'
|-TypedefDecl 0x1dbbfa12c20 <line:74:1, col:22> col:22 _dev_t 'unsigned int'
| `-BuiltinType 0x1dbbe1c34d0 'unsigned int'
|-TypedefDecl 0x1dbbfa12c90 <line:78:1, col:22> col:22 dev_t 'unsigned int'
| `-BuiltinType 0x1dbbe1c34d0 'unsigned int'
|-TypedefDecl 0x1dbbfa12d00 <line:87:1, col:14> col:14 _off_t 'long'
| `-BuiltinType 0x1dbbe1c3450 'long'
|-TypedefDecl 0x1dbbfa12d70 <line:91:1, col:14> col:14 off_t 'long'
| `-BuiltinType 0x1dbbe1c3450 'long'
|-TypedefDecl 0x1dbbfa12e90 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1dbbe1c3510 'unsigned long long'
|-TypedefDecl 0x1dbbfa12f00 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1dbbe1c4040 'char *'
|   `-BuiltinType 0x1dbbe1c33d0 'char'
|-FunctionDecl 0x1dbbfa13150 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1dbbfa131f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1dbbfa13260 <col:21> Implicit
|-FunctionDecl 0x1dbbfa132b8 prev 0x1dbbfa13150 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1dbbfa12fe8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1dbbfa133a8 <col:21> Inherited Implicit
|-TypedefDecl 0x1dbbfa133e8 prev 0x1dbbe1c3fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1dbbe1c3510 'unsigned long long'
|-TypedefDecl 0x1dbbfa13490 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1dbbfa13460 'size_t' sugar
|   |-Typedef 0x1dbbfa133e8 'size_t'
|   `-BuiltinType 0x1dbbe1c3510 'unsigned long long'
|-TypedefDecl 0x1dbbfa13500 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1dbbe1c3470 'long long'
|-TypedefDecl 0x1dbbfa13570 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1dbbe1c3470 'long long'
|-TypedefDecl 0x1dbbfa135e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1dbbe1c34b0 'unsigned short'
|-TypedefDecl 0x1dbbfa13650 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1dbbe1c34b0 'unsigned short'
|-TypedefDecl 0x1dbbfa136c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1dbbe1c34b0 'unsigned short'
|-TypedefDecl 0x1dbbfa13730 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1dbbe1c3430 'int'
|-FunctionDecl 0x1dbbfa138a8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1dbbfbc0460 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1dbbfbc0a10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1dbbfbc05a8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfbc0620 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfbc0698 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfbc0718 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1dbbfbc07b0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1dbbfbc0af0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1dbbfbc0bb0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1dbbfbc0d20 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1dbbfbc0cd0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1dbbfbc0c70 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1dbbfbc0b90 'struct threadlocaleinfostruct'
|       `-Record 0x1dbbfbc57a8 'threadlocaleinfostruct'
|-TypedefDecl 0x1dbbfbc0e30 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1dbbfbc0de0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1dbbfbc0d80 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1dbbfbc0c50 'struct threadmbcinfostruct'
|       `-Record 0x1dbbfbc0bb0 'threadmbcinfostruct'
|-RecordDecl 0x1dbbfbc0e88 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1dbbfbc0f40 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1dbbfbc1000 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1dbbfbc1090 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1dbbfbc1120 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1dbbfbc11d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1dbbfbc1180 'struct localeinfo_struct' sugar
|   `-RecordType 0x1dbbfbc0fe0 'struct localeinfo_struct'
|     `-Record 0x1dbbfbc0f40 'localeinfo_struct'
|-TypedefDecl 0x1dbbfbc12b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1dbbfbc1260 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1dbbfbc1180 'struct localeinfo_struct' sugar
|     `-RecordType 0x1dbbfbc0fe0 'struct localeinfo_struct'
|       `-Record 0x1dbbfbc0f40 'localeinfo_struct'
|-RecordDecl 0x1dbbfbc1328 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1dbbfbc13e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1dbbfbc54b0 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1dbbfbc5578 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1dbbfbc5610 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1dbbfbc5680 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1dbbfbc5738 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1dbbfbc56e0 'struct localerefcount' sugar
|   `-RecordType 0x1dbbfbc13c0 'struct localerefcount'
|     `-Record 0x1dbbfbc1328 'localerefcount'
|-RecordDecl 0x1dbbfbc57a8 prev 0x1dbbfbc0af0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1dbbfbc5828 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1dbbfbc58a0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1dbbfbc5910 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1dbbfbc5980 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1dbbfbc59f0 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1dbbfbc5bb8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1dbbfbc5c28 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1dbbfbc5c98 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1dbbfbc5d08 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1dbbfbc5d78 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1dbbfbc5de8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1dbbfbc5e40 parent 0x1dbbe1c3338 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1dbbfbc5fd0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1dbbfbc6040 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1dbbfbc60b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1dbbfbc6120 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1dbbfbc61c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1dbbfbc6230 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1dbbfbc6340 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1dbbfbcd530 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1dbbfbcd5e8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1dbbfbcd590 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1dbbfbc0b90 'struct threadlocaleinfostruct'
|     `-Record 0x1dbbfbc57a8 'threadlocaleinfostruct'
|-FunctionDecl 0x1dbbfbcda20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1dbbfbcd670 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbcd720 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1dbbfbcd7a0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1dbbfbcd818 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbcdde8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbcde88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1dbbfbcdef0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1dbbfbcdf58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbcdfd8 prev 0x1dbbfbcdde8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbcdb10 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1dbbfbcdb90 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1dbbfbcdc08 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbce398 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1dbbfbce0c0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1dbbfbce140 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1dbbfbce1b8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbc67e0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfbce480 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1dbbfbc64c0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1dbbfbc6538 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbc65d0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbc6ae8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbc6b88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1dbbfbc6bf0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1dbbfbc6c58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbc6cd8 prev 0x1dbbfbc6ae8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbc68d0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1dbbfbc6950 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1dbbfbc69c8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbc7098 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbc7138 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1dbbfbc71a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1dbbfbc7208 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbc7288 prev 0x1dbbfbc7098 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbc6dc0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbc6e40 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1dbbfbc6eb8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd4818 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1dbbfbc7398 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbc7430 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfbd45a0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1dbbfbd4618 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd4bd8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbd4c78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1dbbfbd4ce0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1dbbfbd4d48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbd4dc8 prev 0x1dbbfbd4bd8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbd4908 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbd4988 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1dbbfbd4a00 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd5248 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbd52e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1dbbfbd5350 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1dbbfbd53b8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1dbbfbd5420 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbd54a8 prev 0x1dbbfbd5248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbd4f90 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbd5010 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1dbbfbd5090 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1dbbfbd5108 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfbd1570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1dbbfbd1950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1dbbfbd1738 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1dbbfbd17b8 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1dbbfbd1830 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfbd1a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1dbbfbd1e00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1dbbfbd1b30 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfbd1ba8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbd1c28 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1dbbfbd21d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1dbbfbd1fe0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfbd2060 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1dbbfbd2280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfbd26a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1dbbfbd23c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfbd2440 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbd24c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1dbbfbd2a70 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfbd2b10 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1dbbfbd2b78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfbd2bf0 prev 0x1dbbfbd2a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd2880 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfbd2900 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1dbbfbd2ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfbd2ff8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1dbbfbd2de8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfbd2e60 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbd2ee0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1dbbfbd3320 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfbd33c0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1dbbfbd3428 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfbd34a0 prev 0x1dbbfbd3320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd31a0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfbd3220 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1dbbfbd3590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfbd38c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfbd3960 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfbd39c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfbd3a40 prev 0x1dbbfbd38c0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd36d8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1dbbfbd3758 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1dbbfbd3c90 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1dbbfbd3d30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfbd3da0 prev 0x1dbbfbd3c90 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1dbbfbd3b20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1dbbfbd4098 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1dbbfbd3e78 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfbd3ef0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd42e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1dbbfbd4178 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1dbbfbd41f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1dbbfbd5638 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1dbbfbd5628 <line:132:5, col:51>
|     `-ConditionalOperator 0x1dbbfbd55f8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1dbbfbd4448 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1dbbfbd4428 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1dbbfbd43f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1dbbfbd43b0 <col:13> 'const char *' lvalue ParmVar 0x1dbbfbd4178 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1dbbfbd4410 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1dbbfbd43d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1dbbfbd55e0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1dbbfbd4468 <col:24> 'int' 0
|       `-CallExpr 0x1dbbfbd4560 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1dbbfbd4548 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1dbbfbd4490 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1dbbfbd4098 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1dbbfbd55b0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1dbbfbd44b0 <col:36> 'const char *' lvalue ParmVar 0x1dbbfbd4178 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1dbbfbd55c8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1dbbfbd44d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1dbbfbd41f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd5910 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1dbbfbd5668 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbd56e0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfbd5760 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1dbbfbd57d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd5c18 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfbd5cb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1dbbfbd5d20 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1dbbfbd5d88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfbd5e08 prev 0x1dbbfbd5c18 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfbd5a00 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1dbbfbd5a80 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1dbbfbd5af8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbd6038 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1dbbfbd5ef0 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1dbbfbd6300 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1dbbfbd63a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfbd6408 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1dbbfbd6480 prev 0x1dbbfbd6300 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1dbbfbd6110 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfbd6190 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1dbbfbd06e0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd0560 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1dbbfbd05e0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1dbbfbd0940 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd07c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1dbbfbd0840 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1dbbfbd0cf8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1dbbfbd0a20 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbd0aa0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfbd0b18 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbd0f60 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd0de0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1dbbfbd0e60 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1dbbfbd1258 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1dbbfbd1040 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbd10c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfbd1138 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbd14c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbd1340 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1dbbfbd13c0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1dbbfbce798 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1dbbfbce580 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbce600 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfbce678 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbceb58 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1dbbfbce880 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbce900 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfbce978 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbcefc0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfbcec40 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbcecc0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1dbbfbced38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbcedb0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbcf2c8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1dbbfbcf0b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbcf130 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfbcf1a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfbcf690 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfbcf3b0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfbcf430 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1dbbfbcf4a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbcf550 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfbcf9a8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfbcfa48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfbcfab0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfbcfb28 prev 0x1dbbfbcf9a8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfbcf780 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfbcf800 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1dbbfbcfde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1dbbfbcfd00 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1dbbfbcfe88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfbd0260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1dbbfbcffd0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1dbbfbd0048 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfbd00c8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1dbbfb7e298 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1dbbfb7e338 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1dbbfb7e3a8 prev 0x1dbbfb7e298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1dbbfbd0440 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1dbbfb7e450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfb7e7a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1dbbfb7e598 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1dbbfb7e610 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfb7e690 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1dbbfb7eaa8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1dbbfb7e890 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1dbbfb7e908 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfb7ed98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1dbbfb7ec48 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1dbbfb7ee40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc03f50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfb7ef88 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1dbbfb7f000 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfb7f078 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc04320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc040f8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1dbbfc04170 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1dbbfc043d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc04888 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1dbbfc04518 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfc04590 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc04610 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1dbbfc04688 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc04d08 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfc04da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1dbbfc04e10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc04e78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfc05f70 prev 0x1dbbfc04d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfc04a38 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfc04ab8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1dbbfc04b30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc06028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc06388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfc06428 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1dbbfc06490 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc064f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfc06578 prev 0x1dbbfc06388 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfc06170 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc061f0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfc06268 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc06878 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1dbbfc06660 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc066e0 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1dbbfc06758 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc06c10 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc06960 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc069e0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1dbbfc06a58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc06ad0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc06fc8 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1dbbfc06d00 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfc06d78 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc06df8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1dbbfc06e70 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc07390 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfc07430 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1dbbfc07498 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc07500 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfc07580 prev 0x1dbbfc07390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfc07178 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfc071f8 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1dbbfc07270 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc07638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc07af8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1dbbfc07780 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc077f8 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc07878 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1dbbfc078f0 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc01f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1dbbfc07ca8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1dbbfc07d28 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1dbbfc07da0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc01fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc02320 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfc023c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc02428 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc024a0 prev 0x1dbbfc02320 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1dbbfc02130 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfc021b0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1dbbfc02700 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1dbbfc027a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc02808 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1dbbfc02880 prev 0x1dbbfc02700 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1dbbfc02580 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfc02600 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1dbbfc02a40 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1dbbfc02960 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1dbbfc02c90 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfc02d30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc02d98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc02e10 prev 0x1dbbfc02c90 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfc02b18 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfc02b98 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1dbbfc030c0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfc03160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc031c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc03240 prev 0x1dbbfc030c0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1dbbfc02f40 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1dbbfc02fc0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1dbbfc03560 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfc03600 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1dbbfc03668 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc036e0 prev 0x1dbbfc03560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1dbbfc033e0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc03460 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1dbbfc03790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc03b78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1dbbfc038d8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc03958 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1dbbfc039d8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1dbbfc03dd0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1dbbfc03c60 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1dbbfc03cd8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc0b178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1dbbfc0b098 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1dbbfc0b220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc0b570 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc0b368 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc0b3e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc0b458 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc0b890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc0b718 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1dbbfc0b790 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1dbbfc0b940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc0bd50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfc0bdf0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1dbbfc0be58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc0bec0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfc07f90 prev 0x1dbbfc0bd50 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfc0ba88 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfc0bb08 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1dbbfc0bb80 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc083e8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc08078 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1dbbfc080f8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1dbbfc08170 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc081e8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc08690 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1dbbfc08730 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc087a0 prev 0x1dbbfc08690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1dbbfc085b0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1dbbfc08848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1dbbfc08b90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfc08a10 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc08a90 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1dbbfc08c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1dbbfc0bfd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1dbbfc08e08 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc08e88 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1dbbfc0c080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1dbbfc0c328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1dbbfc0c248 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1dbbfc0c3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1dbbfc0c7e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1dbbfc0c5d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1dbbfc0c650 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1dbbfc0c6c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc0c8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1dbbfc0cc80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1dbbfc0ca68 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc0cae8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1dbbfc0cb60 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc0cd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1dbbfc04f98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1dbbfc0cf00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1dbbfc05040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1dbbfc05388 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1dbbfc05208 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1dbbfc05288 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1dbbfc05438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1dbbfc056e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1dbbfc05600 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1dbbfc05788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1dbbfc05a20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1dbbfc058a8 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1dbbfc05db0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc05af0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc05b68 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc05be0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1dbbfc0a1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc09fb0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc0a028 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc0a278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc0a5d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1dbbfc0a678 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1dbbfc0a6e0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1dbbfc0a758 prev 0x1dbbfc0a5d8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1dbbfc0a3b8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0a430 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1dbbfc0aa50 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1dbbfc0aaf0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1dbbfc0ab58 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1dbbfc0abd0 prev 0x1dbbfc0aa50 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1dbbfc0a830 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0a8a8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1dbbfc0aeb0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc0aca8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc0ad20 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc0ad98 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1dbbfc0d220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc0d0b0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc0d128 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc0d2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc0d628 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc0d410 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0d488 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1dbbfc0d870 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1dbbfc0d910 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1dbbfc0d980 prev 0x1dbbfc0d870 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1dbbfc0d700 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1dbbfc0dc68 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc0da50 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0dac8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc0deb0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1dbbfc0dd40 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc0ddb8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1dbbfc0f268 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1dbbfc0f258 <line:307:5, col:56>
|     `-ConditionalOperator 0x1dbbfc0f228 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1dbbfc0f098 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1dbbfc0f078 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1dbbfc0f048 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1dbbfc0df78 <col:13> 'const wchar_t *' lvalue ParmVar 0x1dbbfc0dd40 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1dbbfc0f060 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1dbbfc0f028 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1dbbfc0f000 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1dbbfc0df98 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1dbbfc0f210 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1dbbfc0f0b8 <col:29> 'int' 0
|       `-CallExpr 0x1dbbfc0f1b0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1dbbfc0f198 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1dbbfc0f0e0 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1dbbfc0dc68 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1dbbfc0f1e0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1dbbfc0f100 <col:41> 'const wchar_t *' lvalue ParmVar 0x1dbbfc0dd40 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1dbbfc0f1f8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1dbbfc0f120 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1dbbfc0ddb8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc0f5f8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1dbbfc0f290 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc0f308 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc0f380 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0f3f8 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc0fa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc0f7a0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc0f818 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc0f890 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc0fb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc0ff28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1dbbfc10010 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1dbbfc10078 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1dbbfc100e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1dbbfc10160 prev 0x1dbbfc0ff28 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1dbbfc0fc58 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc0fcd0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc0fd48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc104e0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1dbbfc10240 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc102b8 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc10330 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc103a8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc10890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc10688 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc10700 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc10778 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc10948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc10ca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc10a88 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc10b00 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1dbbfc10ef0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1dbbfc10d80 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc10df8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1dbbfc09110 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc08fa0 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc09018 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1dbbfc09358 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc091e8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc09260 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1dbbfc09660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc094f0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc09568 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc09710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc09b70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1dbbfc09850 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc098c8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc099a0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1dbbfc09e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1dbbfc09d18 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1dbbfc09f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc17440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1dbbfc17178 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc171f0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc17270 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1dbbfc176f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc17618 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc17798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc17b60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc178d8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc17950 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc179c8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1dbbfc17db8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc17c40 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc17cb8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1dbbfc18178 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc17e90 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc17f08 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc17f80 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc18468 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc18258 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc182d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc18348 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc188c0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc18548 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc185c0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc18638 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc186b0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc18d18 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1dbbfc189a8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc18a20 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1dbbfc18a98 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1dbbfc18b10 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc11140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1dbbfc18ec0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc18f38 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1dbbfc18fb0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc111f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc114b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1dbbfc11338 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1dbbfc11840 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1dbbfc11580 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc115f8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc11670 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1dbbfc11bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1dbbfc119e0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc11a58 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1dbbfc11ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc15060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc11de8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1dbbfc11e60 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc152d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1dbbfc151f8 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1dbbfc15378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc15780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc154b8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc15530 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc155a8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc15b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc15920 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc15998 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1dbbfc15be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc15e98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc15d28 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1dbbfc15da0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc12108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1dbbfc12030 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1dbbfc121b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc124f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc122f0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc12368 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc123e0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc12808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc12698 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc12710 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1dbbfc128b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1dbbfc12cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc129f8 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc12a70 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc12ae8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc1a198 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc12da0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc12e18 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc12e90 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc12f08 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc1a3f8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc1a280 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc1a2f8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1dbbfc1a6e0 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc1a4d0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc1a548 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc1a5c0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc1a938 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc1a7c0 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc1a838 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1dbbfc1ac20 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1dbbfc1aa10 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc1aa88 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc1ab00 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc1af10 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc1ad00 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc1ad78 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc1adf0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc13270 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc1aff0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc13040 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc130b8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc13130 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc13568 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc13358 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc133d0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1dbbfc13448 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1dbbfc138f0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1dbbfc13648 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc136c0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc13738 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1dbbfc137b0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1dbbfc13b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc13a78 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc13bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1dbbfc13f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc13db8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc13e30 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc13fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1dbbfc143d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1dbbfc141c8 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc14240 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc142b8 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc14490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1dbbfc14858 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1dbbfc14650 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc146c8 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1dbbfc14740 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1dbbfc14910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1dbbfc14ba8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1dbbfc14ad0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1dbbfc14c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1dbbfc14f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1dbbfc14e10 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1dbbfc14e88 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1dbbfc1d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1dbbfc1d378 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1dbbfc1d2a0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1dbbfc1d420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1dbbfc1d6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1dbbfc1d5e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1dbbfc1d760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1dbbfc1da98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1dbbfc1d920 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1dbbfc1d998 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1dbbfc1db48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x1dbbfc1dce0 <.//openssl//file_jk/before\test\v3nametest.c:15:1, line:32:1> line:15:26 used names 'const char *const [52]' static cinit
| `-InitListExpr 0x1dbbfc1cc48 <col:36, line:32:1> 'const char *const [52]'
|   |-ImplicitCastExpr 0x1dbbfc1cca0 <line:16:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cc88 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dd88 <col:5> 'char [2]' lvalue "a"
|   |-ImplicitCastExpr 0x1dbbfc1ccd8 <col:10> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1ccc0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dda8 <col:10> 'char [2]' lvalue "b"
|   |-ImplicitCastExpr 0x1dbbfc1cd18 <col:15> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cd00 <col:15> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1ddc8 <col:15> 'char [2]' lvalue "."
|   |-ImplicitCastExpr 0x1dbbfc1cd68 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cd50 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dde8 <col:20> 'char [2]' lvalue "*"
|   |-ImplicitCastExpr 0x1dbbfc1cd98 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cd80 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1de08 <col:25> 'char [2]' lvalue "@"
|   |-ImplicitCastExpr 0x1dbbfc1ce08 <line:17:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cdf0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1de68 <col:5> 'char [3]' lvalue ".a"
|   |-ImplicitCastExpr 0x1dbbfc1ce38 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1ce20 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1de88 <col:11> 'char [3]' lvalue "a."
|   |-ImplicitCastExpr 0x1dbbfc1ce68 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1ce50 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dea8 <col:17> 'char [3]' lvalue ".b"
|   |-ImplicitCastExpr 0x1dbbfc1ce98 <col:23> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1ce80 <col:23> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dec8 <col:23> 'char [3]' lvalue "b."
|   |-ImplicitCastExpr 0x1dbbfc1cf48 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cf30 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dee8 <col:29> 'char [3]' lvalue ".*"
|   |-ImplicitCastExpr 0x1dbbfc1cf78 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cf60 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1df08 <col:35> 'char [3]' lvalue "*."
|   |-ImplicitCastExpr 0x1dbbfc1cfa8 <col:41> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cf90 <col:41> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1df28 <col:41> 'char [3]' lvalue "*@"
|   |-ImplicitCastExpr 0x1dbbfc1cfd8 <col:47> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cfc0 <col:47> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1df48 <col:47> 'char [3]' lvalue "@*"
|   |-ImplicitCastExpr 0x1dbbfc1d008 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1cff0 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1df68 <col:53> 'char [3]' lvalue "a@"
|   |-ImplicitCastExpr 0x1dbbfc1d038 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1d020 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1df88 <col:59> 'char [3]' lvalue "@a"
|   |-ImplicitCastExpr 0x1dbbfc1d068 <col:65> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1d050 <col:65> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dfa8 <col:65> 'char [3]' lvalue "b@"
|   |-ImplicitCastExpr 0x1dbbfc1d098 <col:71> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1d080 <col:71> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1dfc8 <col:71> 'char [3]' lvalue ".."
|   |-ImplicitCastExpr 0x1dbbfc16188 <line:18:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16170 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1e028 <col:5> 'char [13]' lvalue "-example.com"
|   |-ImplicitCastExpr 0x1dbbfc161b8 <col:21> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc161a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1e050 <col:21> 'char [13]' lvalue "example-.com"
|   |-ImplicitCastExpr 0x1dbbfc161e8 <line:19:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc161d0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1e078 <col:5> 'char [3]' lvalue "@@"
|   |-ImplicitCastExpr 0x1dbbfc16218 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16200 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1e098 <col:11> 'char [3]' lvalue "**"
|   |-ImplicitCastExpr 0x1dbbfc16248 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16230 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c108 <col:17> 'char [6]' lvalue "*.com"
|   |-ImplicitCastExpr 0x1dbbfc16278 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16260 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c168 <col:26> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x1dbbfc162a8 <col:34> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16290 <col:34> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c1c8 <col:34> 'char [8]' lvalue "*.*.com"
|   |-ImplicitCastExpr 0x1dbbfc162d8 <col:45> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc162c0 <col:45> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c1e8 <col:45> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x1dbbfc16308 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc162f0 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c208 <col:53> 'char [5]' lvalue "com*"
|   |-ImplicitCastExpr 0x1dbbfc16338 <col:61> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16320 <col:61> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c228 <col:61> 'char [13]' lvalue "*example.com"
|   |-ImplicitCastExpr 0x1dbbfc16368 <line:20:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16350 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c288 <col:5> 'char [14]' lvalue "*@example.com"
|   |-ImplicitCastExpr 0x1dbbfc16398 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16380 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c2e8 <col:22> 'char [19]' lvalue "test@*.example.com"
|   |-ImplicitCastExpr 0x1dbbfc163c8 <col:44> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc163b0 <col:44> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c358 <col:44> 'char [12]' lvalue "example.com"
|   |-ImplicitCastExpr 0x1dbbfc163f8 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc163e0 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c3b8 <col:59> 'char [16]' lvalue "www.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16428 <line:21:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16410 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c418 <col:5> 'char [21]' lvalue "test.www.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16458 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16440 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c448 <col:29> 'char [14]' lvalue "*.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16688 <col:46> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16670 <col:46> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c4a8 <col:46> 'char [18]' lvalue "*.www.example.com"
|   |-ImplicitCastExpr 0x1dbbfc166b8 <line:22:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc166a0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c4d8 <col:5> 'char [19]' lvalue "test.*.example.com"
|   |-ImplicitCastExpr 0x1dbbfc166e8 <col:27> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc166d0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c548 <col:27> 'char [10]' lvalue "www.*.com"
|   |-ImplicitCastExpr 0x1dbbfc16718 <line:23:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16700 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c5a8 <col:5> 'char [17]' lvalue ".www.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16748 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16730 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c5d0 <col:25> 'char [17]' lvalue "*www.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16778 <line:24:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16760 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c5f8 <col:5> 'char [12]' lvalue "example.net"
|   |-ImplicitCastExpr 0x1dbbfc167a8 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16790 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c658 <col:20> 'char [25]' lvalue "xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x1dbbfc167d8 <line:25:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc167c0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c6c8 <col:5> 'char [27]' lvalue "*.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16808 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc167f0 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c738 <col:35> 'char [29]' lvalue "www.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16838 <line:26:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16820 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c7a8 <col:5> 'char [20]' lvalue "*.good--example.com"
|   |-ImplicitCastExpr 0x1dbbfc16868 <col:28> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16850 <col:28> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c818 <col:28> 'char [22]' lvalue "www.good--example.com"
|   |-ImplicitCastExpr 0x1dbbfc16898 <line:27:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16880 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c848 <col:5> 'char [14]' lvalue "*.xn--bar.com"
|   |-ImplicitCastExpr 0x1dbbfc168c8 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc168b0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c870 <col:22> 'char [20]' lvalue "xn--foo.xn--bar.com"
|   |-ImplicitCastExpr 0x1dbbfc168f8 <line:28:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc168e0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c8a0 <col:5> 'char [14]' lvalue "a.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16928 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16910 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c8c8 <col:22> 'char [14]' lvalue "b.example.com"
|   |-ImplicitCastExpr 0x1dbbfc16958 <line:29:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16940 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c928 <col:5> 'char [23]' lvalue "postmaster@example.com"
|   |-ImplicitCastExpr 0x1dbbfc16988 <col:31> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc16970 <col:31> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c958 <col:31> 'char [23]' lvalue "Postmaster@example.com"
|   |-ImplicitCastExpr 0x1dbbfc169b8 <line:30:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc169a0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1c988 <col:5> 'char [23]' lvalue "postmaster@EXAMPLE.COM"
|   `-ImplicitCastExpr 0x1dbbfc169d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x1dbbfc1ca20 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x1dbbfc1c9f8 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x1dbbfc1c9b8 <col:26> 'int' 0
|-VarDecl 0x1dbbfc16a90 <.//openssl//file_jk/before\test\v3nametest.c:34:1, line:70:1> line:34:26 used exceptions 'const char *const [35]' static cinit
| `-InitListExpr 0x1dbbfc1bf00 <col:41, line:70:1> 'const char *const [35]'
|   |-ImplicitCastExpr 0x1dbbfc1bf58 <line:35:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1bf40 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16b38 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc1bf90 <line:36:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1bf78 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16b88 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc1bfd0 <line:37:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1bfb8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16c18 <col:5> 'char [56]' lvalue "set CN: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc1c020 <line:38:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1c008 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16ca8 <col:5> 'char [65]' lvalue "set CN: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc1c050 <line:39:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1c038 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16d00 <col:5> 'char [65]' lvalue "set CN: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20110 <line:40:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc1c0a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16d98 <col:5> 'char [61]' lvalue "set CN: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20140 <line:41:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20128 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16e28 <col:5> 'char [59]' lvalue "set CN: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20170 <line:42:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20158 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16eb8 <col:5> 'char [64]' lvalue "set CN: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc201a0 <line:43:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20188 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16f48 <col:5> 'char [82]' lvalue "set CN: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20250 <line:44:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20238 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc16ff8 <col:5> 'char [60]' lvalue "set CN: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x1dbbfc20280 <line:45:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20268 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b0f8 <col:5> 'char [68]' lvalue "set CN: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x1dbbfc202b0 <line:46:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20298 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b198 <col:5> 'char [74]' lvalue "set CN: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc202e0 <line:47:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc202c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b238 <col:5> 'char [77]' lvalue "set CN: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20310 <line:48:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc202f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b2d8 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20340 <line:49:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20328 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b350 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20370 <line:50:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20358 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b3c8 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x1dbbfc203a0 <line:51:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20388 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b440 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x1dbbfc204d0 <line:52:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc204b8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b4b8 <col:5> 'char [61]' lvalue "set dnsName: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20500 <line:53:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc204e8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b510 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20530 <line:54:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20518 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b568 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20560 <line:55:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20548 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b5f8 <col:5> 'char [70]' lvalue "set dnsName: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20590 <line:56:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20578 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b658 <col:5> 'char [70]' lvalue "set dnsName: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc205c0 <line:57:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc205a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b6f8 <col:5> 'char [79]' lvalue "set dnsName: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc205f0 <line:58:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc205d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b760 <col:5> 'char [82]' lvalue "set dnsName: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20620 <line:59:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20608 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b808 <col:5> 'char [66]' lvalue "set dnsName: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20650 <line:60:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20638 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b868 <col:5> 'char [64]' lvalue "set dnsName: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20680 <line:61:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20668 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b8f8 <col:5> 'char [69]' lvalue "set dnsName: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc206b0 <line:62:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20698 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1b998 <col:5> 'char [87]' lvalue "set dnsName: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x1dbbfc206e0 <line:63:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc206c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1ba08 <col:5> 'char [65]' lvalue "set dnsName: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x1dbbfc20710 <line:64:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc206f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1ba98 <col:5> 'char [73]' lvalue "set dnsName: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20740 <line:65:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20728 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1bb38 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x1dbbfc20770 <line:66:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20758 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1bba8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x1dbbfc207a0 <line:67:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc20788 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1bc18 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x1dbbfc209d0 <line:68:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1dbbfc209b8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1dbbfc1bc88 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   `-ImplicitCastExpr 0x1dbbfc209e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x1dbbfc1bd60 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x1dbbfc1bd38 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x1dbbfc1bcf8 <col:26> 'int' 0
|-FunctionDecl 0x1dbbfc20b70 <.//openssl//file_jk/before\test\v3nametest.c:72:1, line:79:1> line:72:12 used is_exception 'int (const char *)' static
| |-ParmVarDecl 0x1dbbfc20a90 <col:25, col:37> col:37 used msg 'const char *'
| `-CompoundStmt 0x1dbbfc21088 <line:73:1, line:79:1>
|   |-DeclStmt 0x1dbbfc20cd8 <line:74:5, col:25>
|   | `-VarDecl 0x1dbbfc20c70 <col:5, col:24> col:24 used p 'const char *const *'
|   |-ForStmt 0x1dbbfc21018 <line:75:5, line:77:20>
|   | |-BinaryOperator 0x1dbbfc20d60 <line:75:10, col:14> 'const char *const *' '='
|   | | |-DeclRefExpr 0x1dbbfc20cf0 <col:10> 'const char *const *' lvalue Var 0x1dbbfc20c70 'p' 'const char *const *'
|   | | `-ImplicitCastExpr 0x1dbbfc20d48 <col:14> 'const char *const *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1dbbfc20d28 <col:14> 'const char *const [35]' lvalue Var 0x1dbbfc16a90 'exceptions' 'const char *const [35]'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x1dbbfc20dd0 <col:26, col:27> 'const char *' <LValueToRValue>
|   | | `-UnaryOperator 0x1dbbfc20db8 <col:26, col:27> 'const char *const' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1dbbfc20da0 <col:27> 'const char *const *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1dbbfc20d80 <col:27> 'const char *const *' lvalue Var 0x1dbbfc20c70 'p' 'const char *const *'
|   | |-UnaryOperator 0x1dbbfc20e08 <col:30, col:32> 'const char *const *' prefix '++'
|   | | `-DeclRefExpr 0x1dbbfc20de8 <col:32> 'const char *const *' lvalue Var 0x1dbbfc20c70 'p' 'const char *const *'
|   | `-IfStmt 0x1dbbfc21000 <line:76:9, line:77:20>
|   |   |-BinaryOperator 0x1dbbfc20fa8 <line:76:13, col:32> 'int' '=='
|   |   | |-CallExpr 0x1dbbfc20f20 <col:13, col:27> 'int'
|   |   | | |-ImplicitCastExpr 0x1dbbfc20f08 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1dbbfc20e20 <col:13> 'int (const char *, const char *)' Function 0x1dbbfbd3a40 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x1dbbfc20f50 <col:20> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1dbbfc20e40 <col:20> 'const char *' lvalue ParmVar 0x1dbbfc20a90 'msg' 'const char *'
|   |   | | `-ImplicitCastExpr 0x1dbbfc20f68 <col:25, col:26> 'const char *' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x1dbbfc20e98 <col:25, col:26> 'const char *const' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x1dbbfc20e80 <col:26> 'const char *const *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1dbbfc20e60 <col:26> 'const char *const *' lvalue Var 0x1dbbfc20c70 'p' 'const char *const *'
|   |   | `-IntegerLiteral 0x1dbbfc20f80 <col:32> 'int' 0
|   |   `-ReturnStmt 0x1dbbfc20ff0 <line:77:13, col:20>
|   |     `-IntegerLiteral 0x1dbbfc20fc8 <col:20> 'int' 1
|   `-ReturnStmt 0x1dbbfc21078 <line:78:5, col:12>
|     `-IntegerLiteral 0x1dbbfc21050 <col:12> 'int' 0
|-FunctionDecl 0x1dbbfc1e1c8 <line:81:1, line:108:1> line:81:12 invalid set_cn 'int (int *, ...)' static
| |-ParmVarDecl 0x1dbbfc1e0f0 <col:19, col:25> col:25 invalid crt 'int *'
| `-CompoundStmt 0x1dbbfc1f710 <line:82:1, line:108:1>
|   |-DeclStmt 0x1dbbfc1e330 <line:83:5, col:16>
|   | `-VarDecl 0x1dbbfc1e2a0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1dbbfc1e308 <col:15> 'int' 0
|   |-DeclStmt 0x1dbbfc1e448 <line:85:5, col:15>
|   | `-VarDecl 0x1dbbfc1e3e0 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x1dbbfc1e9d8 <line:88:5, line:89:14>
|   | |-OpaqueValueExpr 0x1dbbfc1e9c0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc1e9a8 <col:9, col:14> 'out' 0x1dbbfc1e958
|   |-WhileStmt 0x1dbbfc1f0c0 <line:90:5, line:100:5>
|   | |-IntegerLiteral 0x1dbbfc1e9f0 <line:90:12> 'int' 1
|   | `-CompoundStmt 0x1dbbfc1f090 <col:15, line:100:5>
|   |   |-DeclStmt 0x1dbbfc1ea98 <line:91:9, col:16>
|   |   | `-VarDecl 0x1dbbfc1ea30 <col:9, col:13> col:13 used nid 'int'
|   |   |-DeclStmt 0x1dbbfc1eb30 <line:92:9, col:25>
|   |   | `-VarDecl 0x1dbbfc1eac8 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x1dbbfc1ed38 <line:94:9, line:95:13>
|   |   | |-BinaryOperator 0x1dbbfc1ed10 <line:94:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1dbbfc1ecf8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1dbbfc1ecb0 <col:13> 'int' lvalue Var 0x1dbbfc1ea30 'nid' 'int'
|   |   | | `-IntegerLiteral 0x1dbbfc1ecd0 <col:20> 'int' 0
|   |   | `-BreakStmt 0x1dbbfc1ed30 <line:95:13>
|   |   `-IfStmt 0x1dbbfc1f078 <line:97:9, line:99:18>
|   |     |-OpaqueValueExpr 0x1dbbfc1f060 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1dbbfc1f048 <col:13, col:18> 'out' 0x1dbbfc1e958
|   |-IfStmt 0x1dbbfc1f240 <line:101:5, line:102:14>
|   | |-OpaqueValueExpr 0x1dbbfc1f228 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc1f210 <col:9, col:14> 'out' 0x1dbbfc1e958
|   |-BinaryOperator 0x1dbbfc1f2b8 <line:103:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1dbbfc1f258 <col:5> 'int' lvalue Var 0x1dbbfc1e2a0 'ret' 'int'
|   | `-IntegerLiteral 0x1dbbfc1f290 <col:11> 'int' 1
|   |-LabelStmt 0x1dbbfc1f3f0 <line:104:2, col:5> 'out'
|   | `-NullStmt 0x1dbbfc1f3e8 <col:5>
|   |-CallExpr 0x1dbbfc1f6a0 <line:106:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x1dbbfc1f688 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1dbbfc1f5d8 <col:5> 'void (__builtin_va_list &)' Function 0x1dbbfc1f470 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1dbbfc1f610 <col:12> 'va_list':'char *' lvalue Var 0x1dbbfc1e3e0 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x1dbbfc1f700 <line:107:5, col:12>
|     `-ImplicitCastExpr 0x1dbbfc1f6e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1dbbfc1f6c8 <col:12> 'int' lvalue Var 0x1dbbfc1e2a0 'ret' 'int'
|-FunctionDecl 0x1dbbfc1e558 <line:86:5> col:5 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1dbbfc1e5f8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1dbbfc1e668 <col:5> Implicit
|-FunctionDecl 0x1dbbfc1f470 <line:106:5> col:5 implicit used va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1dbbfc1f510 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1dbbfc1f580 <col:5> Implicit
|-FunctionDecl 0x1dbbfc1f818 <line:117:1, line:165:1> line:117:12 invalid set_altname 'int (int *, ...)' static
| |-ParmVarDecl 0x1dbbfc1f780 <col:24, col:30> col:30 invalid crt 'int *'
| `-CompoundStmt 0x1dbbfc2a290 <line:118:1, line:165:1>
|   |-DeclStmt 0x1dbbfc1f980 <line:119:5, col:16>
|   | `-VarDecl 0x1dbbfc1f8f0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1dbbfc1f958 <col:15> 'int' 0
|   |-DeclStmt 0x1dbbfc1fba8 <line:123:5, col:15>
|   | `-VarDecl 0x1dbbfc1fb40 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x1dbbfc1fe68 <line:126:5, line:127:14>
|   | |-OpaqueValueExpr 0x1dbbfc1fe50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc1fe38 <col:9, col:14> 'out' 0x1dbbfc1fde8
|   |-WhileStmt 0x1dbbfc28b80 <line:128:5, line:155:5>
|   | |-IntegerLiteral 0x1dbbfc1fe80 <line:128:12> 'int' 1
|   | `-CompoundStmt 0x1dbbfc28b38 <col:15, line:155:5>
|   |   |-DeclStmt 0x1dbbfc1ff28 <line:129:9, col:17>
|   |   | `-VarDecl 0x1dbbfc1fec0 <col:9, col:13> col:13 used type 'int'
|   |   |-DeclStmt 0x1dbbfc1ffc0 <line:130:9, col:25>
|   |   | `-VarDecl 0x1dbbfc1ff58 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x1dbbfc200d8 <line:132:9, line:133:13>
|   |   | |-BinaryOperator 0x1dbbfc200b0 <line:132:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1dbbfc20098 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1dbbfc20050 <col:13> 'int' lvalue Var 0x1dbbfc1fec0 'type' 'int'
|   |   | | `-IntegerLiteral 0x1dbbfc20070 <col:21> 'int' 0
|   |   | `-BreakStmt 0x1dbbfc200d0 <line:133:13>
|   |   |-IfStmt 0x1dbbfc28228 <line:137:9, line:138:18>
|   |   | |-OpaqueValueExpr 0x1dbbfc28210 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1dbbfc281f8 <col:13, col:18> 'out' 0x1dbbfc1fde8
|   |   |-IfStmt 0x1dbbfc28440 <line:140:9, line:141:18>
|   |   | |-OpaqueValueExpr 0x1dbbfc28428 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1dbbfc28410 <col:13, col:18> 'out' 0x1dbbfc1fde8
|   |   |-IfStmt 0x1dbbfc285f8 <line:142:9, line:143:18>
|   |   | |-OpaqueValueExpr 0x1dbbfc285e0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1dbbfc285c8 <col:13, col:18> 'out' 0x1dbbfc1fde8
|   |   `-SwitchStmt 0x1dbbfc28648 <line:144:9, line:152:9>
|   |     |-ImplicitCastExpr 0x1dbbfc28630 <line:144:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1dbbfc28610 <col:17> 'int' lvalue Var 0x1dbbfc1fec0 'type' 'int'
|   |     `-CompoundStmt 0x1dbbfc28980 <col:23, line:152:9>
|   |       |-BreakStmt 0x1dbbfc28820 <line:149:13>
|   |       `-DefaultStmt 0x1dbbfc28960 <line:150:9, line:151:19>
|   |         `-CallExpr 0x1dbbfc28940 <col:13, col:19> 'void'
|   |           `-ImplicitCastExpr 0x1dbbfc28928 <col:13> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |             `-DeclRefExpr 0x1dbbfc288c8 <col:13> 'void (void) __attribute__((noreturn))' Function 0x1dbbfc28828 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x1dbbfc28d28 <line:156:5, line:157:14>
|   | |-OpaqueValueExpr 0x1dbbfc28d10 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc28cf8 <col:9, col:14> 'out' 0x1dbbfc1fde8
|   |-BinaryOperator 0x1dbbfc28da0 <line:158:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1dbbfc28d40 <col:5> 'int' lvalue Var 0x1dbbfc1f8f0 'ret' 'int'
|   | `-IntegerLiteral 0x1dbbfc28d78 <col:11> 'int' 1
|   |-LabelStmt 0x1dbbfc28ed8 <line:159:2, col:5> 'out'
|   | `-NullStmt 0x1dbbfc28ed0 <col:5>
|   |-CallExpr 0x1dbbfc2a220 <line:163:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x1dbbfc2a208 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1dbbfc2a1c8 <col:5> 'void (__builtin_va_list &)' Function 0x1dbbfc1f470 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1dbbfc2a1e8 <col:12> 'va_list':'char *' lvalue Var 0x1dbbfc1fb40 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x1dbbfc2a280 <line:164:5, col:12>
|     `-ImplicitCastExpr 0x1dbbfc2a268 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1dbbfc2a248 <col:12> 'int' lvalue Var 0x1dbbfc1f8f0 'ret' 'int'
|-FunctionDecl 0x1dbbfc28828 <line:151:13> col:13 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1dbbfc2a460 <line:167:1, line:170:1> line:167:12 invalid set_cn1 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc2a300 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc2a380 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x1dbbfc2a588 <line:168:1, line:170:1>
|-FunctionDecl 0x1dbbfc2a6d0 <line:172:1, line:176:1> line:172:12 invalid set_cn_and_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc2a5b0 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc2a630 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x1dbbfc2a828 <line:173:1, line:176:1>
|-FunctionDecl 0x1dbbfc2a970 <line:178:1, line:182:1> line:178:12 invalid set_cn2 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc2a850 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc2a8d0 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x1dbbfc2aac0 <line:179:1, line:182:1>
|-FunctionDecl 0x1dbbfc2ac08 <line:184:1, line:188:1> line:184:12 invalid set_cn3 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc2aae8 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc2ab68 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x1dbbfc2ad58 <line:185:1, line:188:1>
|-FunctionDecl 0x1dbbfc2aea0 <line:190:1, line:193:1> line:190:12 invalid set_email1 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc2ad80 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc2ae00 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x1dbbfc28fc0 <line:191:1, line:193:1>
|-FunctionDecl 0x1dbbfc29108 <line:195:1, line:199:1> line:195:12 invalid set_email2 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc28fe8 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc29068 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x1dbbfc29260 <line:196:1, line:199:1>
|-FunctionDecl 0x1dbbfc293a8 <line:201:1, line:205:1> line:201:12 invalid set_email3 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc29288 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc29308 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x1dbbfc29500 <line:202:1, line:205:1>
|-FunctionDecl 0x1dbbfc29648 <line:207:1, line:211:1> line:207:12 invalid set_email_and_cn 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc29528 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc295a8 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x1dbbfc29798 <line:208:1, line:211:1>
|-FunctionDecl 0x1dbbfc298e0 <line:213:1, line:216:1> line:213:12 invalid set_altname_dns 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc297c0 <col:28, col:34> col:34 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc29840 <col:39, col:51> col:51 used name 'const char *'
| `-CompoundStmt 0x1dbbfc29a08 <line:214:1, line:216:1>
|-FunctionDecl 0x1dbbfc29b50 <line:218:1, line:221:1> line:218:12 invalid set_altname_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x1dbbfc29a30 <col:30, col:36> col:36 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc29ab0 <col:41, col:53> col:53 used name 'const char *'
| `-CompoundStmt 0x1dbbfc29c78 <line:219:1, line:221:1>
|-RecordDecl 0x1dbbfc29c88 <line:223:1, line:228:1> line:223:8 struct set_name_fn definition
| |-FieldDecl 0x1dbbfc29f10 <line:224:5, col:36> col:11 referenced fn 'int (*)(int *, const char *)'
| |-FieldDecl 0x1dbbfc2bff0 <line:225:5, col:17> col:17 referenced name 'const char *'
| |-FieldDecl 0x1dbbfc2c060 <line:226:5, col:9> col:9 referenced host 'int'
| `-FieldDecl 0x1dbbfc2c0d0 <line:227:5, col:9> col:9 referenced email 'int'
|-VarDecl 0x1dbbfc2c1e8 <line:230:1, col:42> col:33 used name_fns 'const struct set_name_fn []' static
|-FunctionDecl 0x1dbbfc2c950 <line:244:1, line:259:1> line:244:14 invalid make_cert 'int *()' static
| `-CompoundStmt 0x1dbbfc2d060 <line:245:1, line:259:1>
|   |-IfStmt 0x1dbbfc2cdf0 <line:250:5, line:251:14>
|   | |-OpaqueValueExpr 0x1dbbfc2cdd8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc2cdc0 <col:9, col:14> 'out' 0x1dbbfc2cd70
|   |-IfStmt 0x1dbbfc2cf70 <line:252:5, line:253:14>
|   | |-OpaqueValueExpr 0x1dbbfc2cf58 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1dbbfc2cf40 <col:9, col:14> 'out' 0x1dbbfc2cd70
|   `-LabelStmt 0x1dbbfc2d048 <line:256:2, col:5> 'out'
|     `-NullStmt 0x1dbbfc2d040 <col:5>
|-VarDecl 0x1dbbfc2d0a0 <line:261:1, col:12> col:12 used errors 'int' static
|-FunctionDecl 0x1dbbfc2d568 <line:263:1, line:276:1> line:263:13 used check_message 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' static
| |-ParmVarDecl 0x1dbbfc2d1a0 <col:27, col:53> col:53 used fn 'const struct set_name_fn *'
| |-ParmVarDecl 0x1dbbfc2d220 <col:57, col:69> col:69 used op 'const char *'
| |-ParmVarDecl 0x1dbbfc2d2a0 <line:264:27, col:39> col:39 used nameincert 'const char *'
| |-ParmVarDecl 0x1dbbfc2d320 <col:51, col:55> col:55 used match 'int'
| |-ParmVarDecl 0x1dbbfc2d3a0 <col:62, col:74> col:74 used name 'const char *'
| `-CompoundStmt 0x1dbbfc25fc8 <line:265:1, line:276:1>
|   |-DeclStmt 0x1dbbfc2d750 <line:266:5, col:19>
|   | `-VarDecl 0x1dbbfc2d6e8 <col:5, col:18> col:10 used msg 'char [1024]'
|   |-IfStmt 0x1dbbfc2d7f8 <line:267:5, line:268:9>
|   | |-BinaryOperator 0x1dbbfc2d7c8 <line:267:9, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x1dbbfc2d7b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1dbbfc2d768 <col:9> 'int' lvalue ParmVar 0x1dbbfc2d320 'match' 'int'
|   | | `-IntegerLiteral 0x1dbbfc2d788 <col:17> 'int' 0
|   | `-ReturnStmt 0x1dbbfc2d7e8 <line:268:9>
|   |-CallExpr 0x1dbbfc2dc68 <line:269:5, line:271:60> 'int'
|   | |-ImplicitCastExpr 0x1dbbfc2dc50 <line:269:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1dbbfc2d900 <col:5> 'int ()' Function 0x1dbbfc2d838 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x1dbbfc2dcc8 <col:18> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1dbbfc2d920 <col:18> 'char [1024]' lvalue Var 0x1dbbfc2d6e8 'msg' 'char [1024]'
|   | |-UnaryExprOrTypeTraitExpr 0x1dbbfc2d998 <col:23, col:33> 'unsigned long long' sizeof
|   | | `-ParenExpr 0x1dbbfc2d978 <col:29, col:33> 'char [1024]' lvalue
|   | |   `-DeclRefExpr 0x1dbbfc2d958 <col:30> 'char [1024]' lvalue Var 0x1dbbfc2d6e8 'msg' 'char [1024]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x1dbbfc2dce0 <col:36> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1dbbfc2d9b8 <col:36> 'char [21]' lvalue "%s: %s: [%s] %s [%s]"
|   | |-ImplicitCastExpr 0x1dbbfc2dcf8 <line:270:18, col:22> 'const char *' <LValueToRValue>
|   | | `-MemberExpr 0x1dbbfc2da20 <col:18, col:22> 'const char *const' lvalue ->name 0x1dbbfc2bff0
|   | |   `-ImplicitCastExpr 0x1dbbfc2da08 <col:18> 'const struct set_name_fn *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1dbbfc2d9e8 <col:18> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc2d1a0 'fn' 'const struct set_name_fn *'
|   | |-ImplicitCastExpr 0x1dbbfc2dd10 <col:28> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1dbbfc2da50 <col:28> 'const char *' lvalue ParmVar 0x1dbbfc2d220 'op' 'const char *'
|   | |-ImplicitCastExpr 0x1dbbfc2dd28 <col:32> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1dbbfc2da70 <col:32> 'const char *' lvalue ParmVar 0x1dbbfc2d2a0 'nameincert' 'const char *'
|   | |-ConditionalOperator 0x1dbbfc2dc00 <line:271:18, col:38> 'char *'
|   | | |-ImplicitCastExpr 0x1dbbfc2daf8 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1dbbfc2da90 <col:18> 'int' lvalue ParmVar 0x1dbbfc2d320 'match' 'int'
|   | | |-ImplicitCastExpr 0x1dbbfc2db10 <col:26> 'char *' <ArrayToPointerDecay>
|   | | | `-StringLiteral 0x1dbbfc2dab0 <col:26> 'char [8]' lvalue "matches"
|   | | `-ImplicitCastExpr 0x1dbbfc2db28 <col:38> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1dbbfc2dad0 <col:38> 'char [15]' lvalue "does not match"
|   | `-ImplicitCastExpr 0x1dbbfc2dd40 <col:56> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1dbbfc2dc30 <col:56> 'const char *' lvalue ParmVar 0x1dbbfc2d3a0 'name' 'const char *'
|   |-IfStmt 0x1dbbfc2de48 <line:272:5, line:273:9>
|   | |-CallExpr 0x1dbbfc2dde0 <line:272:9, col:25> 'int'
|   | | |-ImplicitCastExpr 0x1dbbfc2ddc8 <col:9> 'int (*)(const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1dbbfc2dd58 <col:9> 'int (const char *)' Function 0x1dbbfc20b70 'is_exception' 'int (const char *)'
|   | | `-ImplicitCastExpr 0x1dbbfc2de20 <col:22> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x1dbbfc2de08 <col:22> 'char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x1dbbfc2dd78 <col:22> 'char [1024]' lvalue Var 0x1dbbfc2d6e8 'msg' 'char [1024]'
|   | `-ReturnStmt 0x1dbbfc2de38 <line:273:9>
|   |-CallExpr 0x1dbbfc2dfa8 <line:274:5, col:13> 'int'
|   | |-ImplicitCastExpr 0x1dbbfc2df90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1dbbfc2df50 <col:5> 'int ()' Function 0x1dbbfc2de88 'puts' 'int ()'
|   | `-ImplicitCastExpr 0x1dbbfc2dfd0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x1dbbfc2df70 <col:10> 'char [1024]' lvalue Var 0x1dbbfc2d6e8 'msg' 'char [1024]'
|   `-UnaryOperator 0x1dbbfc25fb0 <line:275:5, col:7> 'int' prefix '++'
|     `-DeclRefExpr 0x1dbbfc25f90 <col:7> 'int' lvalue Var 0x1dbbfc2d0a0 'errors' 'int'
|-FunctionDecl 0x1dbbfc26258 <line:278:1, line:331:1> line:278:13 invalid run_cert 'void (int *, const char *, const struct set_name_fn *)' static
| |-ParmVarDecl 0x1dbbfc26020 <col:22, col:28> col:28 invalid crt 'int *'
| |-ParmVarDecl 0x1dbbfc260a0 <col:33, col:45> col:45 used nameincert 'const char *'
| |-ParmVarDecl 0x1dbbfc26130 <line:279:22, col:48> col:48 used fn 'const struct set_name_fn *'
| `-CompoundStmt 0x1dbbfc34350 <line:280:1, line:331:1>
|   |-DeclStmt 0x1dbbfc263e0 <line:281:5, col:37>
|   | `-VarDecl 0x1dbbfc26340 <col:5, col:32> col:24 used pname 'const char *const *' cinit
|   |   `-ImplicitCastExpr 0x1dbbfc263c8 <col:32> 'const char *const *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x1dbbfc263a8 <col:32> 'const char *const [52]' lvalue Var 0x1dbbfc1dce0 'names' 'const char *const [52]'
|   `-WhileStmt 0x1dbbfc34338 <line:282:5, line:330:5>
|     |-ImplicitCastExpr 0x1dbbfc26460 <line:282:12, col:13> 'const char *' <LValueToRValue>
|     | `-UnaryOperator 0x1dbbfc26448 <col:12, col:13> 'const char *const' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x1dbbfc26430 <col:13> 'const char *const *' <LValueToRValue>
|     |     `-DeclRefExpr 0x1dbbfc263f8 <col:13> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|     `-CompoundStmt 0x1dbbfc342a8 <col:20, line:330:5>
|       |-DeclStmt 0x1dbbfc26828 <line:283:9, col:59>
|       | `-VarDecl 0x1dbbfc26490 <col:9, col:58> col:13 used samename 'int' cinit
|       |   `-BinaryOperator 0x1dbbfc26808 <col:24, col:58> 'int' '=='
|       |     |-CallExpr 0x1dbbfc26780 <col:24, col:53> 'int'
|       |     | |-ImplicitCastExpr 0x1dbbfc26768 <col:24> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x1dbbfc26678 <col:24> 'int (const char *, const char *)' Function 0x1dbbfc264f8 'strcasecmp' 'int (const char *, const char *)'
|       |     | |-ImplicitCastExpr 0x1dbbfc267b0 <col:35> 'const char *' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x1dbbfc266b0 <col:35> 'const char *' lvalue ParmVar 0x1dbbfc260a0 'nameincert' 'const char *'
|       |     | `-ImplicitCastExpr 0x1dbbfc267c8 <col:47, col:48> 'const char *' <LValueToRValue>
|       |     |   `-UnaryOperator 0x1dbbfc26720 <col:47, col:48> 'const char *const' lvalue prefix '*' cannot overflow
|       |     |     `-ImplicitCastExpr 0x1dbbfc26708 <col:48> 'const char *const *' <LValueToRValue>
|       |     |       `-DeclRefExpr 0x1dbbfc266e8 <col:48> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       |     `-IntegerLiteral 0x1dbbfc267e0 <col:58> 'int' 0
|       |-DeclStmt 0x1dbbfc269c0 <line:284:9, col:40>
|       | `-VarDecl 0x1dbbfc26850 <col:9, col:39> col:16 used namelen 'size_t':'unsigned long long' cinit
|       |   `-CallExpr 0x1dbbfc26980 <col:26, col:39> 'unsigned long long'
|       |     |-ImplicitCastExpr 0x1dbbfc26968 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x1dbbfc268b8 <col:26> 'unsigned long long (const char *)' Function 0x1dbbfbd3da0 'strlen' 'unsigned long long (const char *)'
|       |     `-ImplicitCastExpr 0x1dbbfc269a8 <col:33, col:34> 'const char *' <LValueToRValue>
|       |       `-UnaryOperator 0x1dbbfc26910 <col:33, col:34> 'const char *const' lvalue prefix '*' cannot overflow
|       |         `-ImplicitCastExpr 0x1dbbfc268f8 <col:34> 'const char *const *' <LValueToRValue>
|       |           `-DeclRefExpr 0x1dbbfc268d8 <col:34> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       |-DeclStmt 0x1dbbfc26cc8 <line:285:9, col:37>
|       | `-VarDecl 0x1dbbfc269f0 <col:9, col:36> col:15 used name 'char *' cinit
|       |   `-ImplicitCastExpr 0x1dbbfc26cb0 <col:22, col:36> 'char *' <BitCast>
|       |     `-CallExpr 0x1dbbfc26c70 <col:22, col:36> 'void *'
|       |       |-ImplicitCastExpr 0x1dbbfc26c58 <col:22> 'void *(*)(unsigned long long)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x1dbbfc26ba0 <col:22> 'void *(unsigned long long)' Function 0x1dbbfc26a90 'malloc' 'void *(unsigned long long)'
|       |       `-ImplicitCastExpr 0x1dbbfc26c98 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |         `-DeclRefExpr 0x1dbbfc26bd8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1dbbfc26850 'namelen' 'size_t':'unsigned long long'
|       |-DeclStmt 0x1dbbfc26df8 <line:286:9, col:23>
|       | |-VarDecl 0x1dbbfc26cf8 <col:9, col:13> col:13 used match 'int'
|       | `-VarDecl 0x1dbbfc26d78 <col:9, col:20> col:20 used ret 'int'
|       |-CallExpr 0x1dbbfc2f020 <line:287:9, col:37> 'void *'
|       | |-ImplicitCastExpr 0x1dbbfc26f48 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1dbbfc26e10 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1dbbfbc7288 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1dbbfc2f070 <col:16> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x1dbbfc2f058 <col:16> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1dbbfc26e30 <col:16> 'char *' lvalue Var 0x1dbbfc269f0 'name' 'char *'
|       | |-ImplicitCastExpr 0x1dbbfc2f0a0 <col:22, col:23> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x1dbbfc2f088 <col:22, col:23> 'const char *' <LValueToRValue>
|       | |   `-UnaryOperator 0x1dbbfc26ea0 <col:22, col:23> 'const char *const' lvalue prefix '*' cannot overflow
|       | |     `-ImplicitCastExpr 0x1dbbfc26e88 <col:23> 'const char *const *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x1dbbfc26e68 <col:23> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       | `-ImplicitCastExpr 0x1dbbfc2f0b8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x1dbbfc26eb8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1dbbfc26850 'namelen' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x1dbbfc2f380 <line:290:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x1dbbfc2f308 <col:9> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-UnaryOperator 0x1dbbfc2f368 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1dbbfc2f340 <col:18> 'int' 1
|       |-IfStmt 0x1dbbfc2fb28 <line:291:9, line:300:21> has_else
|       | |-BinaryOperator 0x1dbbfc2f400 <line:291:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x1dbbfc2f3e8 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1dbbfc2f3a0 <col:13> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       | | `-IntegerLiteral 0x1dbbfc2f3c0 <col:19> 'int' 0
|       | |-CompoundStmt 0x1dbbfc2f650 <col:22, line:294:9>
|       | | `-UnaryOperator 0x1dbbfc2f638 <line:293:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x1dbbfc2f618 <col:15> 'int' lvalue Var 0x1dbbfc2d0a0 'errors' 'int'
|       | `-IfStmt 0x1dbbfc2fb00 <line:294:16, line:300:21> has_else
|       |   |-ImplicitCastExpr 0x1dbbfc2f6e8 <line:294:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x1dbbfc2f6b8 <col:20, col:24> 'const int' lvalue ->host 0x1dbbfc2c060
|       |   |   `-ImplicitCastExpr 0x1dbbfc2f6a0 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x1dbbfc2f668 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x1dbbfc2f9e0 <col:30, line:299:9>
|       |   | |-IfStmt 0x1dbbfc2f870 <line:295:13, line:296:25>
|       |   | | |-BinaryOperator 0x1dbbfc2f7e8 <line:295:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x1dbbfc2f760 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x1dbbfc2f748 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x1dbbfc2f700 <col:17> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x1dbbfc2f720 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x1dbbfc2f7d0 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x1dbbfc2f7b8 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x1dbbfc2f780 <col:30> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       |   | | `-BinaryOperator 0x1dbbfc2f850 <line:296:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x1dbbfc2f808 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x1dbbfc2f828 <col:25> 'int' 1
|       |   | `-IfStmt 0x1dbbfc2f9c8 <line:297:13, line:298:25>
|       |   |   |-BinaryOperator 0x1dbbfc2f940 <line:297:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x1dbbfc2f8e8 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x1dbbfc2f8d0 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x1dbbfc2f888 <col:17> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x1dbbfc2f8a8 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x1dbbfc2f928 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x1dbbfc2f908 <col:29> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       |   |   `-BinaryOperator 0x1dbbfc2f9a8 <line:298:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x1dbbfc2f960 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |   |     `-IntegerLiteral 0x1dbbfc2f980 <col:25> 'int' 0
|       |   `-IfStmt 0x1dbbfc2fae8 <line:299:16, line:300:21>
|       |     |-BinaryOperator 0x1dbbfc2fa60 <line:299:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x1dbbfc2fa48 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x1dbbfc2fa00 <col:20> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |     | `-IntegerLiteral 0x1dbbfc2fa20 <col:27> 'int' 1
|       |     `-BinaryOperator 0x1dbbfc2fac8 <line:300:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x1dbbfc2fa80 <col:13> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |       `-IntegerLiteral 0x1dbbfc2faa0 <col:21> 'int' 1
|       |-CallExpr 0x1dbbfc2fcb0 <line:301:9, col:60> 'void'
|       | |-ImplicitCastExpr 0x1dbbfc2fc98 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1dbbfc2fb50 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x1dbbfc2d568 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x1dbbfc2fcf8 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc2fb70 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x1dbbfc2fd28 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x1dbbfc2fd10 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x1dbbfc2fb90 <col:27> 'char [5]' lvalue "host"
|       | |-ImplicitCastExpr 0x1dbbfc2fd40 <col:35> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc2fbb0 <col:35> 'const char *' lvalue ParmVar 0x1dbbfc260a0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x1dbbfc2fd58 <col:47> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc2fbd0 <col:47> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-ImplicitCastExpr 0x1dbbfc2fd70 <col:54, col:55> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x1dbbfc2fc28 <col:54, col:55> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x1dbbfc2fc10 <col:55> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1dbbfc2fbf0 <col:55> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       |-BinaryOperator 0x1dbbfc2fef0 <line:305:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x1dbbfc2fe90 <col:9> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-UnaryOperator 0x1dbbfc2fed8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1dbbfc2feb0 <col:18> 'int' 1
|       |-IfStmt 0x1dbbfc32510 <line:306:9, line:315:21> has_else
|       | |-BinaryOperator 0x1dbbfc2ff70 <line:306:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x1dbbfc2ff58 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1dbbfc2ff10 <col:13> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       | | `-IntegerLiteral 0x1dbbfc2ff30 <col:19> 'int' 0
|       | |-CompoundStmt 0x1dbbfc32068 <col:22, line:309:9>
|       | | `-UnaryOperator 0x1dbbfc32050 <line:308:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x1dbbfc2fff0 <col:15> 'int' lvalue Var 0x1dbbfc2d0a0 'errors' 'int'
|       | `-IfStmt 0x1dbbfc324e8 <line:309:16, line:315:21> has_else
|       |   |-ImplicitCastExpr 0x1dbbfc320e8 <line:309:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x1dbbfc320b8 <col:20, col:24> 'const int' lvalue ->host 0x1dbbfc2c060
|       |   |   `-ImplicitCastExpr 0x1dbbfc320a0 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x1dbbfc32080 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x1dbbfc323c8 <col:30, line:314:9>
|       |   | |-IfStmt 0x1dbbfc32258 <line:310:13, line:311:25>
|       |   | | |-BinaryOperator 0x1dbbfc321d0 <line:310:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x1dbbfc32160 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x1dbbfc32148 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x1dbbfc32100 <col:17> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x1dbbfc32120 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x1dbbfc321b8 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x1dbbfc321a0 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x1dbbfc32180 <col:30> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       |   | | `-BinaryOperator 0x1dbbfc32238 <line:311:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x1dbbfc321f0 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x1dbbfc32210 <col:25> 'int' 1
|       |   | `-IfStmt 0x1dbbfc323b0 <line:312:13, line:313:25>
|       |   |   |-BinaryOperator 0x1dbbfc32328 <line:312:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x1dbbfc322d0 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x1dbbfc322b8 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x1dbbfc32270 <col:17> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x1dbbfc32290 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x1dbbfc32310 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x1dbbfc322f0 <col:29> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       |   |   `-BinaryOperator 0x1dbbfc32390 <line:313:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x1dbbfc32348 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |   |     `-IntegerLiteral 0x1dbbfc32368 <col:25> 'int' 0
|       |   `-IfStmt 0x1dbbfc324d0 <line:314:16, line:315:21>
|       |     |-BinaryOperator 0x1dbbfc32448 <line:314:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x1dbbfc32430 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x1dbbfc323e8 <col:20> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |     | `-IntegerLiteral 0x1dbbfc32408 <col:27> 'int' 1
|       |     `-BinaryOperator 0x1dbbfc324b0 <line:315:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x1dbbfc32468 <col:13> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |       `-IntegerLiteral 0x1dbbfc32488 <col:21> 'int' 1
|       |-CallExpr 0x1dbbfc32650 <line:316:9, col:73> 'void'
|       | |-ImplicitCastExpr 0x1dbbfc32638 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1dbbfc32538 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x1dbbfc2d568 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x1dbbfc32698 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc32558 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x1dbbfc326c8 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x1dbbfc326b0 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x1dbbfc32578 <col:27> 'char [18]' lvalue "host-no-wildcards"
|       | |-ImplicitCastExpr 0x1dbbfc326e0 <col:48> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc325a8 <col:48> 'const char *' lvalue ParmVar 0x1dbbfc260a0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x1dbbfc326f8 <col:60> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc325c8 <col:60> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-ImplicitCastExpr 0x1dbbfc32710 <col:67, col:68> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x1dbbfc32620 <col:67, col:68> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x1dbbfc32608 <col:68> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1dbbfc325e8 <col:68> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       |-BinaryOperator 0x1dbbfc32920 <line:319:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x1dbbfc328c0 <col:9> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-UnaryOperator 0x1dbbfc32908 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1dbbfc328e0 <col:18> 'int' 1
|       |-IfStmt 0x1dbbfc32ec0 <line:320:9, line:326:21> has_else
|       | |-ImplicitCastExpr 0x1dbbfc329a8 <line:320:13, col:17> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x1dbbfc32978 <col:13, col:17> 'const int' lvalue ->email 0x1dbbfc2c0d0
|       | |   `-ImplicitCastExpr 0x1dbbfc32960 <col:13> 'const struct set_name_fn *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1dbbfc32940 <col:13> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       | |-CompoundStmt 0x1dbbfc32de8 <col:24, line:325:9>
|       | | |-IfStmt 0x1dbbfc32ad0 <line:321:13, line:322:25>
|       | | | |-BinaryOperator 0x1dbbfc32a48 <line:321:17, col:25> 'int' '&&'
|       | | | | |-ImplicitCastExpr 0x1dbbfc32a30 <col:17> 'int' <LValueToRValue>
|       | | | | | `-DeclRefExpr 0x1dbbfc329c0 <col:17> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       | | | | `-UnaryOperator 0x1dbbfc32a18 <col:24, col:25> 'int' prefix '!' cannot overflow
|       | | | |   `-ImplicitCastExpr 0x1dbbfc32a00 <col:25> 'int' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x1dbbfc329e0 <col:25> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       | | | `-BinaryOperator 0x1dbbfc32ab0 <line:322:17, col:25> 'int' '='
|       | | |   |-DeclRefExpr 0x1dbbfc32a68 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | | |   `-IntegerLiteral 0x1dbbfc32a88 <col:25> 'int' 1
|       | | `-IfStmt 0x1dbbfc32dd0 <line:323:13, line:324:25>
|       | |   |-BinaryOperator 0x1dbbfc32d48 <line:323:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '&&'
|       | |   | |-BinaryOperator 0x1dbbfc32b70 <.//openssl//file_jk/before\test\v3nametest.c:323:17, col:25> 'int' '&&'
|       | |   | | |-UnaryOperator 0x1dbbfc32b20 <col:17, col:18> 'int' prefix '!' cannot overflow
|       | |   | | | `-ImplicitCastExpr 0x1dbbfc32b08 <col:18> 'int' <LValueToRValue>
|       | |   | | |   `-DeclRefExpr 0x1dbbfc32ae8 <col:18> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       | |   | | `-ImplicitCastExpr 0x1dbbfc32b58 <col:25> 'int' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x1dbbfc32b38 <col:25> 'int' lvalue Var 0x1dbbfc26490 'samename' 'int'
|       | |   | `-BinaryOperator 0x1dbbfc32d28 <col:37, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|       | |   |   |-CallExpr 0x1dbbfc32c40 <.//openssl//file_jk/before\test\v3nametest.c:323:37, col:59> 'char *'
|       | |   |   | |-ImplicitCastExpr 0x1dbbfc32c28 <col:37> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | |   |   | | `-DeclRefExpr 0x1dbbfc32b90 <col:37> 'char *(const char *, int)' Function 0x1dbbfbd6480 'strchr' 'char *(const char *, int)'
|       | |   |   | |-ImplicitCastExpr 0x1dbbfc32c70 <col:44> 'const char *' <LValueToRValue>
|       | |   |   | | `-DeclRefExpr 0x1dbbfc32bb0 <col:44> 'const char *' lvalue ParmVar 0x1dbbfc260a0 'nameincert' 'const char *'
|       | |   |   | `-CharacterLiteral 0x1dbbfc32bd0 <col:56> 'int' 64
|       | |   |   `-ImplicitCastExpr 0x1dbbfc32d10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|       | |   |     `-ParenExpr 0x1dbbfc32cf0 <col:17, col:27> 'void *'
|       | |   |       `-CStyleCastExpr 0x1dbbfc32cc8 <col:18, col:26> 'void *' <NullToPointer>
|       | |   |         `-IntegerLiteral 0x1dbbfc32c88 <col:26> 'int' 0
|       | |   `-BinaryOperator 0x1dbbfc32db0 <.//openssl//file_jk/before\test\v3nametest.c:324:17, col:25> 'int' '='
|       | |     |-DeclRefExpr 0x1dbbfc32d68 <col:17> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | |     `-IntegerLiteral 0x1dbbfc32d88 <col:25> 'int' 0
|       | `-IfStmt 0x1dbbfc32ea8 <line:325:16, line:326:21>
|       |   |-ImplicitCastExpr 0x1dbbfc32e28 <line:325:20> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1dbbfc32e08 <col:20> 'int' lvalue Var 0x1dbbfc26d78 'ret' 'int'
|       |   `-BinaryOperator 0x1dbbfc32e88 <line:326:13, col:21> 'int' '='
|       |     |-DeclRefExpr 0x1dbbfc32e40 <col:13> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       |     `-IntegerLiteral 0x1dbbfc32e60 <col:21> 'int' 1
|       |-CallExpr 0x1dbbfc32ff0 <line:327:9, col:61> 'void'
|       | |-ImplicitCastExpr 0x1dbbfc32fd8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1dbbfc32ee8 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x1dbbfc2d568 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x1dbbfc33038 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc32f08 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x1dbbfc26130 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x1dbbfc34088 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x1dbbfc34070 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x1dbbfc32f28 <col:27> 'char [6]' lvalue "email"
|       | |-ImplicitCastExpr 0x1dbbfc340a0 <col:36> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc32f48 <col:36> 'const char *' lvalue ParmVar 0x1dbbfc260a0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x1dbbfc340b8 <col:48> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x1dbbfc32f68 <col:48> 'int' lvalue Var 0x1dbbfc26cf8 'match' 'int'
|       | `-ImplicitCastExpr 0x1dbbfc340d0 <col:55, col:56> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x1dbbfc32fc0 <col:55, col:56> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x1dbbfc32fa8 <col:56> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1dbbfc32f88 <col:56> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       |-UnaryOperator 0x1dbbfc34108 <line:328:9, col:11> 'const char *const *' prefix '++'
|       | `-DeclRefExpr 0x1dbbfc340e8 <col:11> 'const char *const *' lvalue Var 0x1dbbfc26340 'pname' 'const char *const *'
|       `-CallExpr 0x1dbbfc34268 <line:329:9, col:18> 'int'
|         |-ImplicitCastExpr 0x1dbbfc34250 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1dbbfc34210 <col:9> 'int ()' Function 0x1dbbfc34148 'free' 'int ()'
|         `-ImplicitCastExpr 0x1dbbfc34290 <col:14> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x1dbbfc34230 <col:14> 'char *' lvalue Var 0x1dbbfc269f0 'name' 'char *'
|-FunctionDecl 0x1dbbfc264f8 <line:283:24> col:24 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1dbbfc26598 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1dbbfc26600 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1dbbfc26a90 <line:285:22> col:22 implicit used malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1dbbfc26b30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
`-FunctionDecl 0x1dbbfc34440 <line:333:1, line:355:1> line:333:5 main 'int (void)'
  `-CompoundStmt 0x1dbbfc34e60 <line:334:1, line:355:1>
    |-DeclStmt 0x1dbbfc345c0 <line:335:5, col:45>
    | `-VarDecl 0x1dbbfc34520 <col:5, col:37> col:31 used pfn 'const struct set_name_fn *' cinit
    |   `-ImplicitCastExpr 0x1dbbfc345a8 <col:37> 'const struct set_name_fn *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x1dbbfc34588 <col:37> 'const struct set_name_fn []' lvalue Var 0x1dbbfc2c1e8 'name_fns' 'const struct set_name_fn []'
    |-WhileStmt 0x1dbbfc34d38 <line:336:5, line:353:5>
    | |-ImplicitCastExpr 0x1dbbfc34658 <line:336:12, col:17> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x1dbbfc34628 <col:12, col:17> 'const char *const' lvalue ->name 0x1dbbfc2bff0
    | |   `-ImplicitCastExpr 0x1dbbfc34610 <col:12> 'const struct set_name_fn *' <LValueToRValue>
    | |     `-DeclRefExpr 0x1dbbfc345d8 <col:12> 'const struct set_name_fn *' lvalue Var 0x1dbbfc34520 'pfn' 'const struct set_name_fn *'
    | `-CompoundStmt 0x1dbbfc34d10 <col:23, line:353:5>
    |   |-DeclStmt 0x1dbbfc34728 <line:337:9, col:41>
    |   | `-VarDecl 0x1dbbfc34688 <col:9, col:36> col:28 used pname 'const char *const *' cinit
    |   |   `-ImplicitCastExpr 0x1dbbfc34710 <col:36> 'const char *const *' <ArrayToPointerDecay>
    |   |     `-DeclRefExpr 0x1dbbfc346f0 <col:36> 'const char *const [52]' lvalue Var 0x1dbbfc1dce0 'names' 'const char *const [52]'
    |   |-WhileStmt 0x1dbbfc34cc0 <line:338:9, line:351:9>
    |   | |-ImplicitCastExpr 0x1dbbfc347a8 <line:338:16, col:17> 'const char *' <LValueToRValue>
    |   | | `-UnaryOperator 0x1dbbfc34790 <col:16, col:17> 'const char *const' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x1dbbfc34778 <col:17> 'const char *const *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x1dbbfc34740 <col:17> 'const char *const *' lvalue Var 0x1dbbfc34688 'pname' 'const char *const *'
    |   | `-CompoundStmt 0x1dbbfc34c98 <col:24, line:351:9>
    |   |   |-IfStmt 0x1dbbfc34900 <line:340:13, line:343:13>
    |   |   | |-OpaqueValueExpr 0x1dbbfc348e8 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x1dbbfc348d0 <line:340:30, line:343:13>
    |   |   |   `-ReturnStmt 0x1dbbfc348c0 <line:342:17, col:24>
    |   |   |     `-IntegerLiteral 0x1dbbfc34898 <col:24> 'int' 1
    |   |   |-IfStmt 0x1dbbfc34ac8 <line:344:13, line:347:13>
    |   |   | |-OpaqueValueExpr 0x1dbbfc34ab0 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x1dbbfc34a98 <line:344:40, line:347:13>
    |   |   |   `-ReturnStmt 0x1dbbfc34a88 <line:346:17, col:24>
    |   |   |     `-IntegerLiteral 0x1dbbfc34a60 <col:24> 'int' 1
    |   |   `-UnaryOperator 0x1dbbfc34c80 <line:350:13, col:15> 'const char *const *' prefix '++'
    |   |     `-DeclRefExpr 0x1dbbfc34c60 <col:15> 'const char *const *' lvalue Var 0x1dbbfc34688 'pname' 'const char *const *'
    |   `-UnaryOperator 0x1dbbfc34cf8 <line:352:9, col:11> 'const struct set_name_fn *' prefix '++'
    |     `-DeclRefExpr 0x1dbbfc34cd8 <col:11> 'const struct set_name_fn *' lvalue Var 0x1dbbfc34520 'pfn' 'const struct set_name_fn *'
    `-ReturnStmt 0x1dbbfc34e50 <line:354:5, col:29>
      `-ConditionalOperator 0x1dbbfc34e20 <col:12, col:29> 'int'
        |-BinaryOperator 0x1dbbfc34db0 <col:12, col:21> 'int' '>'
        | |-ImplicitCastExpr 0x1dbbfc34d98 <col:12> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x1dbbfc34d50 <col:12> 'int' lvalue Var 0x1dbbfc2d0a0 'errors' 'int'
        | `-IntegerLiteral 0x1dbbfc34d70 <col:21> 'int' 0
        |-IntegerLiteral 0x1dbbfc34dd0 <col:25> 'int' 1
        `-IntegerLiteral 0x1dbbfc34df8 <col:29> 'int' 0
